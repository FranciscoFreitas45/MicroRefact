{"pt.iscte.hospital.entities.Receptionist":{"qualifiedName":"pt.iscte.hospital.entities.Receptionist","begin":1,"end":45,"isInterface":false,"annotations":["@Entity","@PrimaryKeyJoinColumn(name \u003d \"receptionist_id\")"],"variables":["List\u003cGrantedAuthority\u003e roles"],"instance_variables":[],"dependencies":[],"methods":{"getAuthorities":{"name":"getAuthorities","parametersDataType":[],"returnDataType":["GrantedAuthority"]}},"myMethods":{"getAuthorities":{"name":"getAuthorities","lineBegin":39,"lineEnd":44,"annotations":["@Override"],"returnDataType":["List\u003cGrantedAuthority\u003e"],"identifier":["List","GrantedAuthority"],"parametersDataType":[],"variables":[],"body":"{\n    List\u003cGrantedAuthority\u003e roles \u003d new ArrayList\u003c\u003e();\n    roles.add(new SimpleGrantedAuthority(Role.ROLE_RECEPTIONIST.name()));\n    return roles;\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"super","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.Employee"},{"scopeName":"super","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.Employee"}],"implementedTypes":[],"extendedTypes":["Employee","pt.iscte.hospital.entities.Employee"],"imports":["org.springframework.security.core.GrantedAuthority","org.springframework.security.core.authority.SimpleGrantedAuthority","pt.iscte.hospital.security.Role","javax.persistence","java.time.LocalDate","java.util.ArrayList","java.util.List"]},"pt.iscte.hospital.controllers.ReceptionistController":{"qualifiedName":"pt.iscte.hospital.controllers.ReceptionistController","begin":1,"end":631,"isInterface":false,"annotations":["@Controller"],"variables":["SpecialityService specialityService","UserService userService","NationalityService nationalityService","AppointmentService appointmentService","SpecialityValidationService specialityValidationService","UserValidationService userValidationService","RegistrationService registrationService","DoctorService doctorService","SlotService slotService","PatientService patientService","PatientWaitingAppointmentService patientWaitingAppointmentService","Common common","MakeAppointment makeAppointment","MessageService messageService","SlotValidationService slotValidationService","Long WAITING_PERIOD_HOURS","Long WAITING_PERIOD_FOR_NEXT_DAY_HOURS","LocalDate dateToday","LocalDate date","List\u003cAppointment\u003e appointments","Speciality speciality","List\u003cNationality\u003e nationalities","List\u003cSpeciality\u003e specialities","List\u003cNationality\u003e nationalities","List\u003cSpeciality\u003e specialities","Speciality speciality","List\u003cNationality\u003e nationalities","List\u003cSpeciality\u003e specialities","User userLogged","List\u003cSpeciality\u003e specialities","LocalDate todayDate","String chosenDay","int dayOfToday","int year","int monthOfTodayNr","List\u003cDay\u003e calendar","String strMonth","String nextMonth","String previousMonth","LocalDate todayDate","LocalDate chosenDate","int dayOfToday","int calYear","int calMonth","String strMonth","String nextMonthDate","String previousMonthDate","int previousArrowState","int nextArrowState","Doctor doctor","List\u003cSpeciality\u003e specialities","Speciality speciality","List\u003cDoctor\u003e doctors","List\u003cSlot\u003e slots","List\u003cDay\u003e calendar","boolean hasSelectDoctor","boolean hasSlotForDoctor","boolean hasSlotForDoctorDate","Slot extraSlot","String newSlotId","ModelMap modelMap","long pacientes_confirmadosEspera","long pacientes_faltaram","Slot slot","Appointment appointment","Patient patient","PatientWaitingAppointment patientWaitingAppointment","LocalDateTime dateTime","Message message","LocalDateTime dateTimeToday","List\u003cSlot\u003e result","LocalDateTime localDateTime","Slot slot","LocalDate slotDate","LocalTime slotTime","LocalDateTime slotDateTime","LocalDateTime todayDateTime","LocalDateTime result","int duration","List\u003cTimeInterval\u003e timeIntervalList","List\u003cDayOfWeek\u003e weekDaysList","LocalDate todayDate","LocalDate nextMonth","int year1","int month1","int year2","int month2","List\u003cDoctor\u003e doctors"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"SpecialityService","variable":"specialityService","lineBegin":36,"lineEnd":36},{"annotations":[],"modifier":"private ","identifier":[],"type":"UserService","variable":"userService","lineBegin":37,"lineEnd":37},{"annotations":[],"modifier":"private ","identifier":[],"type":"NationalityService","variable":"nationalityService","lineBegin":38,"lineEnd":38},{"annotations":[],"modifier":"private ","identifier":[],"type":"AppointmentService","variable":"appointmentService","lineBegin":39,"lineEnd":39},{"annotations":[],"modifier":"private ","identifier":[],"type":"SpecialityValidationService","variable":"specialityValidationService","lineBegin":40,"lineEnd":40},{"annotations":[],"modifier":"private ","identifier":[],"type":"UserValidationService","variable":"userValidationService","lineBegin":41,"lineEnd":41},{"annotations":[],"modifier":"private ","identifier":[],"type":"RegistrationService","variable":"registrationService","lineBegin":42,"lineEnd":42},{"annotations":[],"modifier":"private ","identifier":[],"type":"DoctorService","variable":"doctorService","lineBegin":43,"lineEnd":43},{"annotations":[],"modifier":"private ","identifier":[],"type":"SlotService","variable":"slotService","lineBegin":44,"lineEnd":44},{"annotations":[],"modifier":"private ","identifier":[],"type":"PatientService","variable":"patientService","lineBegin":45,"lineEnd":45},{"annotations":[],"modifier":"private ","identifier":[],"type":"PatientWaitingAppointmentService","variable":"patientWaitingAppointmentService","lineBegin":46,"lineEnd":46},{"annotations":[],"modifier":"private ","identifier":[],"type":"Common","variable":"common","lineBegin":47,"lineEnd":47},{"annotations":[],"modifier":"private ","identifier":[],"type":"MakeAppointment","variable":"makeAppointment","lineBegin":48,"lineEnd":48},{"annotations":[],"modifier":"private ","identifier":[],"type":"MessageService","variable":"messageService","lineBegin":49,"lineEnd":49},{"annotations":[],"modifier":"private ","identifier":[],"type":"SlotValidationService","variable":"slotValidationService","lineBegin":50,"lineEnd":50},{"annotations":[],"modifier":"private ","identifier":[],"type":"Long","variable":"WAITING_PERIOD_HOURS","lineBegin":51,"lineEnd":51},{"annotations":[],"modifier":"private ","identifier":[],"type":"Long","variable":"WAITING_PERIOD_FOR_NEXT_DAY_HOURS","lineBegin":52,"lineEnd":52}],"dependencies":["pt.iscte.hospital.services.SpecialityService","pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.NationalityService","pt.iscte.hospital.services.AppointmentService","pt.iscte.hospital.services.validation.SpecialityValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.RegistrationService","pt.iscte.hospital.services.user.DoctorService","pt.iscte.hospital.services.SlotService","pt.iscte.hospital.services.user.PatientService","pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.threads.MakeAppointment","pt.iscte.hospital.services.MessageService","pt.iscte.hospital.services.validation.SlotValidationService","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Nationality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Nationality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Nationality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.objects.utils.TimeInterval","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Receptionist","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Receptionist","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User"],"methods":{"showMakeExtraAppointment":{"name":"showMakeExtraAppointment","parametersDataType":["ModelMap","String","Long"],"returnDataType":["String"]},"showInvoiceForm":{"name":"showInvoiceForm","parametersDataType":["ModelMap"],"returnDataType":["String"]},"addUser":{"name":"addUser","parametersDataType":["Doctor","Patient","Receptionist","ModelMap","String","String","String"],"returnDataType":["String"]},"showWaitingList":{"name":"showWaitingList","parametersDataType":["ModelMap"],"returnDataType":["String"]},"showReceptionistMain":{"name":"showReceptionistMain","parametersDataType":["ModelMap"],"returnDataType":["String"]},"addSpecialityPage":{"name":"addSpecialityPage","parametersDataType":["ModelMap"],"returnDataType":["String"]},"generateSlotsDoctor":{"name":"generateSlotsDoctor","parametersDataType":["Doctor"],"returnDataType":["void"]},"filterPastHour":{"name":"filterPastHour","parametersDataType":["Slot"],"returnDataType":["Slot"]},"doImprimir":{"name":"doImprimir","parametersDataType":["Doctor","Patient","Receptionist","String","String","ModelMap"],"returnDataType":["String"]},"replyTime":{"name":"replyTime","parametersDataType":["Slot"],"returnDataType":["LocalDateTime"]},"addUserPage":{"name":"addUserPage","parametersDataType":["ModelMap"],"returnDataType":["String"]},"currentUser":{"name":"currentUser","parametersDataType":[],"returnDataType":["User"]},"infoForTopMain":{"name":"infoForTopMain","parametersDataType":["LocalDate"],"returnDataType":["ModelMap"]},"valitationAddAccount":{"name":"valitationAddAccount","parametersDataType":["User","String"],"returnDataType":["void"]},"addSpecialityService":{"name":"addSpecialityService","parametersDataType":["String","double","ModelMap"],"returnDataType":["String"]},"saveAppointment":{"name":"saveAppointment","parametersDataType":["String","String","Long"],"returnDataType":["void"]},"makeExtraAppointmentService":{"name":"makeExtraAppointmentService","parametersDataType":["ModelMap","String","String","String","String","String","String","String","Long","LocalTime","LocalTime"],"returnDataType":["String"]}},"myMethods":{"showMakeExtraAppointment":{"name":"showMakeExtraAppointment","lineBegin":302,"lineEnd":334,"annotations":["@GetMapping(value \u003d \"/receptionist/make-extraAppointment/{userIdStr}/{patientWaitingAppointmentId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"String","variable":"userIdStr","qualifedType":""},{"type":"Long","variable":"patientWaitingAppointmentId","qualifedType":""}],"variables":[{"type":"List\u003cSpeciality\u003e","variable":"specialities","qualifedType":"pt.iscte.hospital.entities.Speciality"},{"type":"LocalDate","variable":"todayDate","qualifedType":""},{"type":"String","variable":"chosenDay","qualifedType":""},{"type":"int","variable":"dayOfToday","qualifedType":""},{"type":"int","variable":"year","qualifedType":""},{"type":"int","variable":"monthOfTodayNr","qualifedType":""},{"type":"List\u003cDay\u003e","variable":"calendar","qualifedType":"pt.iscte.hospital.objects.utils.Day"},{"type":"String","variable":"strMonth","qualifedType":""},{"type":"String","variable":"nextMonth","qualifedType":""},{"type":"String","variable":"previousMonth","qualifedType":""}],"body":"{\n    List\u003cSpeciality\u003e specialities \u003d specialityService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    LocalDate todayDate \u003d LocalDate.now();\n    String chosenDay \u003d todayDate.format(FORMATTER);\n    int dayOfToday \u003d todayDate.getDayOfMonth();\n    int year \u003d todayDate.getYear();\n    int monthOfTodayNr \u003d todayDate.getMonth().getValue();\n    List\u003cDay\u003e calendar \u003d Calendar.calendarList(year, monthOfTodayNr);\n    String strMonth \u003d Month.searchMonth(monthOfTodayNr);\n    String nextMonth \u003d todayDate.plusMonths(1).format(FORMATTER);\n    String previousMonth \u003d todayDate.minusMonths(1).format(FORMATTER);\n    modelMap.put(\"specialities\", specialities);\n    modelMap.put(\"calendarDays\", calendar);\n    modelMap.put(\"nextMonth\", nextMonth);\n    modelMap.put(\"previousMonth\", previousMonth);\n    modelMap.put(\"previousArrowState\", 0);\n    modelMap.put(\"nextArrowState\", 1);\n    modelMap.put(\"dayOfToday\", dayOfToday);\n    modelMap.put(\"year\", year);\n    modelMap.put(\"strMonth\", strMonth);\n    modelMap.put(\"chosenDay\", chosenDay);\n    modelMap.put(\"userIdStr\", userIdStr);\n    modelMap.put(\"patientWaitingAppointmentId\", patientWaitingAppointmentId);\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"receptionist/make-extraAppointment\";\n}","methodInvocations":[{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"todayDate","methodName":"format","targetClassName":""},{"scopeName":"todayDate","methodName":"getDayOfMonth","targetClassName":""},{"scopeName":"todayDate","methodName":"getYear","targetClassName":""},{"scopeName":"todayDate","methodName":"getMonth","targetClassName":""},{"scopeName":"todayDate.getMonth()","methodName":"getValue","targetClassName":""},{"scopeName":"Calendar","methodName":"calendarList","targetClassName":"pt.iscte.hospital.objects.utils.Calendar"},{"scopeName":"todayDate","methodName":"plusMonths","targetClassName":""},{"scopeName":"todayDate.plusMonths(1)","methodName":"format","targetClassName":""},{"scopeName":"todayDate","methodName":"minusMonths","targetClassName":""},{"scopeName":"todayDate.minusMonths(1)","methodName":"format","targetClassName":""},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"showInvoiceForm":{"name":"showInvoiceForm","lineBegin":261,"lineEnd":267,"annotations":["@GetMapping(value \u003d \"/receptionist/invoice-form\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    modelMap.put(\"user_logged\", userLogged);\n    return \"receptionist/invoice-form\";\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"}]},"addUser":{"name":"addUser","lineBegin":159,"lineEnd":230,"annotations":["@PostMapping(value \u003d \"/receptionist/add-user\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"Patient","variable":"patient","qualifedType":""},{"type":"Receptionist","variable":"receptionist","qualifedType":""},{"type":"ModelMap","variable":"mpError","qualifedType":""},{"type":"String","variable":"confirmarPassword2","qualifedType":""},{"type":"String","variable":"account","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[{"type":"List\u003cNationality\u003e","variable":"nationalities","qualifedType":"pt.iscte.hospital.entities.Nationality"},{"type":"List\u003cSpeciality\u003e","variable":"specialities","qualifedType":"pt.iscte.hospital.entities.Speciality"},{"type":"Speciality","variable":"speciality","qualifedType":""}],"body":"{\n    List\u003cNationality\u003e nationalities \u003d nationalityService.findAll();\n    List\u003cSpeciality\u003e specialities \u003d specialityService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    mpError.addAllAttributes(common.sideNavMap());\n    mpError.put(\"nationalities\", nationalities);\n    mpError.put(\"specialities\", specialities);\n    mpError.put(\"specialityName\", specialityName);\n    mpError.put(\"account\", account);\n    if (account.equals(\"Médico\")) {\n        mpError.put(\"medicalCondition\", true);\n    } else {\n        mpError.put(\"medicalCondition\", false);\n    }\n    // add doctor account\n    if (doctor.getAccount().equals(\"Médico\")) {\n        valitationAddAccount(doctor, confirmarPassword2);\n        userValidationService.setUser(doctor).validLicenseNumber();\n        userValidationService.setUser(doctor).validSpeciality(specialityName);\n        if (!userValidationService.isValid()) {\n            mpError.addAllAttributes(userValidationService.getErrorModelMap());\n            mpError.put(\"user\", doctor);\n            return \"receptionist/add-user\";\n        }\n        // Add user to database\n        registrationService.encryptPassword(doctor);\n        Speciality speciality \u003d specialityService.findByName(specialityName);\n        doctor.setSpeciality(speciality);\n        userService.addUser(doctor);\n        // generate slots for doctor\n        generateSlotsDoctor(doctor);\n    }\n    // add patient account\n    if (patient.getAccount().equals(\"Utente\")) {\n        valitationAddAccount(patient, confirmarPassword2);\n        if (!userValidationService.isValid()) {\n            mpError.addAllAttributes(userValidationService.getErrorModelMap());\n            mpError.put(\"user\", patient);\n            return \"receptionist/add-user\";\n        }\n        // Add user to database\n        registrationService.encryptPassword(patient);\n        userService.addUser(patient);\n    }\n    // add recepcionist account\n    if (receptionist.getAccount().equals(\"Recepcionista\")) {\n        valitationAddAccount(receptionist, confirmarPassword2);\n        if (!userValidationService.isValid()) {\n            mpError.addAllAttributes(userValidationService.getErrorModelMap());\n            mpError.put(\"user\", receptionist);\n            return \"receptionist/add-user\";\n        }\n        // Add user to database\n        registrationService.encryptPassword(receptionist);\n        userService.addUser(receptionist);\n    }\n    return \"redirect:/receptionist/main\";\n}","methodInvocations":[{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"doctor","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"userValidationService","methodName":"setUser","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.setUser(doctor)","methodName":"validLicenseNumber","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"setUser","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.setUser(doctor)","methodName":"validSpeciality","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"registrationService","methodName":"encryptPassword","targetClassName":"pt.iscte.hospital.services.RegistrationService"},{"scopeName":"specialityService","methodName":"findByName","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"doctor","methodName":"setSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"patient","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patient.getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"userValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"registrationService","methodName":"encryptPassword","targetClassName":"pt.iscte.hospital.services.RegistrationService"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"receptionist","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"receptionist.getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"userValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"registrationService","methodName":"encryptPassword","targetClassName":"pt.iscte.hospital.services.RegistrationService"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"}]},"showWaitingList":{"name":"showWaitingList","lineBegin":101,"lineEnd":114,"annotations":["@GetMapping(value \u003d \"/receptionist/waiting-list\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"}],"body":"{\n    LocalDate date \u003d LocalDate.now();\n    List\u003cAppointment\u003e appointments \u003d appointmentService.findAllBySlotDateAndAppointmentStatus(date, MARCADA.getStateNr());\n    appointments.sort(null);\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"appointments\", appointments);\n    return \"receptionist/waiting-list\";\n}","methodInvocations":[{"scopeName":"appointmentService","methodName":"findAllBySlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointments","methodName":"sort","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"showReceptionistMain":{"name":"showReceptionistMain","lineBegin":90,"lineEnd":98,"annotations":["@GetMapping(value \u003d \"/receptionist/main\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"LocalDate","variable":"dateToday","qualifedType":""}],"body":"{\n    LocalDate dateToday \u003d LocalDate.now();\n    modelMap.addAllAttributes(infoForTopMain(dateToday));\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"receptionist/main\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"addSpecialityPage":{"name":"addSpecialityPage","lineBegin":117,"lineEnd":123,"annotations":["@GetMapping(value \u003d \"/receptionist/add-speciality\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[],"body":"{\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"receptionist/add-speciality\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"generateSlotsDoctor":{"name":"generateSlotsDoctor","lineBegin":599,"lineEnd":629,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""}],"variables":[{"type":"int","variable":"duration","qualifedType":""},{"type":"List\u003cTimeInterval\u003e","variable":"timeIntervalList","qualifedType":"pt.iscte.hospital.objects.utils.TimeInterval"},{"type":"LocalDate","variable":"todayDate","qualifedType":""},{"type":"LocalDate","variable":"nextMonth","qualifedType":""},{"type":"int","variable":"year1","qualifedType":""},{"type":"int","variable":"month1","qualifedType":""},{"type":"int","variable":"year2","qualifedType":""},{"type":"int","variable":"month2","qualifedType":""},{"type":"List\u003cDoctor\u003e","variable":"doctors","qualifedType":"pt.iscte.hospital.entities.Doctor"}],"body":"{\n    int duration \u003d 60;\n    List\u003cTimeInterval\u003e timeIntervalList \u003d new ArrayList\u003c\u003e();\n    List\u003cDayOfWeek\u003e weekDaysList \u003d new ArrayList\u003c\u003e();\n    LocalDate todayDate \u003d LocalDate.now();\n    LocalDate nextMonth \u003d todayDate.plusMonths(1);\n    int year1 \u003d todayDate.getYear();\n    int month1 \u003d todayDate.getMonth().getValue();\n    int year2 \u003d nextMonth.getYear();\n    int month2 \u003d nextMonth.getMonth().getValue();\n    List\u003cDoctor\u003e doctors \u003d new ArrayList\u003c\u003e();\n    doctors.add(doctor);\n    timeIntervalList.add(new TimeInterval(LocalTime.of(9, 0), LocalTime.of(12, 0)));\n    timeIntervalList.add(new TimeInterval(LocalTime.of(13, 0), LocalTime.of(17, 0)));\n    weekDaysList.add(DayOfWeek.MONDAY);\n    weekDaysList.add(DayOfWeek.TUESDAY);\n    weekDaysList.add(DayOfWeek.WEDNESDAY);\n    weekDaysList.add(DayOfWeek.THURSDAY);\n    weekDaysList.add(DayOfWeek.FRIDAY);\n    weekDaysList.add(DayOfWeek.SATURDAY);\n    weekDaysList.add(DayOfWeek.SUNDAY);\n    slotService.generateSlots(duration, timeIntervalList, weekDaysList, year1, month1, doctors);\n    slotService.generateSlots(duration, timeIntervalList, weekDaysList, year2, month2, doctors);\n}","methodInvocations":[{"scopeName":"todayDate","methodName":"plusMonths","targetClassName":""},{"scopeName":"todayDate","methodName":"getYear","targetClassName":""},{"scopeName":"todayDate","methodName":"getMonth","targetClassName":""},{"scopeName":"todayDate.getMonth()","methodName":"getValue","targetClassName":""},{"scopeName":"nextMonth","methodName":"getYear","targetClassName":""},{"scopeName":"nextMonth","methodName":"getMonth","targetClassName":""},{"scopeName":"nextMonth.getMonth()","methodName":"getValue","targetClassName":""},{"scopeName":"doctors","methodName":"add","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"timeIntervalList","methodName":"add","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"timeIntervalList","methodName":"add","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"slotService","methodName":"generateSlots","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotService","methodName":"generateSlots","targetClassName":"pt.iscte.hospital.services.SlotService"}]},"filterPastHour":{"name":"filterPastHour","lineBegin":573,"lineEnd":583,"annotations":[],"returnDataType":["List\u003cSlot\u003e"],"identifier":["List","Slot"],"parametersDataType":[{"type":"List\u003cSlot\u003e","variable":"slotList","qualifedType":""}],"variables":[{"type":"LocalDateTime","variable":"dateTimeToday","qualifedType":""},{"type":"List\u003cSlot\u003e","variable":"result","qualifedType":"pt.iscte.hospital.entities.Slot"},{"type":"LocalDateTime","variable":"localDateTime","qualifedType":""},{"type":"Slot","variable":"slot","qualifedType":""}],"body":"{\n    LocalDateTime dateTimeToday \u003d LocalDateTime.now();\n    List\u003cSlot\u003e result \u003d new ArrayList\u003c\u003e();\n    for (Slot slot : slotList) {\n        LocalDateTime localDateTime \u003d LocalDateTime.of(slot.getDate(), slot.getTimeBegin());\n        if (localDateTime.isAfter(dateTimeToday)) {\n            result.add(slot);\n        }\n    }\n    return result;\n}","methodInvocations":[{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"localDateTime","methodName":"isAfter","targetClassName":""},{"scopeName":"result","methodName":"add","targetClassName":"pt.iscte.hospital.entities.Slot"}]},"doImprimir":{"name":"doImprimir","lineBegin":233,"lineEnd":259,"annotations":["@PostMapping(value \u003d \"/receptionist/imprimir\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"Doctor","variable":"user","qualifedType":""},{"type":"Patient","variable":"patient","qualifedType":""},{"type":"Receptionist","variable":"receptionist","qualifedType":""},{"type":"String","variable":"account","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"List\u003cNationality\u003e","variable":"nationalities","qualifedType":"pt.iscte.hospital.entities.Nationality"},{"type":"List\u003cSpeciality\u003e","variable":"specialities","qualifedType":"pt.iscte.hospital.entities.Speciality"}],"body":"{\n    List\u003cNationality\u003e nationalities \u003d nationalityService.findAll();\n    List\u003cSpeciality\u003e specialities \u003d specialityService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"nationalities\", nationalities);\n    modelMap.put(\"specialities\", specialities);\n    modelMap.put(\"specialityName\", specialityName);\n    modelMap.put(\"account\", account);\n    if (account.equals(\"Médico\")) {\n        modelMap.put(\"medicalCondition\", true);\n    } else {\n        modelMap.put(\"medicalCondition\", false);\n    }\n    modelMap.addAllAttributes(common.sideNavMap());\n    if (user.getAccount().equals(\"Médico\")) {\n        modelMap.put(\"user\", user);\n    } else if (patient.getAccount().equals(\"Utente\")) {\n        modelMap.put(\"user\", patient);\n    } else if (receptionist.getAccount().equals(\"Recepcionista\")) {\n        modelMap.put(\"user\", receptionist);\n    }\n    return \"receptionist/add-user\";\n}","methodInvocations":[{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"user","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"user.getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"patient","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patient.getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"receptionist","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"receptionist.getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Receptionist"}]},"replyTime":{"name":"replyTime","lineBegin":585,"lineEnd":597,"annotations":[],"returnDataType":["LocalDateTime"],"identifier":[],"parametersDataType":[{"type":"Slot","variable":"slot","qualifedType":""}],"variables":[{"type":"LocalDate","variable":"slotDate","qualifedType":""},{"type":"LocalTime","variable":"slotTime","qualifedType":""},{"type":"LocalDateTime","variable":"slotDateTime","qualifedType":""},{"type":"LocalDateTime","variable":"todayDateTime","qualifedType":""},{"type":"LocalDateTime","variable":"result","qualifedType":""}],"body":"{\n    LocalDate slotDate \u003d slot.getDate();\n    LocalTime slotTime \u003d slot.getTimeBegin();\n    LocalDateTime slotDateTime \u003d LocalDateTime.of(slotDate, slotTime);\n    LocalDateTime todayDateTime \u003d LocalDateTime.now();\n    LocalDateTime result \u003d todayDateTime;\n    if (slotDateTime.isBefore(todayDateTime.plusHours(24L))) {\n        result \u003d todayDateTime.plusHours(WAITING_PERIOD_FOR_NEXT_DAY_HOURS);\n    } else {\n        result \u003d todayDateTime.plusHours(WAITING_PERIOD_HOURS);\n    }\n    return result;\n}","methodInvocations":[{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"todayDateTime","methodName":"plusHours","targetClassName":""},{"scopeName":"slotDateTime","methodName":"isBefore","targetClassName":""},{"scopeName":"todayDateTime","methodName":"plusHours","targetClassName":""},{"scopeName":"todayDateTime","methodName":"plusHours","targetClassName":""}]},"addUserPage":{"name":"addUserPage","lineBegin":148,"lineEnd":157,"annotations":["@GetMapping(value \u003d \"/receptionist/add-user\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"List\u003cNationality\u003e","variable":"nationalities","qualifedType":"pt.iscte.hospital.entities.Nationality"},{"type":"List\u003cSpeciality\u003e","variable":"specialities","qualifedType":"pt.iscte.hospital.entities.Speciality"}],"body":"{\n    List\u003cNationality\u003e nationalities \u003d nationalityService.findAll();\n    List\u003cSpeciality\u003e specialities \u003d specialityService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    modelMap.put(\"nationalities\", nationalities);\n    modelMap.put(\"specialities\", specialities);\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"receptionist/add-user\";\n}","methodInvocations":[{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"currentUser":{"name":"currentUser","lineBegin":514,"lineEnd":516,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return userService.currentUser();\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"}]},"infoForTopMain":{"name":"infoForTopMain","lineBegin":519,"lineEnd":535,"annotations":[],"returnDataType":["ModelMap"],"identifier":[],"parametersDataType":[{"type":"LocalDate","variable":"dateToday","qualifedType":""}],"variables":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"long","variable":"pacientes_confirmadosEspera","qualifedType":""},{"type":"long","variable":"pacientes_faltaram","qualifedType":""}],"body":"{\n    ModelMap modelMap \u003d new ModelMap();\n    long pacientes_confirmadosEspera \u003d appointmentService.countBySlotDateAndAppointmentStatusAndHasChecked(dateToday, AppointmentState.MARCADA.getStateNr(), true);\n    long pacientes_faltaram \u003d appointmentService.countBySlotDateAndAppointmentStatus(dateToday, AppointmentState.NAO_REALIZADA.getStateNr());\n    modelMap.put(\"pacientes_confirmadosEspera\", pacientes_confirmadosEspera);\n    modelMap.put(\"pacientes_faltaram\", pacientes_faltaram);\n    return modelMap;\n}","methodInvocations":[{"scopeName":"appointmentService","methodName":"countBySlotDateAndAppointmentStatusAndHasChecked","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"countBySlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""}]},"valitationAddAccount":{"name":"valitationAddAccount","lineBegin":269,"lineEnd":299,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"User","variable":"user","qualifedType":""},{"type":"String","variable":"confirmarPassword2","qualifedType":""}],"variables":[],"body":"{\n    userValidationService.clear().setUser(user).validName().validPassword().samePassword(confirmarPassword2).validPhone().validPostCode().validSex().validEmail().validEmail2().validUsername().validDocumentType().validDocumentNumber().validDocumentNumberUnique().validPatientNumber().validPatientNumberUnique().validNif().validNifUnique().validCity().validAccount().validBirthday().validNationality().validAddress();\n    // add default image.\n    if (user.getSex().equals(\"Masculino\")) {\n        user.setPhotoURL(\"user-male.jpg\");\n    } else {\n        user.setPhotoURL(\"user-female.jpg\");\n    }\n}","methodInvocations":[{"scopeName":"userValidationService","methodName":"clear","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear()","methodName":"setUser","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user)","methodName":"validName","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName()","methodName":"validPassword","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPassword()","methodName":"samePassword","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"user","methodName":"getSex","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getSex()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.User"}]},"addSpecialityService":{"name":"addSpecialityService","lineBegin":125,"lineEnd":146,"annotations":["@PostMapping(value \u003d \"/receptionist/add-speciality\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"String","variable":"name_speciality","qualifedType":""},{"type":"double","variable":"price","qualifedType":""},{"type":"ModelMap","variable":"mpError","qualifedType":""}],"variables":[{"type":"Speciality","variable":"speciality","qualifedType":""}],"body":"{\n    Speciality speciality \u003d new Speciality(name_speciality, price);\n    mpError.addAllAttributes(common.sideNavMap());\n    // Check if speciality is valid\n    specialityValidationService.clear().setSpeciality(speciality).validName().validLength().validPrice();\n    if (!specialityValidationService.isValid()) {\n        mpError.addAllAttributes(specialityValidationService.getErrorModelMap());\n        return \"receptionist/add-speciality\";\n    }\n    specialityService.addSpeciality(speciality);\n    return (\"redirect:/receptionist/main\");\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"specialityValidationService","methodName":"clear","targetClassName":"pt.iscte.hospital.services.validation.SpecialityValidationService"},{"scopeName":"specialityValidationService.clear()","methodName":"setSpeciality","targetClassName":"pt.iscte.hospital.services.validation.SpecialityValidationService"},{"scopeName":"specialityValidationService.clear().setSpeciality(speciality)","methodName":"validName","targetClassName":"pt.iscte.hospital.services.validation.SpecialityValidationService"},{"scopeName":"specialityValidationService.clear().setSpeciality(speciality).validName()","methodName":"validLength","targetClassName":"pt.iscte.hospital.services.validation.SpecialityValidationService"},{"scopeName":"specialityValidationService.clear().setSpeciality(speciality).validName().validLength()","methodName":"validPrice","targetClassName":"pt.iscte.hospital.services.validation.SpecialityValidationService"},{"scopeName":"specialityValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.SpecialityValidationService"},{"scopeName":"specialityValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.SpecialityValidationService"},{"scopeName":"specialityService","methodName":"addSpeciality","targetClassName":"pt.iscte.hospital.services.SpecialityService"}]},"saveAppointment":{"name":"saveAppointment","lineBegin":538,"lineEnd":571,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"slotId","qualifedType":""},{"type":"String","variable":"userIdStr","qualifedType":""},{"type":"Long","variable":"patientWaitingAppointmentId","qualifedType":""}],"variables":[{"type":"Slot","variable":"slot","qualifedType":""},{"type":"Appointment","variable":"appointment","qualifedType":""},{"type":"Patient","variable":"patient","qualifedType":""},{"type":"PatientWaitingAppointment","variable":"patientWaitingAppointment","qualifedType":""},{"type":"LocalDateTime","variable":"dateTime","qualifedType":""},{"type":"Message","variable":"message","qualifedType":""}],"body":"{\n    // Encontrar slot por id\n    Slot slot \u003d slotService.findBySlotId(Long.parseLong(slotId));\n    // Marcar slot como marcada/indisponível\n    slot.setAvailable(false);\n    // Actualizar slot na base de dados\n    slotService.saveSlot(slot);\n    // Adicionar consulta à base de dados\n    Appointment appointment \u003d new Appointment();\n    Patient patient \u003d patientService.findByUserId(Long.parseLong(userIdStr));\n    appointment.setPatient(patient);\n    appointment.setSlot(slot);\n    appointment.setAppointmentStatus(MARCADA.getStateNr());\n    appointmentService.saveAppointment(appointment);\n    // remover pedido de marcacao de consulta em lista de espera\n    PatientWaitingAppointment patientWaitingAppointment \u003d patientWaitingAppointmentService.findByPatientWaitingAppointmentId(patientWaitingAppointmentId);\n    patientWaitingAppointment.setClosed(true);\n    patientWaitingAppointment.setLimitDateToReply(replyTime(slot));\n    patientWaitingAppointment.setPosition(0L);\n    patientWaitingAppointment.setSlot(slot);\n    patientWaitingAppointmentService.save(patientWaitingAppointment);\n    LocalDateTime dateTime \u003d LocalDateTime.of(slot.getDate(), slot.getTimeBegin());\n    Message message \u003d makeAppointment.mensagemConfirmacao(patientWaitingAppointment, dateTime);\n    messageService.save(message);\n    System.out.println(\"Sucesso: consulta marcada - \" + appointment + slot);\n}","methodInvocations":[{"scopeName":"slotService","methodName":"findBySlotId","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"patientService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"appointment","methodName":"setPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"patientWaitingAppointmentService","methodName":"findByPatientWaitingAppointmentId","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointment","methodName":"setClosed","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment","methodName":"setLimitDateToReply","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment","methodName":"setPosition","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment","methodName":"setSlot","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"makeAppointment","methodName":"mensagemConfirmacao","targetClassName":"pt.iscte.hospital.threads.MakeAppointment"},{"scopeName":"messageService","methodName":"save","targetClassName":"pt.iscte.hospital.services.MessageService"}]},"makeExtraAppointmentService":{"name":"makeExtraAppointmentService","lineBegin":336,"lineEnd":511,"annotations":["@PostMapping(value \u003d { \"/receptionist/make-extraAppointment/{userIdStr}/{patientWaitingAppointmentId}/{saveOption}\", \"/receptionist/make-extraAppointment/{userIdStr}/{patientWaitingAppointmentId}\" })"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"doctorId","qualifedType":""},{"type":"String","variable":"slotId","qualifedType":""},{"type":"String","variable":"chosenDay","qualifedType":""},{"type":"String","variable":"arrowMonth","qualifedType":""},{"type":"String","variable":"saveOption","qualifedType":""},{"type":"String","variable":"userIdStr","qualifedType":""},{"type":"Long","variable":"patientWaitingAppointmentId","qualifedType":""},{"type":"LocalTime","variable":"timeBegin","qualifedType":""},{"type":"LocalTime","variable":"timeEnd","qualifedType":""}],"variables":[{"type":"LocalDate","variable":"todayDate","qualifedType":""},{"type":"LocalDate","variable":"chosenDate","qualifedType":""},{"type":"int","variable":"dayOfToday","qualifedType":""},{"type":"int","variable":"calYear","qualifedType":""},{"type":"int","variable":"calMonth","qualifedType":""},{"type":"String","variable":"strMonth","qualifedType":""},{"type":"String","variable":"nextMonthDate","qualifedType":""},{"type":"String","variable":"previousMonthDate","qualifedType":""},{"type":"int","variable":"previousArrowState","qualifedType":""},{"type":"int","variable":"nextArrowState","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"List\u003cSpeciality\u003e","variable":"specialities","qualifedType":"pt.iscte.hospital.entities.Speciality"},{"type":"Speciality","variable":"speciality","qualifedType":""},{"type":"List\u003cDoctor\u003e","variable":"doctors","qualifedType":"pt.iscte.hospital.entities.Doctor"},{"type":"List\u003cSlot\u003e","variable":"slots","qualifedType":"pt.iscte.hospital.entities.Slot"},{"type":"List\u003cDay\u003e","variable":"calendar","qualifedType":"pt.iscte.hospital.objects.utils.Day"},{"type":"boolean","variable":"hasSelectDoctor","qualifedType":""},{"type":"boolean","variable":"hasSlotForDoctor","qualifedType":""},{"type":"boolean","variable":"hasSlotForDoctorDate","qualifedType":""},{"type":"Slot","variable":"extraSlot","qualifedType":""},{"type":"String","variable":"newSlotId","qualifedType":""}],"body":"{\n    // **********\n    LocalDate todayDate \u003d LocalDate.now();\n    LocalDate chosenDate;\n    int dayOfToday;\n    int calYear;\n    int calMonth;\n    String strMonth;\n    String nextMonthDate;\n    String previousMonthDate;\n    int previousArrowState;\n    int nextArrowState;\n    // Foi selecionado um mês\n    if (arrowMonth !\u003d null) {\n        chosenDate \u003d LocalDate.parse(arrowMonth, FORMATTER);\n        if (chosenDate.getMonthValue() !\u003d todayDate.getMonthValue()) {\n            chosenDay \u003d chosenDate.withDayOfMonth(1).format(FORMATTER);\n        } else {\n            chosenDay \u003d todayDate.format(FORMATTER);\n        }\n    // Foi selecionado um dia\n    } else if (chosenDay !\u003d null \u0026\u0026 arrowMonth \u003d\u003d null) {\n        chosenDate \u003d LocalDate.parse(chosenDay, FORMATTER);\n    // Não existe dia selecionado\n    } else {\n        chosenDate \u003d todayDate;\n        chosenDay \u003d todayDate.format(FORMATTER);\n    }\n    calYear \u003d chosenDate.getYear();\n    calMonth \u003d chosenDate.getMonthValue();\n    strMonth \u003d Month.searchMonth(chosenDate.getMonthValue());\n    nextMonthDate \u003d chosenDate.plusMonths(1).format(FORMATTER);\n    previousMonthDate \u003d chosenDate.minusMonths(1).format(FORMATTER);\n    // Lógica das setas + Condição para limitar a selecção de dias de calendário, dias anteriores ao dia actual\n    if (chosenDate.getMonthValue() \u003d\u003d todayDate.getMonthValue()) {\n        previousArrowState \u003d 0;\n        nextArrowState \u003d 1;\n        dayOfToday \u003d todayDate.getDayOfMonth();\n    } else {\n        previousArrowState \u003d 1;\n        // colocar a 1 se não existir limitação para mostrar meses\n        nextArrowState \u003d 0;\n        dayOfToday \u003d 0;\n    }\n    // **********\n    // Se campos vazios\n    Doctor doctor \u003d null;\n    if (doctorId \u003d\u003d null || doctorId.isEmpty()) {\n        doctorId \u003d \"\";\n    } else {\n        doctor \u003d doctorService.findByUserId(Long.parseLong(doctorId));\n    }\n    if (specialityName \u003d\u003d null || specialityName.isEmpty()) {\n        specialityName \u003d \"\";\n    }\n    if (saveOption \u003d\u003d null) {\n        saveOption \u003d \"\";\n    }\n    // envio de dados para a página\n    // alterar a página para receber dados\n    List\u003cSpeciality\u003e specialities \u003d specialityService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    Speciality speciality \u003d specialityService.findByName(specialityName);\n    List\u003cDoctor\u003e doctors \u003d doctorService.findAllBySpecialityOrderByNameAsc(speciality);\n    List\u003cSlot\u003e slots \u003d slotService.findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc(doctor, true, chosenDate);\n    slots \u003d filterPastHour(slots);\n    List\u003cDay\u003e calendar \u003d Calendar.calendarList(calYear, calMonth);\n    boolean hasSelectDoctor \u003d !doctorId.isEmpty();\n    if (!doctorId.isEmpty()) {\n        calendar \u003d slotService.calendarColor(calendar, doctor);\n    } else if (!specialityName.isEmpty()) {\n        calendar \u003d slotService.calendarColor(calendar, specialityName);\n    }\n    boolean hasSlotForDoctor \u003d slotService.hasDisponibilidadeNoMes(calendar, doctor);\n    boolean hasSlotForDoctorDate \u003d slotService.hasDisponibilidadeNoDia(chosenDate, doctor);\n    modelMap.put(\"hasSlotForDoctor\", hasSlotForDoctor);\n    modelMap.put(\"hasSelectDoctor\", hasSelectDoctor);\n    modelMap.put(\"hasSlotForDoctorDate\", hasSlotForDoctorDate);\n    if (saveOption.equals(\"extra\")) {\n        // criar slot extra\n        Slot extraSlot \u003d new Slot(doctor, chosenDate, timeBegin, timeEnd);\n        // validar slot extra\n        slotValidationService.clear().setSlot(extraSlot).validSlot();\n        if (!slotValidationService.isValid()) {\n            modelMap.addAllAttributes(slotValidationService.getErrorModelMap());\n            modelMap.put(\"specialities\", specialities);\n            modelMap.put(\"doctors\", doctors);\n            modelMap.put(\"slots\", slots);\n            modelMap.put(\"search_speciality\", specialityName);\n            modelMap.put(\"search_doctor\", doctorId);\n            modelMap.put(\"search_slot\", slotId);\n            modelMap.put(\"calendarDays\", calendar);\n            modelMap.put(\"nextMonth\", nextMonthDate);\n            modelMap.put(\"previousMonth\", previousMonthDate);\n            modelMap.put(\"previousArrowState\", previousArrowState);\n            modelMap.put(\"nextArrowState\", nextArrowState);\n            modelMap.put(\"dayOfToday\", dayOfToday);\n            modelMap.put(\"year\", calYear);\n            modelMap.put(\"strMonth\", strMonth);\n            modelMap.put(\"chosenDay\", chosenDay);\n            modelMap.put(\"userIdStr\", userIdStr);\n            modelMap.addAllAttributes(common.sideNavMap());\n            return \"receptionist/make-extraAppointment\";\n        }\n        // salvar slot extra\n        extraSlot.setAvailable(true);\n        slotService.saveSlot(extraSlot);\n        String newSlotId \u003d extraSlot.getSlotId().toString();\n        // marcar consulta para o slot extra criado\n        saveAppointment(newSlotId, userIdStr, patientWaitingAppointmentId);\n        modelMap.put(\"message\", \"A consulta do utente foi marcada com sucesso.\");\n        modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n        modelMap.addAllAttributes(common.sideNavMap());\n        return \"components/alert-message\";\n    }\n    // Marcar consulta\n    if (slotId !\u003d null \u0026\u0026 !slotId.isEmpty() \u0026\u0026 saveOption.equals(\"save\")) {\n        saveAppointment(slotId, userIdStr, patientWaitingAppointmentId);\n        modelMap.put(\"message\", \"A consulta do utente foi marcada com sucesso.\");\n        modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n        modelMap.addAllAttributes(common.sideNavMap());\n        return \"components/alert-message\";\n    }\n    modelMap.put(\"specialities\", specialities);\n    modelMap.put(\"doctors\", doctors);\n    modelMap.put(\"slots\", slots);\n    modelMap.put(\"search_speciality\", specialityName);\n    modelMap.put(\"search_doctor\", doctorId);\n    modelMap.put(\"search_slot\", slotId);\n    modelMap.put(\"calendarDays\", calendar);\n    modelMap.put(\"nextMonth\", nextMonthDate);\n    modelMap.put(\"previousMonth\", previousMonthDate);\n    modelMap.put(\"previousArrowState\", previousArrowState);\n    modelMap.put(\"nextArrowState\", nextArrowState);\n    modelMap.put(\"dayOfToday\", dayOfToday);\n    modelMap.put(\"year\", calYear);\n    modelMap.put(\"strMonth\", strMonth);\n    modelMap.put(\"chosenDay\", chosenDay);\n    modelMap.put(\"userIdStr\", userIdStr);\n    modelMap.addAllAttributes(common.sideNavMap());\n    return (\"receptionist/make-extraAppointment\");\n}","methodInvocations":[{"scopeName":"todayDate","methodName":"format","targetClassName":""},{"scopeName":"chosenDate","methodName":"getMonthValue","targetClassName":""},{"scopeName":"todayDate","methodName":"getMonthValue","targetClassName":""},{"scopeName":"todayDate","methodName":"format","targetClassName":""},{"scopeName":"chosenDate","methodName":"withDayOfMonth","targetClassName":""},{"scopeName":"chosenDate.withDayOfMonth(1)","methodName":"format","targetClassName":""},{"scopeName":"chosenDate","methodName":"getYear","targetClassName":""},{"scopeName":"chosenDate","methodName":"getMonthValue","targetClassName":""},{"scopeName":"chosenDate","methodName":"getMonthValue","targetClassName":""},{"scopeName":"chosenDate","methodName":"plusMonths","targetClassName":""},{"scopeName":"chosenDate.plusMonths(1)","methodName":"format","targetClassName":""},{"scopeName":"chosenDate","methodName":"minusMonths","targetClassName":""},{"scopeName":"chosenDate.minusMonths(1)","methodName":"format","targetClassName":""},{"scopeName":"chosenDate","methodName":"getMonthValue","targetClassName":""},{"scopeName":"todayDate","methodName":"getMonthValue","targetClassName":""},{"scopeName":"todayDate","methodName":"getDayOfMonth","targetClassName":""},{"scopeName":"doctorService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"specialityService","methodName":"findByName","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"doctorService","methodName":"findAllBySpecialityOrderByNameAsc","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"slotService","methodName":"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"Calendar","methodName":"calendarList","targetClassName":"pt.iscte.hospital.objects.utils.Calendar"},{"scopeName":"slotService","methodName":"calendarColor","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotService","methodName":"calendarColor","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotService","methodName":"hasDisponibilidadeNoMes","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotService","methodName":"hasDisponibilidadeNoDia","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotValidationService","methodName":"clear","targetClassName":"pt.iscte.hospital.services.validation.SlotValidationService"},{"scopeName":"slotValidationService.clear()","methodName":"setSlot","targetClassName":"pt.iscte.hospital.services.validation.SlotValidationService"},{"scopeName":"slotValidationService.clear().setSlot(extraSlot)","methodName":"validSlot","targetClassName":"pt.iscte.hospital.services.validation.SlotValidationService"},{"scopeName":"slotValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.SlotValidationService"},{"scopeName":"slotValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.SlotValidationService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"extraSlot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"extraSlot","methodName":"getSlotId","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"extraSlot.getSlotId()","methodName":"toString","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]}},"methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findAllBySlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"specialityValidationService","methodName":"clear","targetClassName":"pt.iscte.hospital.services.validation.SpecialityValidationService"},{"scopeName":"specialityValidationService.clear()","methodName":"setSpeciality","targetClassName":"pt.iscte.hospital.services.validation.SpecialityValidationService"},{"scopeName":"specialityValidationService.clear().setSpeciality(speciality)","methodName":"validName","targetClassName":"pt.iscte.hospital.services.validation.SpecialityValidationService"},{"scopeName":"specialityValidationService.clear().setSpeciality(speciality).validName()","methodName":"validLength","targetClassName":"pt.iscte.hospital.services.validation.SpecialityValidationService"},{"scopeName":"specialityValidationService.clear().setSpeciality(speciality).validName().validLength()","methodName":"validPrice","targetClassName":"pt.iscte.hospital.services.validation.SpecialityValidationService"},{"scopeName":"specialityValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.SpecialityValidationService"},{"scopeName":"specialityValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.SpecialityValidationService"},{"scopeName":"specialityService","methodName":"addSpeciality","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"doctor","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"userValidationService","methodName":"setUser","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.setUser(doctor)","methodName":"validLicenseNumber","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"setUser","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.setUser(doctor)","methodName":"validSpeciality","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"registrationService","methodName":"encryptPassword","targetClassName":"pt.iscte.hospital.services.RegistrationService"},{"scopeName":"specialityService","methodName":"findByName","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"doctor","methodName":"setSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"patient","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patient.getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"userValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"registrationService","methodName":"encryptPassword","targetClassName":"pt.iscte.hospital.services.RegistrationService"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"receptionist","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"receptionist.getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"userValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"registrationService","methodName":"encryptPassword","targetClassName":"pt.iscte.hospital.services.RegistrationService"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"user","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"user.getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"patient","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patient.getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"receptionist","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"receptionist.getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userValidationService","methodName":"clear","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear()","methodName":"setUser","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user)","methodName":"validName","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName()","methodName":"validPassword","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPassword()","methodName":"samePassword","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"user","methodName":"getSex","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getSex()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"Calendar","methodName":"calendarList","targetClassName":"pt.iscte.hospital.objects.utils.Calendar"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"doctorService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"specialityService","methodName":"findByName","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"doctorService","methodName":"findAllBySpecialityOrderByNameAsc","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"slotService","methodName":"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"Calendar","methodName":"calendarList","targetClassName":"pt.iscte.hospital.objects.utils.Calendar"},{"scopeName":"slotService","methodName":"calendarColor","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotService","methodName":"calendarColor","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotService","methodName":"hasDisponibilidadeNoMes","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotService","methodName":"hasDisponibilidadeNoDia","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotValidationService","methodName":"clear","targetClassName":"pt.iscte.hospital.services.validation.SlotValidationService"},{"scopeName":"slotValidationService.clear()","methodName":"setSlot","targetClassName":"pt.iscte.hospital.services.validation.SlotValidationService"},{"scopeName":"slotValidationService.clear().setSlot(extraSlot)","methodName":"validSlot","targetClassName":"pt.iscte.hospital.services.validation.SlotValidationService"},{"scopeName":"slotValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.SlotValidationService"},{"scopeName":"slotValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.SlotValidationService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"extraSlot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"extraSlot","methodName":"getSlotId","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"extraSlot.getSlotId()","methodName":"toString","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"appointmentService","methodName":"countBySlotDateAndAppointmentStatusAndHasChecked","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"countBySlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"slotService","methodName":"findBySlotId","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"patientService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"appointment","methodName":"setPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"patientWaitingAppointmentService","methodName":"findByPatientWaitingAppointmentId","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointment","methodName":"setClosed","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment","methodName":"setLimitDateToReply","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment","methodName":"setPosition","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment","methodName":"setSlot","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"makeAppointment","methodName":"mensagemConfirmacao","targetClassName":"pt.iscte.hospital.threads.MakeAppointment"},{"scopeName":"messageService","methodName":"save","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"generateSlots","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotService","methodName":"generateSlots","targetClassName":"pt.iscte.hospital.services.SlotService"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.data.domain.Sort","org.springframework.stereotype.Controller","org.springframework.ui.ModelMap","org.springframework.web.bind.annotation","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities","pt.iscte.hospital.entities.states.AppointmentState","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.objects.utils","pt.iscte.hospital.services","pt.iscte.hospital.services.user.DoctorService","pt.iscte.hospital.services.user.PatientService","pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.validation.SlotValidationService","pt.iscte.hospital.services.validation.SpecialityValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService","pt.iscte.hospital.threads.MakeAppointment","java.time.DayOfWeek","java.time.LocalDate","java.time.LocalDateTime","java.time.LocalTime","java.util.ArrayList","java.util.List","pt.iscte.hospital.entities.states.AppointmentState.MARCADA","pt.iscte.hospital.objects.utils.Calendar.FORMATTER"]},"pt.iscte.hospital.threads.VerificarVagas":{"qualifiedName":"pt.iscte.hospital.threads.VerificarVagas","begin":1,"end":124,"isInterface":false,"annotations":["@Component"],"variables":["SpecialityService specialityService","DoctorService doctorService","ReceptionistService receptionistService","SlotService slotService","MessageService messageService","String MSG_RECEPTIONIST_DOCTOR","String MSG_RECEPTIONIST_SPECIALITY","String MSG_DOCTOR","List\u003cDoctor\u003e doctorList","List\u003cSpeciality\u003e specialityList","LocalDate todayDate","LocalDate endMonthDate","Long nrAvailableSlots","Doctor doctor","Long nrAvailableSlots","Speciality speciality","List\u003cReceptionist\u003e receptionistList","String artigo","String nome","String especialidade","String msgReceptionist","Message messageDoctor","Message messageReceptionist","Receptionist receptionist","List\u003cReceptionist\u003e receptionistList","String especialidade","String msgReceptionist","Message messageReceptionist","Receptionist receptionist"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"SpecialityService","variable":"specialityService","lineBegin":21,"lineEnd":22},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"DoctorService","variable":"doctorService","lineBegin":23,"lineEnd":24},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"ReceptionistService","variable":"receptionistService","lineBegin":25,"lineEnd":26},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"SlotService","variable":"slotService","lineBegin":27,"lineEnd":28},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"MessageService","variable":"messageService","lineBegin":29,"lineEnd":30},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"MSG_RECEPTIONIST_DOCTOR","lineBegin":32,"lineEnd":32},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"MSG_RECEPTIONIST_SPECIALITY","lineBegin":33,"lineEnd":33},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"MSG_DOCTOR","lineBegin":34,"lineEnd":34}],"dependencies":["pt.iscte.hospital.services.SpecialityService","pt.iscte.hospital.services.user.DoctorService","pt.iscte.hospital.services.user.ReceptionistService","pt.iscte.hospital.services.SlotService","pt.iscte.hospital.services.MessageService","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Receptionist","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Receptionist","pt.iscte.hospital.entities.Receptionist","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Receptionist","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Doctor"],"methods":{"msgReceptionistsAboutSpeciality":{"name":"msgReceptionistsAboutSpeciality","parametersDataType":["Speciality"],"returnDataType":["void"]},"enviarMsgSemVagas":{"name":"enviarMsgSemVagas","parametersDataType":[],"returnDataType":["void"]},"msgReceptionistsAndDoctor":{"name":"msgReceptionistsAndDoctor","parametersDataType":["Doctor"],"returnDataType":["void"]}},"myMethods":{"msgReceptionistsAboutSpeciality":{"name":"msgReceptionistsAboutSpeciality","lineBegin":106,"lineEnd":122,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Speciality","variable":"speciality","qualifedType":""}],"variables":[{"type":"List\u003cReceptionist\u003e","variable":"receptionistList","qualifedType":"pt.iscte.hospital.entities.Receptionist"},{"type":"String","variable":"especialidade","qualifedType":""},{"type":"String","variable":"msgReceptionist","qualifedType":""},{"type":"Message","variable":"messageReceptionist","qualifedType":""},{"type":"Receptionist","variable":"receptionist","qualifedType":""}],"body":"{\n    List\u003cReceptionist\u003e receptionistList \u003d receptionistService.findAll();\n    String especialidade \u003d speciality.getName();\n    String msgReceptionist \u003d String.format(MSG_RECEPTIONIST_SPECIALITY, especialidade);\n    for (Receptionist receptionist : receptionistList) {\n        Message messageReceptionist \u003d new Message(\"Especialidade sem vagas para o mês\", msgReceptionist, receptionist);\n        messageService.save(messageReceptionist);\n        System.out.println(\"Enviada msg de indisponibilidade.\");\n    }\n}","methodInvocations":[{"scopeName":"receptionistService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.user.ReceptionistService"},{"scopeName":"speciality","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"messageService","methodName":"save","targetClassName":"pt.iscte.hospital.services.MessageService"}]},"enviarMsgSemVagas":{"name":"enviarMsgSemVagas","lineBegin":37,"lineEnd":70,"annotations":["// A cada 24h faz verificação\n@Scheduled(fixedRate \u003d 86400000)"],"returnDataType":["void"],"identifier":[],"parametersDataType":[],"variables":[{"type":"List\u003cDoctor\u003e","variable":"doctorList","qualifedType":"pt.iscte.hospital.entities.Doctor"},{"type":"List\u003cSpeciality\u003e","variable":"specialityList","qualifedType":"pt.iscte.hospital.entities.Speciality"},{"type":"LocalDate","variable":"todayDate","qualifedType":""},{"type":"LocalDate","variable":"endMonthDate","qualifedType":""},{"type":"Long","variable":"nrAvailableSlots","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"Long","variable":"nrAvailableSlots","qualifedType":""},{"type":"Speciality","variable":"speciality","qualifedType":""}],"body":"{\n    List\u003cDoctor\u003e doctorList \u003d doctorService.findAll();\n    List\u003cSpeciality\u003e specialityList \u003d specialityService.findAll();\n    LocalDate todayDate \u003d LocalDate.now();\n    LocalDate endMonthDate \u003d LocalDate.now().withDayOfMonth(todayDate.lengthOfMonth());\n    // Mensagens para médico sem vagas\n    for (Doctor doctor : doctorList) {\n        Long nrAvailableSlots \u003d slotService.countAllByIsAvailableAndDoctorAndDateBetween(true, doctor, todayDate, endMonthDate);\n        if (nrAvailableSlots \u003d\u003d 0) {\n            // enviar mensagem recepcionistas // enviar mensagem médico\n            msgReceptionistsAndDoctor(doctor);\n        }\n    }\n    // Mensagens para especialidade sem vagas\n    for (Speciality speciality : specialityList) {\n        Long nrAvailableSlots \u003d slotService.countAllByIsAvailableAndDoctorSpecialityAndDateBetween(true, speciality, todayDate, endMonthDate);\n        if (nrAvailableSlots \u003d\u003d 0) {\n            // enviar mensagem para os recepcionistas\n            msgReceptionistsAboutSpeciality(speciality);\n        }\n    }\n}","methodInvocations":[{"scopeName":"doctorService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"todayDate","methodName":"lengthOfMonth","targetClassName":""},{"scopeName":"slotService","methodName":"countAllByIsAvailableAndDoctorAndDateBetween","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotService","methodName":"countAllByIsAvailableAndDoctorSpecialityAndDateBetween","targetClassName":"pt.iscte.hospital.services.SlotService"}]},"msgReceptionistsAndDoctor":{"name":"msgReceptionistsAndDoctor","lineBegin":72,"lineEnd":104,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""}],"variables":[{"type":"List\u003cReceptionist\u003e","variable":"receptionistList","qualifedType":"pt.iscte.hospital.entities.Receptionist"},{"type":"String","variable":"artigo","qualifedType":""},{"type":"String","variable":"nome","qualifedType":""},{"type":"String","variable":"especialidade","qualifedType":""},{"type":"String","variable":"msgReceptionist","qualifedType":""},{"type":"Message","variable":"messageDoctor","qualifedType":""},{"type":"Message","variable":"messageReceptionist","qualifedType":""},{"type":"Receptionist","variable":"receptionist","qualifedType":""}],"body":"{\n    List\u003cReceptionist\u003e receptionistList \u003d receptionistService.findAll();\n    String artigo \u003d \"\";\n    if (doctor.getSex().equalsIgnoreCase(\"masculino\")) {\n        artigo \u003d \"o\";\n    } else {\n        artigo \u003d \"a\";\n    }\n    String nome \u003d doctor.getTitleAndName();\n    String especialidade \u003d doctor.getSpeciality().getName();\n    String msgReceptionist \u003d String.format(MSG_RECEPTIONIST_DOCTOR, artigo, nome, especialidade);\n    Message messageDoctor \u003d new Message(\"Vagas para o mês preenchidas\", MSG_DOCTOR, doctor);\n    messageService.save(messageDoctor);\n    System.out.println(\"Enviada msg de indisponibilidade.\");\n    for (Receptionist receptionist : receptionistList) {\n        Message messageReceptionist \u003d new Message(\"Médico sem vagas para o mês\", msgReceptionist, receptionist);\n        messageService.save(messageReceptionist);\n        System.out.println(\"Enviada msg de indisponibilidade.\");\n    }\n}","methodInvocations":[{"scopeName":"receptionistService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.user.ReceptionistService"},{"scopeName":"doctor","methodName":"getSex","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getSex()","methodName":"equalsIgnoreCase","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor","methodName":"getTitleAndName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getSpeciality()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"messageService","methodName":"save","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"messageService","methodName":"save","targetClassName":"pt.iscte.hospital.services.MessageService"}]}},"methodInvocations":[{"scopeName":"doctorService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"slotService","methodName":"countAllByIsAvailableAndDoctorAndDateBetween","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotService","methodName":"countAllByIsAvailableAndDoctorSpecialityAndDateBetween","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"receptionistService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.user.ReceptionistService"},{"scopeName":"doctor","methodName":"getSex","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getSex()","methodName":"equalsIgnoreCase","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor","methodName":"getTitleAndName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getSpeciality()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"messageService","methodName":"save","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"messageService","methodName":"save","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"receptionistService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.user.ReceptionistService"},{"scopeName":"speciality","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"messageService","methodName":"save","targetClassName":"pt.iscte.hospital.services.MessageService"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.scheduling.annotation.Scheduled","org.springframework.stereotype.Component","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Receptionist","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.services.MessageService","pt.iscte.hospital.services.SlotService","pt.iscte.hospital.services.SpecialityService","pt.iscte.hospital.services.user.DoctorService","pt.iscte.hospital.services.user.ReceptionistService","java.time.LocalDate","java.util.List"]},"pt.iscte.hospital.services.SlotService":{"qualifiedName":"pt.iscte.hospital.services.SlotService","begin":1,"end":64,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor"],"methods":{"countAllByIsAvailableAndDoctorAndDateBetween":{"name":"countAllByIsAvailableAndDoctorAndDateBetween","parametersDataType":["boolean","Doctor","LocalDate","LocalDate"],"returnDataType":["Long"]},"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc":{"name":"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc","parametersDataType":["Doctor","boolean"],"returnDataType":["Slot"]},"countAllByIsAvailableAndDoctorSpecialityAndDateBetween":{"name":"countAllByIsAvailableAndDoctorSpecialityAndDateBetween","parametersDataType":["boolean","Speciality","LocalDate","LocalDate"],"returnDataType":["Long"]},"countByDoctorAndDate":{"name":"countByDoctorAndDate","parametersDataType":["Doctor","LocalDate"],"returnDataType":["Long"]},"generateSlots":{"name":"generateSlots","parametersDataType":["int","TimeInterval","DayOfWeek","int","int","Doctor"],"returnDataType":["void"]},"saveSlot":{"name":"saveSlot","parametersDataType":["Slot"],"returnDataType":["void"]},"findAll":{"name":"findAll","parametersDataType":["Sort"],"returnDataType":["Slot"]},"findBySlotId":{"name":"findBySlotId","parametersDataType":["Long"],"returnDataType":["Slot"]},"calendarColor":{"name":"calendarColor","parametersDataType":["Day","String"],"returnDataType":["Day"]},"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc":{"name":"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc","parametersDataType":["Doctor","boolean","LocalDate"],"returnDataType":["Slot"]},"countByDoctorSpecialityNameAndIsAvailableAndDate":{"name":"countByDoctorSpecialityNameAndIsAvailableAndDate","parametersDataType":["String","boolean","LocalDate"],"returnDataType":["Long"]},"countByDoctorAndIsAvailableAndDate":{"name":"countByDoctorAndIsAvailableAndDate","parametersDataType":["Doctor","boolean","LocalDate"],"returnDataType":["Long"]},"countByDoctorSpecialityNameAndDate":{"name":"countByDoctorSpecialityNameAndDate","parametersDataType":["String","LocalDate"],"returnDataType":["Long"]},"hasDisponibilidadeNoMes":{"name":"hasDisponibilidadeNoMes","parametersDataType":["Day","Doctor"],"returnDataType":["boolean"]},"findAllByDoctorAndDateOrderByTimeBeginAsc":{"name":"findAllByDoctorAndDateOrderByTimeBeginAsc","parametersDataType":["Doctor","LocalDate"],"returnDataType":["Slot"]},"hasDisponibilidadeNoDia":{"name":"hasDisponibilidadeNoDia","parametersDataType":["LocalDate","Doctor"],"returnDataType":["boolean"]}},"myMethods":{"countAllByIsAvailableAndDoctorAndDateBetween":{"name":"countAllByIsAvailableAndDoctorAndDateBetween","lineBegin":60,"lineEnd":63,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"LocalDate","variable":"dateBegin","qualifedType":""},{"type":"LocalDate","variable":"dateEnd","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc":{"name":"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc","lineBegin":19,"lineEnd":21,"annotations":[],"returnDataType":["List\u003cSlot\u003e"],"identifier":["List","Slot"],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"boolean","variable":"isAvailable","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countAllByIsAvailableAndDoctorSpecialityAndDateBetween":{"name":"countAllByIsAvailableAndDoctorSpecialityAndDateBetween","lineBegin":55,"lineEnd":58,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"Speciality","variable":"speciality","qualifedType":""},{"type":"LocalDate","variable":"dateBegin","qualifedType":""},{"type":"LocalDate","variable":"dateEnd","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countByDoctorAndDate":{"name":"countByDoctorAndDate","lineBegin":30,"lineEnd":30,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"generateSlots":{"name":"generateSlots","lineBegin":40,"lineEnd":45,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"int","variable":"duration","qualifedType":""},{"type":"List\u003cTimeInterval\u003e","variable":"timeIntervalList","qualifedType":""},{"type":"List\u003cDayOfWeek\u003e","variable":"weekDaysList","qualifedType":""},{"type":"int","variable":"year","qualifedType":""},{"type":"int","variable":"month","qualifedType":""},{"type":"List\u003cDoctor\u003e","variable":"doctors","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"saveSlot":{"name":"saveSlot","lineBegin":15,"lineEnd":15,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Slot","variable":"slot","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAll":{"name":"findAll","lineBegin":28,"lineEnd":28,"annotations":[],"returnDataType":["List\u003cSlot\u003e"],"identifier":["List","Slot"],"parametersDataType":[{"type":"Sort","variable":"sort","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findBySlotId":{"name":"findBySlotId","lineBegin":38,"lineEnd":38,"annotations":[],"returnDataType":["Slot"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"slotId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"calendarColor":{"name":"calendarColor","lineBegin":49,"lineEnd":49,"annotations":[],"returnDataType":["List\u003cDay\u003e"],"identifier":["List","Day"],"parametersDataType":[{"type":"List\u003cDay\u003e","variable":"calendar","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc":{"name":"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc","lineBegin":23,"lineEnd":26,"annotations":[],"returnDataType":["List\u003cSlot\u003e"],"identifier":["List","Slot"],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countByDoctorSpecialityNameAndIsAvailableAndDate":{"name":"countByDoctorSpecialityNameAndIsAvailableAndDate","lineBegin":36,"lineEnd":36,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"String","variable":"specialityName","qualifedType":""},{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countByDoctorAndIsAvailableAndDate":{"name":"countByDoctorAndIsAvailableAndDate","lineBegin":32,"lineEnd":32,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countByDoctorSpecialityNameAndDate":{"name":"countByDoctorSpecialityNameAndDate","lineBegin":34,"lineEnd":34,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"String","variable":"specialityName","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"hasDisponibilidadeNoMes":{"name":"hasDisponibilidadeNoMes","lineBegin":51,"lineEnd":51,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"List\u003cDay\u003e","variable":"calendar","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByDoctorAndDateOrderByTimeBeginAsc":{"name":"findAllByDoctorAndDateOrderByTimeBeginAsc","lineBegin":17,"lineEnd":17,"annotations":[],"returnDataType":["List\u003cSlot\u003e"],"identifier":["List","Slot"],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"hasDisponibilidadeNoDia":{"name":"hasDisponibilidadeNoDia","lineBegin":53,"lineEnd":53,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"LocalDate","variable":"day","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.data.domain.Sort","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.objects.utils.TimeInterval","java.time.DayOfWeek","java.time.LocalDate","java.util.List"]},"pt.iscte.hospital.entities.waiting.DoctorWaitingPatient":{"qualifiedName":"pt.iscte.hospital.entities.waiting.DoctorWaitingPatient","begin":1,"end":78,"isInterface":false,"annotations":["@Entity","@Table(name \u003d \"doctor_waiting_patient\")"],"variables":["Long doctorWaitingPatientId","LocalDate date","LocalTime timeFirstCall","LocalTime timeLatestCall","Appointment appointment"],"instance_variables":[{"annotations":["@Id","@GeneratedValue(strategy \u003d GenerationType.IDENTITY)","@Column(name \u003d \"doctor_waiting_patient_id\")"],"modifier":"private ","identifier":[],"type":"Long","variable":"doctorWaitingPatientId","lineBegin":13,"lineEnd":16},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalDate","variable":"date","lineBegin":18,"lineEnd":18},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalTime","variable":"timeFirstCall","lineBegin":19,"lineEnd":19},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalTime","variable":"timeLatestCall","lineBegin":20,"lineEnd":20},{"annotations":["@OneToOne(cascade \u003d CascadeType.ALL)","@JoinColumn(name \u003d \"appointment_id\", referencedColumnName \u003d \"appointment_id\")"],"modifier":"private ","identifier":[],"type":"Appointment","variable":"appointment","lineBegin":22,"lineEnd":24}],"dependencies":["pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.waiting.DoctorWaitingPatient"],"methods":{"getAppointment":{"name":"getAppointment","parametersDataType":[],"returnDataType":["Appointment"]},"getTimeLatestCall":{"name":"getTimeLatestCall","parametersDataType":[],"returnDataType":["LocalTime"]},"getTimeFirstCall":{"name":"getTimeFirstCall","parametersDataType":[],"returnDataType":["LocalTime"]},"setTimeLatestCall":{"name":"setTimeLatestCall","parametersDataType":["LocalTime"],"returnDataType":["void"]},"getTimeLatestCallStr":{"name":"getTimeLatestCallStr","parametersDataType":[],"returnDataType":["String"]},"getDate":{"name":"getDate","parametersDataType":[],"returnDataType":["LocalDate"]},"compareTo":{"name":"compareTo","parametersDataType":["DoctorWaitingPatient"],"returnDataType":["int"]}},"myMethods":{"getAppointment":{"name":"getAppointment","lineBegin":57,"lineEnd":59,"annotations":[],"returnDataType":["Appointment"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return appointment;\n}","methodInvocations":[]},"getTimeLatestCall":{"name":"getTimeLatestCall","lineBegin":45,"lineEnd":47,"annotations":[],"returnDataType":["LocalTime"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return timeLatestCall;\n}","methodInvocations":[]},"getTimeFirstCall":{"name":"getTimeFirstCall","lineBegin":41,"lineEnd":43,"annotations":[],"returnDataType":["LocalTime"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return timeFirstCall;\n}","methodInvocations":[]},"setTimeLatestCall":{"name":"setTimeLatestCall","lineBegin":53,"lineEnd":55,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"LocalTime","variable":"timeLatestCall","qualifedType":""}],"variables":[],"body":"{\n    this.timeLatestCall \u003d timeLatestCall;\n}","methodInvocations":[]},"getTimeLatestCallStr":{"name":"getTimeLatestCallStr","lineBegin":49,"lineEnd":51,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return timeLatestCall.format(Calendar.TIME_FORMATTER);\n}","methodInvocations":[]},"getDate":{"name":"getDate","lineBegin":37,"lineEnd":39,"annotations":[],"returnDataType":["LocalDate"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return date;\n}","methodInvocations":[]},"compareTo":{"name":"compareTo","lineBegin":61,"lineEnd":77,"annotations":["@Override"],"returnDataType":["int"],"identifier":[],"parametersDataType":[{"type":"DoctorWaitingPatient","variable":"o","qualifedType":""}],"variables":[],"body":"{\n    if (this.date.isBefore(o.date)) {\n        return -1;\n    } else if (this.date.isAfter(o.date)) {\n        return 1;\n    } else {\n        // Same date\n        if (this.timeLatestCall.isBefore(o.timeLatestCall)) {\n            return -1;\n        } else if (this.timeLatestCall.isAfter(o.timeLatestCall)) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":["Comparable\u003cDoctorWaitingPatient\u003e"],"extendedTypes":[],"imports":["pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.objects.utils.Calendar","javax.persistence","java.time.LocalDate","java.time.LocalTime"]},"pt.iscte.hospital.controllers.UserController":{"qualifiedName":"pt.iscte.hospital.controllers.UserController","begin":1,"end":345,"isInterface":false,"annotations":["@Controller"],"variables":["AppointmentService appointmentService","PatientService patientService","DoctorService doctorService","SpecialityService specialityService","UserService userService","ImageUploadService imageUploadService","NationalityService nationalityService","UserValidationService userValidationService","SlotService slotService","DoctorWaitingPatientService doctorWaitingPatientService","InvoiceService invoiceService","Common common","List\u003cNationality\u003e nationalities","List\u003cSpeciality\u003e specialities","User connectedUser","List\u003cNationality\u003e nationalities","List\u003cNationality\u003e nationalities","Speciality speciality","List\u003cNationality\u003e nationalities","List\u003cSpeciality\u003e specialities","List\u003cDoctor\u003e doctors","List\u003cDoctor\u003e doctors","List\u003cSpeciality\u003e specialities","List\u003cSpeciality\u003e specialities","Appointment appointment","String appointmentDescription","Patient patient","Appointment appointment","LocalDate todayDate","List\u003cDoctorWaitingPatient\u003e listaChamada","int minLength","Appointment appointment","User connectedUser","String photoURL","Slot slot"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"AppointmentService","variable":"appointmentService","lineBegin":34,"lineEnd":34},{"annotations":[],"modifier":"private ","identifier":[],"type":"PatientService","variable":"patientService","lineBegin":35,"lineEnd":35},{"annotations":[],"modifier":"private ","identifier":[],"type":"DoctorService","variable":"doctorService","lineBegin":36,"lineEnd":36},{"annotations":[],"modifier":"private ","identifier":[],"type":"SpecialityService","variable":"specialityService","lineBegin":37,"lineEnd":37},{"annotations":[],"modifier":"private ","identifier":[],"type":"UserService","variable":"userService","lineBegin":38,"lineEnd":38},{"annotations":[],"modifier":"private ","identifier":[],"type":"ImageUploadService","variable":"imageUploadService","lineBegin":39,"lineEnd":39},{"annotations":[],"modifier":"private ","identifier":[],"type":"NationalityService","variable":"nationalityService","lineBegin":40,"lineEnd":40},{"annotations":[],"modifier":"private ","identifier":[],"type":"UserValidationService","variable":"userValidationService","lineBegin":41,"lineEnd":41},{"annotations":[],"modifier":"private ","identifier":[],"type":"SlotService","variable":"slotService","lineBegin":42,"lineEnd":42},{"annotations":[],"modifier":"private ","identifier":[],"type":"DoctorWaitingPatientService","variable":"doctorWaitingPatientService","lineBegin":43,"lineEnd":43},{"annotations":[],"modifier":"private ","identifier":[],"type":"InvoiceService","variable":"invoiceService","lineBegin":44,"lineEnd":44},{"annotations":[],"modifier":"private ","identifier":[],"type":"Common","variable":"common","lineBegin":45,"lineEnd":45}],"dependencies":["pt.iscte.hospital.services.AppointmentService","pt.iscte.hospital.services.user.PatientService","pt.iscte.hospital.services.user.DoctorService","pt.iscte.hospital.services.SpecialityService","pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.ImageUploadService","pt.iscte.hospital.services.NationalityService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.SlotService","pt.iscte.hospital.services.waiting.DoctorWaitingPatientService","pt.iscte.hospital.services.invoice.InvoiceService","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.Nationality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Nationality","pt.iscte.hospital.entities.Nationality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Nationality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.waiting.DoctorWaitingPatient","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Receptionist","pt.iscte.hospital.entities.User"],"methods":{"showMainPage":{"name":"showMainPage","parametersDataType":[],"returnDataType":["String"]},"showDoctorList":{"name":"showDoctorList","parametersDataType":["ModelMap"],"returnDataType":["String"]},"cancelAppointment":{"name":"cancelAppointment","parametersDataType":["int","Appointment"],"returnDataType":["void"]},"showChangeProfileData":{"name":"showChangeProfileData","parametersDataType":["ModelMap"],"returnDataType":["String"]},"changeDataPage":{"name":"changeDataPage","parametersDataType":["Patient","Doctor","Receptionist","ModelMap","MultipartFile"],"returnDataType":["String"]},"showAskInvoice":{"name":"showAskInvoice","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"showAppointmentDetails":{"name":"showAppointmentDetails","parametersDataType":["ModelMap","String","String","Long"],"returnDataType":["String"]},"searchDoctors":{"name":"searchDoctors","parametersDataType":["String","String","ModelMap"],"returnDataType":["String"]},"showUserProfile":{"name":"showUserProfile","parametersDataType":["ModelMap"],"returnDataType":["String"]},"showAppointmentDetailsAfterCancel":{"name":"showAppointmentDetailsAfterCancel","parametersDataType":["ModelMap","String","Long"],"returnDataType":["String"]},"showListaChamada":{"name":"showListaChamada","parametersDataType":["ModelMap"],"returnDataType":["String"]},"validation":{"name":"validation","parametersDataType":["User","MultipartFile"],"returnDataType":["void"]}},"myMethods":{"showMainPage":{"name":"showMainPage","lineBegin":175,"lineEnd":178,"annotations":["@GetMapping(value \u003d \"/userToMain\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return \"redirect:/\";\n}","methodInvocations":[]},"showDoctorList":{"name":"showDoctorList","lineBegin":181,"lineEnd":190,"annotations":["@GetMapping(value \u003d \"/user/doctor-list\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"List\u003cSpeciality\u003e","variable":"specialities","qualifedType":"pt.iscte.hospital.entities.Speciality"},{"type":"List\u003cDoctor\u003e","variable":"doctors","qualifedType":"pt.iscte.hospital.entities.Doctor"}],"body":"{\n    List\u003cSpeciality\u003e specialities \u003d specialityService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    List\u003cDoctor\u003e doctors \u003d doctorService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    modelMap.put(\"specialities\", specialities);\n    modelMap.put(\"doctors\", doctors);\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"user/doctor-list\";\n}","methodInvocations":[{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"doctorService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"cancelAppointment":{"name":"cancelAppointment","lineBegin":336,"lineEnd":342,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"int","variable":"stateNr","qualifedType":""},{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[{"type":"Slot","variable":"slot","qualifedType":""}],"body":"{\n    appointment.setAppointmentStatus(stateNr);\n    appointmentService.saveAppointment(appointment);\n    Slot slot \u003d appointment.getSlot();\n    slot.setAvailable(true);\n    slotService.saveSlot(slot);\n}","methodInvocations":[{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"}]},"showChangeProfileData":{"name":"showChangeProfileData","lineBegin":73,"lineEnd":85,"annotations":["@GetMapping(value \u003d \"/user/change-profile-data\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"List\u003cNationality\u003e","variable":"nationalities","qualifedType":"pt.iscte.hospital.entities.Nationality"},{"type":"List\u003cSpeciality\u003e","variable":"specialities","qualifedType":"pt.iscte.hospital.entities.Speciality"}],"body":"{\n    List\u003cNationality\u003e nationalities \u003d nationalityService.findAll();\n    List\u003cSpeciality\u003e specialities \u003d specialityService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    modelMap.put(\"nationalities\", nationalities);\n    modelMap.put(\"specialities\", specialities);\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"user\", userService.currentUser());\n    return \"user/change-profile-data\";\n}","methodInvocations":[{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"}]},"changeDataPage":{"name":"changeDataPage","lineBegin":87,"lineEnd":166,"annotations":["@PostMapping(value \u003d \"/user/change-profile-data\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"Patient","variable":"patient","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"Receptionist","variable":"receptionist","qualifedType":""},{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"MultipartFile","variable":"file","qualifedType":""}],"variables":[{"type":"User","variable":"connectedUser","qualifedType":""},{"type":"List\u003cNationality\u003e","variable":"nationalities","qualifedType":"pt.iscte.hospital.entities.Nationality"},{"type":"List\u003cNationality\u003e","variable":"nationalities","qualifedType":"pt.iscte.hospital.entities.Nationality"},{"type":"Speciality","variable":"speciality","qualifedType":""},{"type":"List\u003cNationality\u003e","variable":"nationalities","qualifedType":"pt.iscte.hospital.entities.Nationality"}],"body":"{\n    // Update user info\n    // utente\n    User connectedUser \u003d userService.currentUser();\n    if (userService.currentUser().getAccount().equals(\"Utente\")) {\n        validation(patient, file);\n        if (!userValidationService.isValid()) {\n            // case error in info validation\n            List\u003cNationality\u003e nationalities \u003d nationalityService.findAll();\n            modelMap.addAllAttributes(userValidationService.getErrorModelMap());\n            modelMap.put(\"nationalities\", nationalities);\n            modelMap.addAllAttributes(common.sideNavMap());\n            modelMap.put(\"user\", patient);\n            return \"user/change-profile-data\";\n        }\n        patient.setUserId(connectedUser.getUserId());\n        patient.setEmail(connectedUser.getEmail());\n        patient.setUsername(connectedUser.getUsername());\n        patient.setPassword(connectedUser.getPassword());\n        patient.setAccount(connectedUser.getAccount());\n        userService.addUser(patient);\n    // médico\n    } else if (userService.currentUser().getAccount().equals(\"Médico\")) {\n        validation(doctor, file);\n        userValidationService.setUser(doctor).validLicenseNumber();\n        if (!userValidationService.isValid()) {\n            // case error in info validation\n            List\u003cNationality\u003e nationalities \u003d nationalityService.findAll();\n            modelMap.addAllAttributes(userValidationService.getErrorModelMap());\n            modelMap.put(\"nationalities\", nationalities);\n            modelMap.addAllAttributes(common.sideNavMap());\n            modelMap.put(\"user\", doctor);\n            return \"user/change-profile-data\";\n        }\n        doctor.setUserId(connectedUser.getUserId());\n        doctor.setEmail(connectedUser.getEmail());\n        doctor.setUsername(connectedUser.getUsername());\n        doctor.setPassword(connectedUser.getPassword());\n        doctor.setAccount(connectedUser.getAccount());\n        Speciality speciality \u003d specialityService.findByName(((Doctor) connectedUser).getSpeciality().getName());\n        doctor.setSpeciality(speciality);\n        userService.addUser(doctor);\n    // recepcionista\n    } else if (userService.currentUser().getAccount().equals(\"Recepcionista\")) {\n        validation(receptionist, file);\n        if (!userValidationService.isValid()) {\n            // case error in info validation\n            List\u003cNationality\u003e nationalities \u003d nationalityService.findAll();\n            modelMap.addAllAttributes(userValidationService.getErrorModelMap());\n            modelMap.put(\"nationalities\", nationalities);\n            modelMap.addAllAttributes(common.sideNavMap());\n            modelMap.put(\"user\", receptionist);\n            return \"user/change-profile-data\";\n        }\n        receptionist.setUserId(connectedUser.getUserId());\n        receptionist.setEmail(connectedUser.getEmail());\n        receptionist.setUsername(connectedUser.getUsername());\n        receptionist.setPassword(connectedUser.getPassword());\n        receptionist.setAccount(connectedUser.getAccount());\n        userService.addUser(receptionist);\n    }\n    return \"redirect:/user/user-profile\";\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService.currentUser()","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userService.currentUser().getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService.currentUser()","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userService.currentUser().getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService.currentUser()","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userService.currentUser().getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"userValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"connectedUser","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"receptionist","methodName":"setUserId","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"connectedUser","methodName":"getEmail","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"receptionist","methodName":"setEmail","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"connectedUser","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"receptionist","methodName":"setUsername","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"connectedUser","methodName":"getPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"receptionist","methodName":"setPassword","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"connectedUser","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"receptionist","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userValidationService","methodName":"setUser","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.setUser(doctor)","methodName":"validLicenseNumber","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"userValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"connectedUser","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctor","methodName":"setUserId","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"connectedUser","methodName":"getEmail","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctor","methodName":"setEmail","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"connectedUser","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctor","methodName":"setUsername","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"connectedUser","methodName":"getPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctor","methodName":"setPassword","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"connectedUser","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctor","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"((Doctor) connectedUser)","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"((Doctor) connectedUser).getSpeciality()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"specialityService","methodName":"findByName","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"doctor","methodName":"setSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"userValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"connectedUser","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patient","methodName":"setUserId","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"connectedUser","methodName":"getEmail","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patient","methodName":"setEmail","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"connectedUser","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patient","methodName":"setUsername","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"connectedUser","methodName":"getPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patient","methodName":"setPassword","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"connectedUser","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patient","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"}]},"showAskInvoice":{"name":"showAskInvoice","lineBegin":270,"lineEnd":284,"annotations":["@GetMapping(value \u003d \"/receptionist/appointment-details/resume/{appointmentId}/ask-invoice\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"body":"{\n    Appointment appointment \u003d appointmentService.findByAppointmentId(appointmentId);\n    invoiceService.createInvoice(appointment);\n    modelMap.put(\"message\", \"Efectuado pedido da Factura.\");\n    modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n    modelMap.put(\"hasButton2\", true);\n    modelMap.put(\"button2_text\", \"Regressar ao detalhe da consulta\");\n    modelMap.put(\"button2_url\", \"/receptionist/appointment-details/resume/\" + appointmentId);\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"components/alert-message\";\n}","methodInvocations":[{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"invoiceService","methodName":"createInvoice","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"showAppointmentDetails":{"name":"showAppointmentDetails","lineBegin":215,"lineEnd":230,"annotations":["@GetMapping(value \u003d \"/{userType}/appointment-details/{tempo}/{appointmentId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"String","variable":"userType","qualifedType":""},{"type":"String","variable":"tempo","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[{"type":"List\u003cSpeciality\u003e","variable":"specialities","qualifedType":"pt.iscte.hospital.entities.Speciality"},{"type":"Appointment","variable":"appointment","qualifedType":""},{"type":"String","variable":"appointmentDescription","qualifedType":""},{"type":"Patient","variable":"patient","qualifedType":""}],"body":"{\n    List\u003cSpeciality\u003e specialities \u003d specialityService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    Appointment appointment \u003d appointmentService.findByAppointmentId(appointmentId);\n    String appointmentDescription \u003d AppointmentState.searchState(appointment.getAppointmentStatus());\n    Patient patient \u003d patientService.findByUserId(appointment.getPatient().getUserId());\n    modelMap.put(\"specialities\", specialities);\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"patient\", patient);\n    modelMap.put(\"appointment\", appointment);\n    modelMap.put(\"appointmentDescription\", appointmentDescription);\n    modelMap.put(\"userType\", userType);\n    modelMap.put(\"tempo\", tempo);\n    return \"user/appointment-details\";\n}","methodInvocations":[{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getPatient()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patientService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"searchDoctors":{"name":"searchDoctors","lineBegin":192,"lineEnd":212,"annotations":["@PostMapping(value \u003d \"/search-doctors\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""},{"type":"String","variable":"speciality","qualifedType":""},{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"List\u003cDoctor\u003e","variable":"doctors","qualifedType":"pt.iscte.hospital.entities.Doctor"},{"type":"List\u003cSpeciality\u003e","variable":"specialities","qualifedType":"pt.iscte.hospital.entities.Speciality"}],"body":"{\n    List\u003cDoctor\u003e doctors;\n    if (speciality \u003d\u003d null || speciality.isEmpty()) {\n        speciality \u003d \"\";\n        doctors \u003d doctorService.findAllByFirstAndLastName(name);\n    } else {\n        doctors \u003d doctorService.findAllByFirstAndLastNameAndSpeciality(name, speciality);\n    }\n    List\u003cSpeciality\u003e specialities \u003d specialityService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    modelMap.put(\"search_name\", name);\n    modelMap.put(\"search_speciality\", speciality);\n    modelMap.put(\"specialities\", specialities);\n    modelMap.put(\"doctors\", doctors);\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"user/doctor-list\";\n}","methodInvocations":[{"scopeName":"doctorService","methodName":"findAllByFirstAndLastNameAndSpeciality","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"doctorService","methodName":"findAllByFirstAndLastName","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"showUserProfile":{"name":"showUserProfile","lineBegin":169,"lineEnd":173,"annotations":["@GetMapping(value \u003d \"/user/user-profile\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[],"body":"{\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"user/user-profile\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"showAppointmentDetailsAfterCancel":{"name":"showAppointmentDetailsAfterCancel","lineBegin":233,"lineEnd":250,"annotations":["@GetMapping(value \u003d \"/{userType}/appointment-details/{tempo}/{appointmentId}/cancel\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"String","variable":"userType","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"body":"{\n    Appointment appointment \u003d appointmentService.findByAppointmentId(appointmentId);\n    if (userType.equals(\"patient\")) {\n        cancelAppointment(DESMARCADA_PELO_UTENTE.getStateNr(), appointment);\n    } else if (userType.equals(\"doctor\")) {\n        doctorService.desmarcarConsultaByDoctor(appointment);\n    }\n    modelMap.put(\"message\", \"A consulta foi cancelada com sucesso.\");\n    modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"components/alert-message\";\n}","methodInvocations":[{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"doctorService","methodName":"desmarcarConsultaByDoctor","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"showListaChamada":{"name":"showListaChamada","lineBegin":252,"lineEnd":267,"annotations":["@GetMapping(value \u003d \"/user/lista-chamada\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"LocalDate","variable":"todayDate","qualifedType":""},{"type":"List\u003cDoctorWaitingPatient\u003e","variable":"listaChamada","qualifedType":"pt.iscte.hospital.entities.waiting.DoctorWaitingPatient"},{"type":"int","variable":"minLength","qualifedType":""}],"body":"{\n    // Top 10 e ordenar\n    LocalDate todayDate \u003d LocalDate.now();\n    List\u003cDoctorWaitingPatient\u003e listaChamada \u003d doctorWaitingPatientService.findAllByDate(todayDate);\n    // Últimas 10 chamadas\n    int minLength \u003d Math.min(9, Math.max(listaChamada.size() - 1, 0));\n    Collections.sort(listaChamada, Collections.reverseOrder());\n    listaChamada.subList(0, minLength);\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"listaChamada\", listaChamada);\n    return \"user/lista-chamada\";\n}","methodInvocations":[{"scopeName":"doctorWaitingPatientService","methodName":"findAllByDate","targetClassName":"pt.iscte.hospital.services.waiting.DoctorWaitingPatientService"},{"scopeName":"listaChamada","methodName":"size","targetClassName":"pt.iscte.hospital.entities.waiting.DoctorWaitingPatient"},{"scopeName":"listaChamada","methodName":"subList","targetClassName":"pt.iscte.hospital.entities.waiting.DoctorWaitingPatient"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"validation":{"name":"validation","lineBegin":288,"lineEnd":332,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"User","variable":"user","qualifedType":""},{"type":"MultipartFile","variable":"file","qualifedType":""}],"variables":[{"type":"User","variable":"connectedUser","qualifedType":""},{"type":"String","variable":"photoURL","qualifedType":""}],"body":"{\n    User connectedUser \u003d userService.currentUser();\n    userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType().validDocumentNumber().validPatientNumber().validNif().validCity().validBirthday().validNationality().validAddress();\n    if (!user.getDocumentNumber().equals(connectedUser.getDocumentNumber())) {\n        userValidationService.validDocumentNumberUnique();\n    }\n    if (user.getPatientNumber() !\u003d null) {\n        if (!user.getPatientNumber().equals(connectedUser.getPatientNumber())) {\n            userValidationService.validPatientNumberUnique();\n        }\n    }\n    if (!user.getNif().equals(connectedUser.getNif())) {\n        userValidationService.validNifUnique();\n    }\n    if (file !\u003d null \u0026\u0026 !file.isEmpty() \u0026\u0026 !file.getContentType().equals(\"application/octet-stream\")) {\n        try {\n            String photoURL \u003d imageUploadService.uploadImage(file, userService.currentUser().getUsername());\n            user.setPhotoURL(photoURL);\n        } catch (IOException e) {\n            userValidationService.notValidPhotoUpload();\n        } catch (ImageTypeException e) {\n            userValidationService.notValidImageType();\n        } catch (ImageSizeException e) {\n            userValidationService.notValidImageSize();\n        }\n    } else {\n        user.setPhotoURL(userService.currentUser().getPhotoURL());\n    }\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userValidationService","methodName":"clear","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear()","methodName":"setUser","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user)","methodName":"validName","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName()","methodName":"validPhone","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone()","methodName":"validPostCode","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode()","methodName":"validSex","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex()","methodName":"validDocumentType","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType()","methodName":"validDocumentNumber","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType().validDocumentNumber()","methodName":"validPatientNumber","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType().validDocumentNumber().validPatientNumber()","methodName":"validNif","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType().validDocumentNumber().validPatientNumber().validNif()","methodName":"validCity","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType().validDocumentNumber().validPatientNumber().validNif().validCity()","methodName":"validBirthday","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType().validDocumentNumber().validPatientNumber().validNif().validCity().validBirthday()","methodName":"validNationality","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType().validDocumentNumber().validPatientNumber().validNif().validCity().validBirthday().validNationality()","methodName":"validAddress","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"connectedUser","methodName":"getDocumentNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getDocumentNumber()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userValidationService","methodName":"validDocumentNumberUnique","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"user","methodName":"getPatientNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"connectedUser","methodName":"getPatientNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getPatientNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getPatientNumber()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userValidationService","methodName":"validPatientNumberUnique","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"connectedUser","methodName":"getNif","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getNif","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getNif()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userValidationService","methodName":"validNifUnique","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService.currentUser()","methodName":"getPhotoURL","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userValidationService","methodName":"notValidPhotoUpload","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"notValidImageType","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"notValidImageSize","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService.currentUser()","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"imageUploadService","methodName":"uploadImage","targetClassName":"pt.iscte.hospital.services.ImageUploadService"},{"scopeName":"user","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.User"}]}},"methodInvocations":[{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService.currentUser()","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userService.currentUser().getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService.currentUser()","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userService.currentUser().getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService.currentUser()","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userService.currentUser().getAccount()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"userValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"connectedUser","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"receptionist","methodName":"setUserId","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"connectedUser","methodName":"getEmail","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"receptionist","methodName":"setEmail","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"connectedUser","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"receptionist","methodName":"setUsername","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"connectedUser","methodName":"getPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"receptionist","methodName":"setPassword","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"connectedUser","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"receptionist","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userValidationService","methodName":"setUser","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.setUser(doctor)","methodName":"validLicenseNumber","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"userValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"connectedUser","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctor","methodName":"setUserId","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"connectedUser","methodName":"getEmail","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctor","methodName":"setEmail","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"connectedUser","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctor","methodName":"setUsername","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"connectedUser","methodName":"getPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctor","methodName":"setPassword","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"connectedUser","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctor","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"((Doctor) connectedUser)","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"((Doctor) connectedUser).getSpeciality()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"specialityService","methodName":"findByName","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"doctor","methodName":"setSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"userValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"connectedUser","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patient","methodName":"setUserId","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"connectedUser","methodName":"getEmail","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patient","methodName":"setEmail","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"connectedUser","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patient","methodName":"setUsername","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"connectedUser","methodName":"getPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patient","methodName":"setPassword","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"connectedUser","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patient","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"doctorService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"doctorService","methodName":"findAllByFirstAndLastNameAndSpeciality","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"doctorService","methodName":"findAllByFirstAndLastName","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getPatient()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patientService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"doctorService","methodName":"desmarcarConsultaByDoctor","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"doctorWaitingPatientService","methodName":"findAllByDate","targetClassName":"pt.iscte.hospital.services.waiting.DoctorWaitingPatientService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"invoiceService","methodName":"createInvoice","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userValidationService","methodName":"clear","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear()","methodName":"setUser","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user)","methodName":"validName","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName()","methodName":"validPhone","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone()","methodName":"validPostCode","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode()","methodName":"validSex","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex()","methodName":"validDocumentType","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType()","methodName":"validDocumentNumber","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType().validDocumentNumber()","methodName":"validPatientNumber","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType().validDocumentNumber().validPatientNumber()","methodName":"validNif","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType().validDocumentNumber().validPatientNumber().validNif()","methodName":"validCity","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType().validDocumentNumber().validPatientNumber().validNif().validCity()","methodName":"validBirthday","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType().validDocumentNumber().validPatientNumber().validNif().validCity().validBirthday()","methodName":"validNationality","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPhone().validPostCode().validSex().validDocumentType().validDocumentNumber().validPatientNumber().validNif().validCity().validBirthday().validNationality()","methodName":"validAddress","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"connectedUser","methodName":"getDocumentNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getDocumentNumber()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userValidationService","methodName":"validDocumentNumberUnique","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"user","methodName":"getPatientNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"connectedUser","methodName":"getPatientNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getPatientNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getPatientNumber()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userValidationService","methodName":"validPatientNumberUnique","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"connectedUser","methodName":"getNif","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getNif","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getNif()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userValidationService","methodName":"validNifUnique","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService.currentUser()","methodName":"getPhotoURL","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userValidationService","methodName":"notValidPhotoUpload","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"notValidImageType","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"notValidImageSize","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService.currentUser()","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"imageUploadService","methodName":"uploadImage","targetClassName":"pt.iscte.hospital.services.ImageUploadService"},{"scopeName":"user","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.data.domain.Sort","org.springframework.stereotype.Controller","org.springframework.ui.ModelMap","org.springframework.web.bind.annotation","org.springframework.web.multipart.MultipartFile","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities","pt.iscte.hospital.entities.states.AppointmentState","pt.iscte.hospital.entities.waiting.DoctorWaitingPatient","pt.iscte.hospital.exceptions.ImageSizeException","pt.iscte.hospital.exceptions.ImageTypeException","pt.iscte.hospital.objects.utils.AlertMessageImage","pt.iscte.hospital.services","pt.iscte.hospital.services.invoice.InvoiceService","pt.iscte.hospital.services.user.DoctorService","pt.iscte.hospital.services.user.PatientService","pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.waiting.DoctorWaitingPatientService","java.io.IOException","java.time.LocalDate","java.util.Collections","java.util.List","pt.iscte.hospital.entities.states.AppointmentState.DESMARCADA_PELO_UTENTE"]},"pt.iscte.hospital.threads.ReceptionistAdmin":{"qualifiedName":"pt.iscte.hospital.threads.ReceptionistAdmin","begin":1,"end":39,"isInterface":false,"annotations":["@Component"],"variables":["RegistrationService registrationService","UserService userService","User user","Receptionist receptionist"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"RegistrationService","variable":"registrationService","lineBegin":12,"lineEnd":12},{"annotations":[],"modifier":"private ","identifier":[],"type":"UserService","variable":"userService","lineBegin":13,"lineEnd":13}],"dependencies":["pt.iscte.hospital.services.RegistrationService","pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Receptionist"],"methods":{"createAdmin":{"name":"createAdmin","parametersDataType":[],"returnDataType":["void"]}},"myMethods":{"createAdmin":{"name":"createAdmin","lineBegin":20,"lineEnd":38,"annotations":["@Scheduled(fixedRate \u003d 100000000)"],"returnDataType":["void"],"identifier":[],"parametersDataType":[],"variables":[{"type":"User","variable":"user","qualifedType":""},{"type":"Receptionist","variable":"receptionist","qualifedType":""}],"body":"{\n    User user \u003d userService.findByUsername(\"admin\");\n    if (user !\u003d null) {\n        System.out.println(\"Utilizador admin já existe.\");\n    } else {\n        Receptionist receptionist \u003d new Receptionist();\n        receptionist.setName(\"Admin Receptionist\");\n        receptionist.setEmail(\"admin@hospital.upskill.com\");\n        receptionist.setUsername(\"admin\");\n        receptionist.setPassword(\"admin\");\n        receptionist.setPhotoURL(\"user-male.jpg\");\n        registrationService.encryptPassword(receptionist);\n        userService.addUser(receptionist);\n        System.out.println(\"Registado admin\");\n    }\n}","methodInvocations":[{"scopeName":"userService","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"receptionist","methodName":"setName","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"receptionist","methodName":"setEmail","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"receptionist","methodName":"setUsername","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"receptionist","methodName":"setPassword","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"receptionist","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"registrationService","methodName":"encryptPassword","targetClassName":"pt.iscte.hospital.services.RegistrationService"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"}]}},"methodInvocations":[{"scopeName":"userService","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"receptionist","methodName":"setName","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"receptionist","methodName":"setEmail","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"receptionist","methodName":"setUsername","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"receptionist","methodName":"setPassword","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"receptionist","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.Receptionist"},{"scopeName":"registrationService","methodName":"encryptPassword","targetClassName":"pt.iscte.hospital.services.RegistrationService"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.scheduling.annotation.Scheduled","org.springframework.stereotype.Component","pt.iscte.hospital.entities.Receptionist","pt.iscte.hospital.entities.User","pt.iscte.hospital.services.RegistrationService","pt.iscte.hospital.services.user.UserService"]},"pt.iscte.hospital.services.invoice.InvoiceService":{"qualifiedName":"pt.iscte.hospital.services.invoice.InvoiceService","begin":1,"end":68,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.services.invoice.InvoiceApi","pt.iscte.hospital.services.invoice.InvoiceFilter","pt.iscte.hospital.services.invoice.InvoiceApi","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.services.invoice.InvoiceApi","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Invoice"],"methods":{"getListAPI":{"name":"getListAPI","parametersDataType":["InvoiceFilter"],"returnDataType":["InvoiceApi"]},"getInvoiceInfoAPI":{"name":"getInvoiceInfoAPI","parametersDataType":["String"],"returnDataType":["InvoiceApi"]},"payInvoiceAPI":{"name":"payInvoiceAPI","parametersDataType":["String"],"returnDataType":["boolean"]},"getInvoiceUrlAPI":{"name":"getInvoiceUrlAPI","parametersDataType":["String"],"returnDataType":["String"]},"payInvoice":{"name":"payInvoice","parametersDataType":["Appointment"],"returnDataType":["void"]},"createInvoiceAPI":{"name":"createInvoiceAPI","parametersDataType":["String","String","long","LocalDateTime","Double","InvoiceItem"],"returnDataType":["InvoiceApi"]},"createInvoice":{"name":"createInvoice","parametersDataType":["Appointment"],"returnDataType":["void"]},"findByInvoiceId":{"name":"findByInvoiceId","parametersDataType":["Long"],"returnDataType":["Invoice"]}},"myMethods":{"getListAPI":{"name":"getListAPI","lineBegin":65,"lineEnd":65,"annotations":[],"returnDataType":["List\u003cInvoiceApi\u003e"],"identifier":["List","InvoiceApi"],"parametersDataType":[{"type":"InvoiceFilter","variable":"invoiceFilter","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"getInvoiceInfoAPI":{"name":"getInvoiceInfoAPI","lineBegin":47,"lineEnd":47,"annotations":[],"returnDataType":["InvoiceApi"],"identifier":[],"parametersDataType":[{"type":"String","variable":"invoiceId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"payInvoiceAPI":{"name":"payInvoiceAPI","lineBegin":56,"lineEnd":56,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"String","variable":"invoiceId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"getInvoiceUrlAPI":{"name":"getInvoiceUrlAPI","lineBegin":41,"lineEnd":41,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"String","variable":"invoiceId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"payInvoice":{"name":"payInvoice","lineBegin":13,"lineEnd":13,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"createInvoiceAPI":{"name":"createInvoiceAPI","lineBegin":27,"lineEnd":32,"annotations":[],"returnDataType":["InvoiceApi"],"identifier":[],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""},{"type":"String","variable":"email","qualifedType":""},{"type":"long","variable":"nif","qualifedType":""},{"type":"LocalDateTime","variable":"dueDate","qualifedType":""},{"type":"Double","variable":"value","qualifedType":""},{"type":"List\u003cInvoiceItem\u003e","variable":"invoiceItems","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"createInvoice":{"name":"createInvoice","lineBegin":11,"lineEnd":11,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByInvoiceId":{"name":"findByInvoiceId","lineBegin":67,"lineEnd":67,"annotations":[],"returnDataType":["Invoice"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"invoiceId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Invoice","pt.iscte.hospital.exceptions.PaymentException","java.time.LocalDateTime","java.util.List"]},"pt.iscte.hospital.services.SlotServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.SlotServiceImpl","begin":1,"end":277,"isInterface":false,"annotations":["@Service"],"variables":["DoctorRepository doctorRepository","SlotRepository slotRepository","int nrDays","LocalDate slotDate","DayOfWeek dayOfWeek","List\u003cSlot\u003e listSlots","LocalTime slotTimeBegin","LocalTime slotTimeEnd","Slot slot","TimeInterval timeInterval","Doctor doctor","int day","boolean cond1","boolean cond2","boolean cond3","boolean cond4","boolean cond5","boolean cond6","boolean cond7","boolean cond8","TimeInterval interval","Slot existingSlot","LocalDate todayDate","ArrayList\u003cDay\u003e calendarColor","long totalSlots","long availableSlots","Day day","LocalDate todayDate","ArrayList\u003cDay\u003e calendarColor","long totalSlots","long availableSlots","Day day","double fraction","long availableSlots","Day day","long availableSlots"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"DoctorRepository","variable":"doctorRepository","lineBegin":23,"lineEnd":24},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"SlotRepository","variable":"slotRepository","lineBegin":26,"lineEnd":27}],"dependencies":["pt.iscte.hospital.repositories.user.DoctorRepository","pt.iscte.hospital.repositories.SlotRepository","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.objects.utils.TimeInterval","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.objects.utils.TimeInterval","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.objects.utils.TimeInterval","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor"],"methods":{"countAllByIsAvailableAndDoctorAndDateBetween":{"name":"countAllByIsAvailableAndDoctorAndDateBetween","parametersDataType":["boolean","Doctor","LocalDate","LocalDate"],"returnDataType":["Long"]},"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc":{"name":"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc","parametersDataType":["Doctor","boolean"],"returnDataType":["Slot"]},"countAllByIsAvailableAndDoctorSpecialityAndDateBetween":{"name":"countAllByIsAvailableAndDoctorSpecialityAndDateBetween","parametersDataType":["boolean","Speciality","LocalDate","LocalDate"],"returnDataType":["Long"]},"countByDoctorAndDate":{"name":"countByDoctorAndDate","parametersDataType":["Doctor","LocalDate"],"returnDataType":["Long"]},"generateSlots":{"name":"generateSlots","parametersDataType":["int","TimeInterval","DayOfWeek","int","int","Doctor"],"returnDataType":["void"]},"saveSlot":{"name":"saveSlot","parametersDataType":["Slot"],"returnDataType":["void"]},"findAll":{"name":"findAll","parametersDataType":["Sort"],"returnDataType":["Slot"]},"insideTimeInterval":{"name":"insideTimeInterval","parametersDataType":["TimeInterval","LocalTime","LocalTime"],"returnDataType":["boolean"]},"findBySlotId":{"name":"findBySlotId","parametersDataType":["Long"],"returnDataType":["Slot"]},"checkIfInsideListSlot":{"name":"checkIfInsideListSlot","parametersDataType":["Slot","LocalTime","LocalTime"],"returnDataType":["boolean"]},"calendarColor":{"name":"calendarColor","parametersDataType":["Day","String"],"returnDataType":["Day"]},"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc":{"name":"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc","parametersDataType":["Doctor","boolean","LocalDate"],"returnDataType":["Slot"]},"countByDoctorSpecialityNameAndIsAvailableAndDate":{"name":"countByDoctorSpecialityNameAndIsAvailableAndDate","parametersDataType":["String","boolean","LocalDate"],"returnDataType":["Long"]},"countByDoctorAndIsAvailableAndDate":{"name":"countByDoctorAndIsAvailableAndDate","parametersDataType":["Doctor","boolean","LocalDate"],"returnDataType":["Long"]},"colorDay":{"name":"colorDay","parametersDataType":["Day","LocalDate","long","long"],"returnDataType":["Day"]},"countByDoctorSpecialityNameAndDate":{"name":"countByDoctorSpecialityNameAndDate","parametersDataType":["String","LocalDate"],"returnDataType":["Long"]},"hasDisponibilidadeNoMes":{"name":"hasDisponibilidadeNoMes","parametersDataType":["Day","Doctor"],"returnDataType":["boolean"]},"findAllByDoctorAndDateOrderByTimeBeginAsc":{"name":"findAllByDoctorAndDateOrderByTimeBeginAsc","parametersDataType":["Doctor","LocalDate"],"returnDataType":["Slot"]},"hasDisponibilidadeNoDia":{"name":"hasDisponibilidadeNoDia","parametersDataType":["LocalDate","Doctor"],"returnDataType":["boolean"]}},"myMethods":{"countAllByIsAvailableAndDoctorAndDateBetween":{"name":"countAllByIsAvailableAndDoctorAndDateBetween","lineBegin":265,"lineEnd":276,"annotations":["@Override"],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"LocalDate","variable":"dateBegin","qualifedType":""},{"type":"LocalDate","variable":"dateEnd","qualifedType":""}],"variables":[],"body":"{\n    return slotRepository.countAllByIsAvailableAndDoctorAndDateBetween(isAvailable, doctor, dateBegin, dateEnd);\n}","methodInvocations":[{"scopeName":"slotRepository","methodName":"countAllByIsAvailableAndDoctorAndDateBetween","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}]},"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc":{"name":"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc","lineBegin":40,"lineEnd":45,"annotations":["@Override"],"returnDataType":["List\u003cSlot\u003e"],"identifier":["List","Slot"],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"boolean","variable":"isAvailable","qualifedType":""}],"variables":[],"body":"{\n    return slotRepository.findAllByDoctorAndIsAvailableOrderByTimeBeginAsc(doctor, isAvailable);\n}","methodInvocations":[{"scopeName":"slotRepository","methodName":"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}]},"countAllByIsAvailableAndDoctorSpecialityAndDateBetween":{"name":"countAllByIsAvailableAndDoctorSpecialityAndDateBetween","lineBegin":252,"lineEnd":263,"annotations":["@Override"],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"Speciality","variable":"speciality","qualifedType":""},{"type":"LocalDate","variable":"dateBegin","qualifedType":""},{"type":"LocalDate","variable":"dateEnd","qualifedType":""}],"variables":[],"body":"{\n    return slotRepository.countAllByIsAvailableAndDoctorSpecialityAndDateBetween(isAvailable, speciality, dateBegin, dateEnd);\n}","methodInvocations":[{"scopeName":"slotRepository","methodName":"countAllByIsAvailableAndDoctorSpecialityAndDateBetween","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}]},"countByDoctorAndDate":{"name":"countByDoctorAndDate","lineBegin":65,"lineEnd":68,"annotations":["@Override"],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"{\n    return slotRepository.countByDoctorAndDate(doctor, date);\n}","methodInvocations":[{"scopeName":"slotRepository","methodName":"countByDoctorAndDate","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}]},"generateSlots":{"name":"generateSlots","lineBegin":96,"lineEnd":147,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"int","variable":"duration","qualifedType":""},{"type":"List\u003cTimeInterval\u003e","variable":"timeIntervalList","qualifedType":""},{"type":"List\u003cDayOfWeek\u003e","variable":"weekDaysList","qualifedType":""},{"type":"int","variable":"year","qualifedType":""},{"type":"int","variable":"month","qualifedType":""},{"type":"List\u003cDoctor\u003e","variable":"doctors","qualifedType":""}],"variables":[{"type":"int","variable":"nrDays","qualifedType":""},{"type":"LocalDate","variable":"slotDate","qualifedType":""},{"type":"DayOfWeek","variable":"dayOfWeek","qualifedType":""},{"type":"List\u003cSlot\u003e","variable":"listSlots","qualifedType":"pt.iscte.hospital.entities.Slot"},{"type":"LocalTime","variable":"slotTimeBegin","qualifedType":""},{"type":"LocalTime","variable":"slotTimeEnd","qualifedType":""},{"type":"Slot","variable":"slot","qualifedType":""},{"type":"TimeInterval","variable":"timeInterval","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"int","variable":"day","qualifedType":""}],"body":"{\n    // number of days in the month\n    int nrDays \u003d LocalDate.of(year, month, 1).lengthOfMonth();\n    // For each day\n    for (int day \u003d 1; day \u003c\u003d nrDays; day++) {\n        LocalDate slotDate \u003d LocalDate.of(year, month, day);\n        DayOfWeek dayOfWeek \u003d slotDate.getDayOfWeek();\n        System.out.println(day);\n        // if the week day is available\n        if (weekDaysList.contains(dayOfWeek)) {\n            // for each doctor\n            for (Doctor doctor : doctors) {\n                List\u003cSlot\u003e listSlots \u003d slotRepository.findAllByDoctorAndDateOrderByTimeBeginAsc(doctor, slotDate);\n                for (TimeInterval timeInterval : timeIntervalList) {\n                    LocalTime slotTimeBegin \u003d timeInterval.getTimeBegin();\n                    LocalTime slotTimeEnd \u003d slotTimeBegin.plusMinutes(duration);\n                    while (insideTimeInterval(timeInterval, slotTimeBegin, slotTimeEnd)) {\n                        // while inside the interval\n                        // check if it is inside an existing slot\n                        if (!checkIfInsideListSlot(listSlots, slotTimeBegin, slotTimeEnd)) {\n                            // create slot\n                            Slot slot \u003d new Slot();\n                            slot.setDate(slotDate);\n                            slot.setTimeBegin(slotTimeBegin);\n                            slot.setTimeEnd(slotTimeEnd);\n                            slot.setDoctor(doctor);\n                            saveSlot(slot);\n                        }\n                        slotTimeBegin \u003d slotTimeEnd;\n                        slotTimeEnd \u003d slotTimeBegin.plusMinutes(duration);\n                    }\n                }\n            }\n        }\n    }\n    System.out.println(\"Geração de Vagas concluída\");\n}","methodInvocations":[{"scopeName":"slotDate","methodName":"getDayOfWeek","targetClassName":""},{"scopeName":"slotRepository","methodName":"findAllByDoctorAndDateOrderByTimeBeginAsc","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"},{"scopeName":"timeInterval","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"slotTimeBegin","methodName":"plusMinutes","targetClassName":""},{"scopeName":"slot","methodName":"setDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"setTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"setTimeEnd","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"setDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotTimeBegin","methodName":"plusMinutes","targetClassName":""}]},"saveSlot":{"name":"saveSlot","lineBegin":30,"lineEnd":33,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Slot","variable":"slot","qualifedType":""}],"variables":[],"body":"{\n    slotRepository.save(slot);\n}","methodInvocations":[{"scopeName":"slotRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}]},"findAll":{"name":"findAll","lineBegin":55,"lineEnd":58,"annotations":["@Override"],"returnDataType":["List\u003cSlot\u003e"],"identifier":["List","Slot"],"parametersDataType":[{"type":"Sort","variable":"sort","qualifedType":""}],"variables":[],"body":"{\n    return slotRepository.findAll(sort);\n}","methodInvocations":[{"scopeName":"slotRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}]},"insideTimeInterval":{"name":"insideTimeInterval","lineBegin":149,"lineEnd":167,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"TimeInterval","variable":"timeInterval","qualifedType":""},{"type":"LocalTime","variable":"slotTimeBegin","qualifedType":""},{"type":"LocalTime","variable":"slotTimeEnd","qualifedType":""}],"variables":[{"type":"boolean","variable":"cond1","qualifedType":""},{"type":"boolean","variable":"cond2","qualifedType":""},{"type":"boolean","variable":"cond3","qualifedType":""},{"type":"boolean","variable":"cond4","qualifedType":""},{"type":"boolean","variable":"cond5","qualifedType":""},{"type":"boolean","variable":"cond6","qualifedType":""},{"type":"boolean","variable":"cond7","qualifedType":""},{"type":"boolean","variable":"cond8","qualifedType":""}],"body":"{\n    // Begin time is inside time interval\n    boolean cond1 \u003d slotTimeBegin.isAfter(timeInterval.getTimeBegin());\n    boolean cond2 \u003d slotTimeBegin.isBefore(timeInterval.getTimeEnd());\n    boolean cond3 \u003d slotTimeBegin.equals(timeInterval.getTimeBegin());\n    boolean cond4 \u003d (cond1 \u0026\u0026 cond2) || cond3;\n    // End time is inside time interval\n    boolean cond5 \u003d slotTimeEnd.isAfter(timeInterval.getTimeBegin());\n    boolean cond6 \u003d slotTimeEnd.isBefore(timeInterval.getTimeEnd());\n    boolean cond7 \u003d slotTimeEnd.equals(timeInterval.getTimeEnd());\n    boolean cond8 \u003d (cond5 \u0026\u0026 cond6) || cond7;\n    return cond4 \u0026\u0026 cond8;\n}","methodInvocations":[{"scopeName":"timeInterval","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"timeInterval","methodName":"getTimeEnd","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"timeInterval","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"timeInterval","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"timeInterval","methodName":"getTimeEnd","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"timeInterval","methodName":"getTimeEnd","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"}]},"findBySlotId":{"name":"findBySlotId","lineBegin":60,"lineEnd":63,"annotations":["@Override"],"returnDataType":["Slot"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"slotId","qualifedType":""}],"variables":[],"body":"{\n    return slotRepository.findBySlotId(slotId);\n}","methodInvocations":[{"scopeName":"slotRepository","methodName":"findBySlotId","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}]},"checkIfInsideListSlot":{"name":"checkIfInsideListSlot","lineBegin":169,"lineEnd":180,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"List\u003cSlot\u003e","variable":"listSlots","qualifedType":""},{"type":"LocalTime","variable":"slotTimeBegin","qualifedType":""},{"type":"LocalTime","variable":"slotTimeEnd","qualifedType":""}],"variables":[{"type":"TimeInterval","variable":"interval","qualifedType":""},{"type":"Slot","variable":"existingSlot","qualifedType":""}],"body":"{\n    for (Slot existingSlot : listSlots) {\n        TimeInterval interval \u003d new TimeInterval(existingSlot.getTimeBegin(), existingSlot.getTimeEnd());\n        if (insideTimeInterval(interval, slotTimeBegin, slotTimeEnd)) {\n            return true;\n        }\n    }\n    return false;\n}","methodInvocations":[{"scopeName":"existingSlot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"existingSlot","methodName":"getTimeEnd","targetClassName":"pt.iscte.hospital.entities.Slot"}]},"calendarColor":{"name":"calendarColor","lineBegin":203,"lineEnd":214,"annotations":["@Override"],"returnDataType":["List\u003cDay\u003e"],"identifier":["List","Day"],"parametersDataType":[{"type":"List\u003cDay\u003e","variable":"calendar","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[{"type":"LocalDate","variable":"todayDate","qualifedType":""},{"type":"ArrayList\u003cDay\u003e","variable":"calendarColor","qualifedType":"pt.iscte.hospital.objects.utils.Day"},{"type":"long","variable":"totalSlots","qualifedType":""},{"type":"long","variable":"availableSlots","qualifedType":""},{"type":"Day","variable":"day","qualifedType":""}],"body":"{\n    LocalDate todayDate \u003d LocalDate.now();\n    ArrayList\u003cDay\u003e calendarColor \u003d new ArrayList\u003c\u003e();\n    for (Day day : calendar) {\n        long totalSlots \u003d countByDoctorSpecialityNameAndDate(specialityName, day.getDate());\n        long availableSlots \u003d countByDoctorSpecialityNameAndIsAvailableAndDate(specialityName, true, day.getDate());\n        calendarColor.add(colorDay(day, todayDate, totalSlots, availableSlots));\n    }\n    return calendarColor;\n}","methodInvocations":[{"scopeName":"day","methodName":"getDate","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"day","methodName":"getDate","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"calendarColor","methodName":"add","targetClassName":"pt.iscte.hospital.objects.utils.Day"}]},"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc":{"name":"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc","lineBegin":47,"lineEnd":53,"annotations":["@Override"],"returnDataType":["List\u003cSlot\u003e"],"identifier":["List","Slot"],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"{\n    return slotRepository.findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc(doctor, isAvailable, date);\n}","methodInvocations":[{"scopeName":"slotRepository","methodName":"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}]},"countByDoctorSpecialityNameAndIsAvailableAndDate":{"name":"countByDoctorSpecialityNameAndIsAvailableAndDate","lineBegin":85,"lineEnd":94,"annotations":["@Override"],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"String","variable":"specialityName","qualifedType":""},{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"{\n    return slotRepository.countByDoctorSpecialityNameAndIsAvailableAndDate(specialityName, isAvailable, date);\n}","methodInvocations":[{"scopeName":"slotRepository","methodName":"countByDoctorSpecialityNameAndIsAvailableAndDate","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}]},"countByDoctorAndIsAvailableAndDate":{"name":"countByDoctorAndIsAvailableAndDate","lineBegin":70,"lineEnd":73,"annotations":["@Override"],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"{\n    return slotRepository.countByDoctorAndIsAvailableAndDate(doctor, isAvailable, date);\n}","methodInvocations":[{"scopeName":"slotRepository","methodName":"countByDoctorAndIsAvailableAndDate","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}]},"colorDay":{"name":"colorDay","lineBegin":216,"lineEnd":230,"annotations":[],"returnDataType":["Day"],"identifier":[],"parametersDataType":[{"type":"Day","variable":"day","qualifedType":""},{"type":"LocalDate","variable":"todayDate","qualifedType":""},{"type":"long","variable":"totalSlots","qualifedType":""},{"type":"long","variable":"availableSlots","qualifedType":""}],"variables":[{"type":"double","variable":"fraction","qualifedType":""}],"body":"{\n    double fraction \u003d 1 - ((double) availableSlots) / totalSlots;\n    if (totalSlots \u003d\u003d 0 || todayDate.isAfter(day.getDate())) {\n        day.setColor(CalendarColor.WHITE.getName());\n    } else if (fraction \u003e\u003d CalendarColor.RED.getMinFraction()) {\n        day.setColor(CalendarColor.RED.getName());\n    } else if (fraction \u003e CalendarColor.YELLOW.getMinFraction()) {\n        day.setColor(CalendarColor.YELLOW.getName());\n    } else {\n        day.setColor(CalendarColor.GREEN.getName());\n    }\n    return day;\n}","methodInvocations":[{"scopeName":"day","methodName":"getDate","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"day","methodName":"setColor","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"day","methodName":"setColor","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"day","methodName":"setColor","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"day","methodName":"setColor","targetClassName":"pt.iscte.hospital.objects.utils.Day"}]},"countByDoctorSpecialityNameAndDate":{"name":"countByDoctorSpecialityNameAndDate","lineBegin":75,"lineEnd":82,"annotations":["@Override"],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"String","variable":"specialityName","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"{\n    return slotRepository.countByDoctorSpecialityNameAndDate(specialityName, date);\n}","methodInvocations":[{"scopeName":"slotRepository","methodName":"countByDoctorSpecialityNameAndDate","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}]},"hasDisponibilidadeNoMes":{"name":"hasDisponibilidadeNoMes","lineBegin":232,"lineEnd":241,"annotations":["@Override"],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"List\u003cDay\u003e","variable":"calendar","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""}],"variables":[{"type":"long","variable":"availableSlots","qualifedType":""},{"type":"Day","variable":"day","qualifedType":""}],"body":"{\n    for (Day day : calendar) {\n        long availableSlots \u003d countByDoctorAndIsAvailableAndDate(doctor, true, day.getDate());\n        if (availableSlots \u003e 0) {\n            return true;\n        }\n    }\n    return false;\n}","methodInvocations":[{"scopeName":"day","methodName":"getDate","targetClassName":"pt.iscte.hospital.objects.utils.Day"}]},"findAllByDoctorAndDateOrderByTimeBeginAsc":{"name":"findAllByDoctorAndDateOrderByTimeBeginAsc","lineBegin":35,"lineEnd":38,"annotations":["@Override"],"returnDataType":["List\u003cSlot\u003e"],"identifier":["List","Slot"],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"{\n    return slotRepository.findAllByDoctorAndDateOrderByTimeBeginAsc(doctor, date);\n}","methodInvocations":[{"scopeName":"slotRepository","methodName":"findAllByDoctorAndDateOrderByTimeBeginAsc","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}]},"hasDisponibilidadeNoDia":{"name":"hasDisponibilidadeNoDia","lineBegin":243,"lineEnd":250,"annotations":["@Override"],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"LocalDate","variable":"day","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""}],"variables":[{"type":"long","variable":"availableSlots","qualifedType":""}],"body":"{\n    long availableSlots \u003d countByDoctorAndIsAvailableAndDate(doctor, true, day);\n    if (availableSlots \u003e 0) {\n        return true;\n    }\n    return false;\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"slotRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"},{"scopeName":"slotRepository","methodName":"findAllByDoctorAndDateOrderByTimeBeginAsc","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"},{"scopeName":"slotRepository","methodName":"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"},{"scopeName":"slotRepository","methodName":"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"},{"scopeName":"slotRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"},{"scopeName":"slotRepository","methodName":"findBySlotId","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"},{"scopeName":"slotRepository","methodName":"countByDoctorAndDate","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"},{"scopeName":"slotRepository","methodName":"countByDoctorAndIsAvailableAndDate","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"},{"scopeName":"slotRepository","methodName":"countByDoctorSpecialityNameAndDate","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"},{"scopeName":"slotRepository","methodName":"countByDoctorSpecialityNameAndIsAvailableAndDate","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"},{"scopeName":"slotRepository","methodName":"findAllByDoctorAndDateOrderByTimeBeginAsc","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"},{"scopeName":"timeInterval","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"slot","methodName":"setDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"setTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"setTimeEnd","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"setDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"timeInterval","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"timeInterval","methodName":"getTimeEnd","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"timeInterval","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"timeInterval","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"timeInterval","methodName":"getTimeEnd","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"timeInterval","methodName":"getTimeEnd","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"existingSlot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"existingSlot","methodName":"getTimeEnd","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"day","methodName":"getDate","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"day","methodName":"getDate","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"day","methodName":"getDate","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"day","methodName":"getDate","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"day","methodName":"getDate","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"day","methodName":"setColor","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"day","methodName":"setColor","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"day","methodName":"setColor","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"day","methodName":"setColor","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"day","methodName":"getDate","targetClassName":"pt.iscte.hospital.objects.utils.Day"},{"scopeName":"slotRepository","methodName":"countAllByIsAvailableAndDoctorSpecialityAndDateBetween","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"},{"scopeName":"slotRepository","methodName":"countAllByIsAvailableAndDoctorAndDateBetween","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}],"implementedTypes":["SlotService","pt.iscte.hospital.services.SlotService"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.data.domain.Sort","org.springframework.stereotype.Service","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.objects.utils.CalendarColor","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.objects.utils.TimeInterval","pt.iscte.hospital.repositories.user.DoctorRepository","pt.iscte.hospital.repositories.SlotRepository","java.time.DayOfWeek","java.time.LocalDate","java.time.LocalTime","java.util.ArrayList","java.util.List"]},"pt.iscte.hospital.configuration.ResourceConfig":{"qualifiedName":"pt.iscte.hospital.configuration.ResourceConfig","begin":1,"end":13,"isInterface":false,"annotations":["@Configuration"],"variables":[],"instance_variables":[],"dependencies":[],"methods":{"addResourceHandlers":{"name":"addResourceHandlers","parametersDataType":["ResourceHandlerRegistry"],"returnDataType":["void"]}},"myMethods":{"addResourceHandlers":{"name":"addResourceHandlers","lineBegin":9,"lineEnd":12,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"ResourceHandlerRegistry","variable":"registry","qualifedType":""}],"variables":[],"body":"{\n    registry.addResourceHandler(\"/uploaded_images/**\").addResourceLocations(\"file:uploaded_images/\");\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":["WebMvcConfigurer"],"extendedTypes":[],"imports":["org.springframework.context.annotation.Configuration","org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry","org.springframework.web.servlet.config.annotation.WebMvcConfigurer"]},"pt.iscte.hospital.entities.Doctor":{"qualifiedName":"pt.iscte.hospital.entities.Doctor","begin":1,"end":97,"isInterface":false,"annotations":["@Entity","@PrimaryKeyJoinColumn(name \u003d \"doctor_id\")"],"variables":["Long licenseNumber","Speciality speciality","Set\u003cSlot\u003e slots","Set\u003cPatientWaitingAppointment\u003e patientWaitingAppointments","List\u003cGrantedAuthority\u003e roles","String titleAndName"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"Long","variable":"licenseNumber","lineBegin":18,"lineEnd":18},{"annotations":["@ManyToOne","@JoinColumn(name \u003d \"speciality_id\", nullable \u003d false)"],"modifier":"private ","identifier":[],"type":"Speciality","variable":"speciality","lineBegin":20,"lineEnd":22},{"annotations":["@OneToMany(mappedBy \u003d \"doctor\")"],"modifier":"private ","identifier":["Set","Slot"],"type":"Set\u003cSlot\u003e","variable":"slots","lineBegin":24,"lineEnd":25},{"annotations":["@OneToMany(mappedBy \u003d \"doctor\")"],"modifier":"private ","identifier":["Set","PatientWaitingAppointment"],"type":"Set\u003cPatientWaitingAppointment\u003e","variable":"patientWaitingAppointments","lineBegin":27,"lineEnd":28}],"dependencies":["pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Speciality"],"methods":{"getLicenseNumber":{"name":"getLicenseNumber","parametersDataType":[],"returnDataType":["Long"]},"toString":{"name":"toString","parametersDataType":[],"returnDataType":["String"]},"getTitleAndName":{"name":"getTitleAndName","parametersDataType":[],"returnDataType":["String"]},"setLicenseNumber":{"name":"setLicenseNumber","parametersDataType":["Long"],"returnDataType":["void"]},"getSpeciality":{"name":"getSpeciality","parametersDataType":[],"returnDataType":["Speciality"]},"setSpeciality":{"name":"setSpeciality","parametersDataType":["Speciality"],"returnDataType":["void"]},"getAuthorities":{"name":"getAuthorities","parametersDataType":[],"returnDataType":["GrantedAuthority"]}},"myMethods":{"getLicenseNumber":{"name":"getLicenseNumber","lineBegin":56,"lineEnd":58,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return licenseNumber;\n}","methodInvocations":[]},"toString":{"name":"toString","lineBegin":89,"lineEnd":96,"annotations":["@Override"],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return \"Doctor{\" + super.toString() + \", licenseNumber\u003d\" + licenseNumber + \", speciality\u003d\" + speciality.getName() + \u0027}\u0027;\n}","methodInvocations":[{"scopeName":"super","methodName":"toString","targetClassName":"pt.iscte.hospital.entities.Employee"},{"scopeName":"speciality","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Speciality"}]},"getTitleAndName":{"name":"getTitleAndName","lineBegin":79,"lineEnd":87,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[{"type":"String","variable":"titleAndName","qualifedType":""}],"body":"{\n    String titleAndName \u003d \"\";\n    if (getSex().equals(\"Masculino\")) {\n        titleAndName +\u003d \"Dr. \" + getFirstAndLastName();\n    } else {\n        titleAndName +\u003d \"Dra. \" + getFirstAndLastName();\n    }\n    return titleAndName;\n}","methodInvocations":[]},"setLicenseNumber":{"name":"setLicenseNumber","lineBegin":60,"lineEnd":62,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"licenseNumber","qualifedType":""}],"variables":[],"body":"{\n    this.licenseNumber \u003d licenseNumber;\n}","methodInvocations":[]},"getSpeciality":{"name":"getSpeciality","lineBegin":64,"lineEnd":66,"annotations":[],"returnDataType":["Speciality"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return speciality;\n}","methodInvocations":[]},"setSpeciality":{"name":"setSpeciality","lineBegin":68,"lineEnd":70,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Speciality","variable":"speciality","qualifedType":""}],"variables":[],"body":"{\n    this.speciality \u003d speciality;\n}","methodInvocations":[]},"getAuthorities":{"name":"getAuthorities","lineBegin":72,"lineEnd":77,"annotations":["@Override"],"returnDataType":["List\u003cGrantedAuthority\u003e"],"identifier":["List","GrantedAuthority"],"parametersDataType":[],"variables":[],"body":"{\n    List\u003cGrantedAuthority\u003e roles \u003d new ArrayList\u003c\u003e();\n    roles.add(new SimpleGrantedAuthority(Role.ROLE_DOCTOR.name()));\n    return roles;\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"super","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.Employee"},{"scopeName":"super","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.Employee"},{"scopeName":"super","methodName":"toString","targetClassName":"pt.iscte.hospital.entities.Employee"},{"scopeName":"speciality","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Speciality"}],"implementedTypes":[],"extendedTypes":["Employee","pt.iscte.hospital.entities.Employee"],"imports":["org.springframework.security.core.GrantedAuthority","org.springframework.security.core.authority.SimpleGrantedAuthority","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.security.Role","javax.persistence","java.time.LocalDate","java.util.ArrayList","java.util.List","java.util.Set"]},"pt.iscte.hospital.controllers.utils.Common":{"qualifiedName":"pt.iscte.hospital.controllers.utils.Common","begin":1,"end":39,"isInterface":false,"annotations":["@Component"],"variables":["UserService userService","MessageService messageService","ModelMap modelMap","boolean hasUnreadMessages"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"UserService","variable":"userService","lineBegin":12,"lineEnd":12},{"annotations":[],"modifier":"private ","identifier":[],"type":"MessageService","variable":"messageService","lineBegin":13,"lineEnd":13}],"dependencies":["pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.MessageService","pt.iscte.hospital.entities.User"],"methods":{"sideNavMap":{"name":"sideNavMap","parametersDataType":[],"returnDataType":["ModelMap"]},"currentUser":{"name":"currentUser","parametersDataType":[],"returnDataType":["User"]}},"myMethods":{"sideNavMap":{"name":"sideNavMap","lineBegin":26,"lineEnd":38,"annotations":[],"returnDataType":["ModelMap"],"identifier":[],"parametersDataType":[],"variables":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"boolean","variable":"hasUnreadMessages","qualifedType":""}],"body":"{\n    ModelMap modelMap \u003d new ModelMap();\n    boolean hasUnreadMessages \u003d false;\n    if (currentUser() !\u003d null) {\n        hasUnreadMessages \u003d messageService.hasUnreadMessages(currentUser().getUserId());\n    }\n    modelMap.put(\"user_logged\", currentUser());\n    modelMap.put(\"hasUnreadMessages\", hasUnreadMessages);\n    return modelMap;\n}","methodInvocations":[{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"messageService","methodName":"hasUnreadMessages","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""}]},"currentUser":{"name":"currentUser","lineBegin":22,"lineEnd":24,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return userService.currentUser();\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"}]}},"methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"messageService","methodName":"hasUnreadMessages","targetClassName":"pt.iscte.hospital.services.MessageService"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Component","org.springframework.ui.ModelMap","pt.iscte.hospital.entities.User","pt.iscte.hospital.services.MessageService","pt.iscte.hospital.services.user.UserService"]},"pt.iscte.hospital.services.invoice.InvoiceListResponse":{"qualifiedName":"pt.iscte.hospital.services.invoice.InvoiceListResponse","begin":1,"end":18,"isInterface":false,"annotations":["@Component","@Getter","@Setter","@ToString"],"variables":["String status","List\u003cInvoiceApi\u003e invoices"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"status","lineBegin":13,"lineEnd":13},{"annotations":[],"modifier":"private ","identifier":["List","InvoiceApi"],"type":"List\u003cInvoiceApi\u003e","variable":"invoices","lineBegin":14,"lineEnd":14}],"dependencies":["pt.iscte.hospital.services.invoice.InvoiceApi"],"methods":{},"myMethods":{},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["lombok.Getter","lombok.Setter","lombok.ToString","org.springframework.stereotype.Component","java.util.List"]},"pt.iscte.hospital.repositories.user.UnitResponsibleRepository":{"qualifiedName":"pt.iscte.hospital.repositories.user.UnitResponsibleRepository","begin":1,"end":9,"isInterface":true,"annotations":["@Repository"],"variables":[],"instance_variables":[],"dependencies":[],"methods":{},"myMethods":{},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["JpaRepository\u003cUnitResponsible, Long\u003e"],"imports":["org.springframework.data.jpa.repository.JpaRepository","org.springframework.stereotype.Repository","pt.iscte.hospital.entities.UnitResponsible"]},"pt.iscte.hospital.services.invoice.InvoiceServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.invoice.InvoiceServiceImpl","begin":1,"end":287,"isInterface":false,"annotations":["@Service"],"variables":["long COMPANY_NIF","String BASE_URL","String CREATE_URL","String GET_URL","String INFO_URL","String PAY_URL","String LIST_URL","AppointmentRepository appointmentRepository","InvoiceRepository invoiceRepository","Patient patient","String name","String email","long nif","LocalDateTime dueDate","Double value","InvoiceApi invoiceApi","Invoice invoice","Invoice invoice","String invoiceApiId","boolean paymentRegistered","DateTimeFormatter df","RestTemplate restTemplate","HttpHeaders headers","JSONObject invoiceRequest","String requestUrl","InvoiceResponse response","RestTemplate restTemplate","HttpHeaders headers","String requestUrl","InvoiceResponse response","RestTemplate restTemplate","HttpHeaders headers","String requestUrl","InvoiceResponse response","RestTemplate restTemplate","HttpHeaders headers","String filters","String requestUrl","InvoiceListResponse response"],"instance_variables":[{"annotations":[],"modifier":"public ","identifier":[],"type":"long","variable":"COMPANY_NIF","lineBegin":26,"lineEnd":26},{"annotations":[],"modifier":"public ","identifier":[],"type":"String","variable":"BASE_URL","lineBegin":27,"lineEnd":27},{"annotations":[],"modifier":"public ","identifier":[],"type":"String","variable":"CREATE_URL","lineBegin":28,"lineEnd":28},{"annotations":[],"modifier":"public ","identifier":[],"type":"String","variable":"GET_URL","lineBegin":29,"lineEnd":29},{"annotations":[],"modifier":"public ","identifier":[],"type":"String","variable":"INFO_URL","lineBegin":30,"lineEnd":30},{"annotations":[],"modifier":"public ","identifier":[],"type":"String","variable":"PAY_URL","lineBegin":31,"lineEnd":31},{"annotations":[],"modifier":"public ","identifier":[],"type":"String","variable":"LIST_URL","lineBegin":32,"lineEnd":32},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"AppointmentRepository","variable":"appointmentRepository","lineBegin":34,"lineEnd":35},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"InvoiceRepository","variable":"invoiceRepository","lineBegin":36,"lineEnd":37}],"dependencies":["pt.iscte.hospital.repositories.AppointmentRepository","pt.iscte.hospital.repositories.InvoiceRepository","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.services.invoice.InvoiceApi","pt.iscte.hospital.entities.Invoice","pt.iscte.hospital.entities.Invoice","pt.iscte.hospital.services.invoice.InvoiceResponse","pt.iscte.hospital.services.invoice.InvoiceResponse","pt.iscte.hospital.services.invoice.InvoiceResponse","pt.iscte.hospital.services.invoice.InvoiceListResponse","pt.iscte.hospital.services.invoice.InvoiceApi","pt.iscte.hospital.services.invoice.InvoiceFilter","pt.iscte.hospital.services.invoice.InvoiceApi","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.services.invoice.InvoiceApi","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Invoice"],"methods":{"getListAPI":{"name":"getListAPI","parametersDataType":["InvoiceFilter"],"returnDataType":["InvoiceApi"]},"getInvoiceInfoAPI":{"name":"getInvoiceInfoAPI","parametersDataType":["String"],"returnDataType":["InvoiceApi"]},"payInvoiceAPI":{"name":"payInvoiceAPI","parametersDataType":["String"],"returnDataType":["boolean"]},"getInvoiceUrlAPI":{"name":"getInvoiceUrlAPI","parametersDataType":["String"],"returnDataType":["String"]},"payInvoice":{"name":"payInvoice","parametersDataType":["Appointment"],"returnDataType":["void"]},"createInvoiceAPI":{"name":"createInvoiceAPI","parametersDataType":["String","String","long","LocalDateTime","Double","InvoiceItem"],"returnDataType":["InvoiceApi"]},"createInvoice":{"name":"createInvoice","parametersDataType":["Appointment"],"returnDataType":["void"]},"findByInvoiceId":{"name":"findByInvoiceId","parametersDataType":["Long"],"returnDataType":["Invoice"]}},"myMethods":{"getListAPI":{"name":"getListAPI","lineBegin":250,"lineEnd":281,"annotations":["@Override"],"returnDataType":["List\u003cInvoiceApi\u003e"],"identifier":["List","InvoiceApi"],"parametersDataType":[{"type":"InvoiceFilter","variable":"invoiceFilter","qualifedType":""}],"variables":[{"type":"RestTemplate","variable":"restTemplate","qualifedType":""},{"type":"HttpHeaders","variable":"headers","qualifedType":""},{"type":"String","variable":"filters","qualifedType":""},{"type":"String","variable":"requestUrl","qualifedType":""},{"type":"InvoiceListResponse","variable":"response","qualifedType":""}],"body":"{\n    // create an instance of RestTemplate\n    RestTemplate restTemplate \u003d new RestTemplate();\n    // create headers\n    HttpHeaders headers \u003d new HttpHeaders();\n    headers.setContentType(MediaType.APPLICATION_JSON);\n    String filters \u003d invoiceFilter.filtros();\n    // request url\n    String requestUrl \u003d BASE_URL + String.format(LIST_URL, COMPANY_NIF) + filters;\n    // request\n    InvoiceListResponse response;\n    try {\n        response \u003d restTemplate.getForObject(requestUrl, InvoiceListResponse.class);\n    } catch (HttpClientErrorException | HttpServerErrorException e) {\n        System.out.println(e.getStatusCode().value());\n        System.out.println(e.getMessage());\n        return new ArrayList\u003c\u003e();\n    } catch (UnknownHttpStatusCodeException e) {\n        return null;\n    }\n    if (response \u003d\u003d null || response.getStatus().equals(\"error\")) {\n        return null;\n    }\n    return response.getInvoices();\n}","methodInvocations":[{"scopeName":"headers","methodName":"setContentType","targetClassName":""},{"scopeName":"invoiceFilter","methodName":"filtros","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceFilter"},{"scopeName":"restTemplate","methodName":"getForObject","targetClassName":""},{"scopeName":"response","methodName":"getStatus","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceListResponse"},{"scopeName":"response","methodName":"getInvoices","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceListResponse"}]},"getInvoiceInfoAPI":{"name":"getInvoiceInfoAPI","lineBegin":172,"lineEnd":201,"annotations":["@Override"],"returnDataType":["InvoiceApi"],"identifier":[],"parametersDataType":[{"type":"String","variable":"invoiceId","qualifedType":""}],"variables":[{"type":"RestTemplate","variable":"restTemplate","qualifedType":""},{"type":"HttpHeaders","variable":"headers","qualifedType":""},{"type":"String","variable":"requestUrl","qualifedType":""},{"type":"InvoiceResponse","variable":"response","qualifedType":""}],"body":"{\n    // create an instance of RestTemplate\n    RestTemplate restTemplate \u003d new RestTemplate();\n    // create headers\n    HttpHeaders headers \u003d new HttpHeaders();\n    headers.setContentType(MediaType.APPLICATION_JSON);\n    // request url\n    String requestUrl \u003d BASE_URL + String.format(INFO_URL, COMPANY_NIF, invoiceId);\n    // request\n    InvoiceResponse response;\n    try {\n        response \u003d restTemplate.getForObject(requestUrl, InvoiceResponse.class);\n    } catch (HttpClientErrorException | HttpServerErrorException e) {\n        System.out.println(e.getStatusCode().value());\n        System.out.println(e.getMessage());\n        return null;\n    } catch (UnknownHttpStatusCodeException e) {\n        return null;\n    }\n    if (response \u003d\u003d null || response.getStatus().equals(\"error\")) {\n        return null;\n    }\n    return response.getInvoice();\n}","methodInvocations":[{"scopeName":"headers","methodName":"setContentType","targetClassName":""},{"scopeName":"restTemplate","methodName":"getForObject","targetClassName":""},{"scopeName":"response","methodName":"getStatus","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceResponse"},{"scopeName":"response","methodName":"getInvoice","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceResponse"}]},"payInvoiceAPI":{"name":"payInvoiceAPI","lineBegin":210,"lineEnd":241,"annotations":["@Override"],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"String","variable":"invoiceId","qualifedType":""}],"variables":[{"type":"RestTemplate","variable":"restTemplate","qualifedType":""},{"type":"HttpHeaders","variable":"headers","qualifedType":""},{"type":"String","variable":"requestUrl","qualifedType":""},{"type":"InvoiceResponse","variable":"response","qualifedType":""}],"body":"{\n    // create an instance of RestTemplate\n    RestTemplate restTemplate \u003d new RestTemplate();\n    // create headers\n    HttpHeaders headers \u003d new HttpHeaders();\n    headers.setContentType(MediaType.APPLICATION_JSON);\n    // create body\n    // request url\n    String requestUrl \u003d BASE_URL + String.format(PAY_URL, COMPANY_NIF, invoiceId);\n    // request\n    InvoiceResponse response;\n    try {\n        response \u003d restTemplate.postForObject(requestUrl, new HttpEntity\u003c\u003e(headers), InvoiceResponse.class);\n    } catch (HttpClientErrorException | HttpServerErrorException e) {\n        System.out.println(e.getStatusCode().value());\n        System.out.println(e.getMessage());\n        return false;\n    } catch (UnknownHttpStatusCodeException e) {\n        return false;\n    }\n    if (response \u003d\u003d null || response.getStatus().equals(\"error\")) {\n        return false;\n    }\n    return true;\n}","methodInvocations":[{"scopeName":"headers","methodName":"setContentType","targetClassName":""},{"scopeName":"restTemplate","methodName":"postForObject","targetClassName":""},{"scopeName":"response","methodName":"getStatus","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceResponse"}]},"getInvoiceUrlAPI":{"name":"getInvoiceUrlAPI","lineBegin":163,"lineEnd":166,"annotations":["@Override"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"String","variable":"invoiceId","qualifedType":""}],"variables":[],"body":"{\n    return BASE_URL + String.format(GET_URL, COMPANY_NIF, invoiceId);\n}","methodInvocations":[]},"payInvoice":{"name":"payInvoice","lineBegin":70,"lineEnd":87,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[{"type":"Invoice","variable":"invoice","qualifedType":""},{"type":"String","variable":"invoiceApiId","qualifedType":""},{"type":"boolean","variable":"paymentRegistered","qualifedType":""}],"body":"{\n    // Pedir nº de factura\n    if (appointment.getInvoice() !\u003d null) {\n        Invoice invoice \u003d appointment.getInvoice();\n        String invoiceApiId \u003d invoice.getInvoiceApiId();\n        boolean paymentRegistered \u003d payInvoiceAPI(invoiceApiId);\n        if (paymentRegistered) {\n            invoice.setPaidDate(LocalDateTime.now());\n            invoice.setInvoiceState(InvoiceState.PAGA.getStateNr());\n            invoiceRepository.save(invoice);\n        } else {\n            // Pagamento não fica registado no serviço da API\n            throw new PaymentException();\n        }\n    }\n}","methodInvocations":[{"scopeName":"appointment","methodName":"getInvoice","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getInvoice","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"invoice","methodName":"getInvoiceApiId","targetClassName":"pt.iscte.hospital.entities.Invoice"},{"scopeName":"invoice","methodName":"setPaidDate","targetClassName":"pt.iscte.hospital.entities.Invoice"},{"scopeName":"invoice","methodName":"setInvoiceState","targetClassName":"pt.iscte.hospital.entities.Invoice"},{"scopeName":"invoiceRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.InvoiceRepository"}]},"createInvoiceAPI":{"name":"createInvoiceAPI","lineBegin":103,"lineEnd":154,"annotations":["@Override"],"returnDataType":["InvoiceApi"],"identifier":[],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""},{"type":"String","variable":"email","qualifedType":""},{"type":"long","variable":"nif","qualifedType":""},{"type":"LocalDateTime","variable":"dueDate","qualifedType":""},{"type":"Double","variable":"value","qualifedType":""},{"type":"List\u003cInvoiceItem\u003e","variable":"invoiceItems","qualifedType":""}],"variables":[{"type":"DateTimeFormatter","variable":"df","qualifedType":""},{"type":"RestTemplate","variable":"restTemplate","qualifedType":""},{"type":"HttpHeaders","variable":"headers","qualifedType":""},{"type":"JSONObject","variable":"invoiceRequest","qualifedType":""},{"type":"String","variable":"requestUrl","qualifedType":""},{"type":"InvoiceResponse","variable":"response","qualifedType":""}],"body":"{\n    DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\u0027Z\u0027\");\n    // create an instance of RestTemplate\n    RestTemplate restTemplate \u003d new RestTemplate();\n    // create headers\n    HttpHeaders headers \u003d new HttpHeaders();\n    headers.setContentType(MediaType.APPLICATION_JSON);\n    // create body\n    JSONObject invoiceRequest \u003d new JSONObject();\n    invoiceRequest.put(\"name\", name);\n    invoiceRequest.put(\"email\", email);\n    invoiceRequest.put(\"nif\", Long.toString(nif));\n    invoiceRequest.put(\"duedate\", df.format(dueDate));\n    if (value !\u003d null) {\n        invoiceRequest.put(\"value\", Double.toString(value));\n    } else {\n        invoiceRequest.put(\"items\", invoiceItems);\n    }\n    // request url\n    String requestUrl \u003d BASE_URL + String.format(CREATE_URL, COMPANY_NIF);\n    // request\n    InvoiceResponse response;\n    try {\n        response \u003d restTemplate.postForObject(requestUrl, new HttpEntity\u003c\u003e(invoiceRequest.toString(), headers), InvoiceResponse.class);\n    } catch (HttpClientErrorException | HttpServerErrorException e) {\n        System.out.println(e.getStatusCode().value());\n        System.out.println(e.getMessage());\n        return null;\n    } catch (UnknownHttpStatusCodeException e) {\n        return null;\n    }\n    if (response \u003d\u003d null || response.getStatus().equals(\"error\")) {\n        return null;\n    }\n    return response.getInvoice();\n}","methodInvocations":[{"scopeName":"headers","methodName":"setContentType","targetClassName":""},{"scopeName":"invoiceRequest","methodName":"put","targetClassName":""},{"scopeName":"invoiceRequest","methodName":"put","targetClassName":""},{"scopeName":"invoiceRequest","methodName":"put","targetClassName":""},{"scopeName":"df","methodName":"format","targetClassName":""},{"scopeName":"invoiceRequest","methodName":"put","targetClassName":""},{"scopeName":"invoiceRequest","methodName":"put","targetClassName":""},{"scopeName":"invoiceRequest","methodName":"put","targetClassName":""},{"scopeName":"invoiceRequest","methodName":"toString","targetClassName":""},{"scopeName":"restTemplate","methodName":"postForObject","targetClassName":""},{"scopeName":"response","methodName":"getStatus","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceResponse"},{"scopeName":"response","methodName":"getInvoice","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceResponse"}]},"createInvoice":{"name":"createInvoice","lineBegin":40,"lineEnd":68,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[{"type":"Patient","variable":"patient","qualifedType":""},{"type":"String","variable":"name","qualifedType":""},{"type":"String","variable":"email","qualifedType":""},{"type":"long","variable":"nif","qualifedType":""},{"type":"LocalDateTime","variable":"dueDate","qualifedType":""},{"type":"Double","variable":"value","qualifedType":""},{"type":"InvoiceApi","variable":"invoiceApi","qualifedType":""},{"type":"Invoice","variable":"invoice","qualifedType":""}],"body":"{\n    // Pedir nº de factura\n    if (appointment.getInvoice() \u003d\u003d null) {\n        Patient patient \u003d appointment.getPatient();\n        String name \u003d patient.getName();\n        String email \u003d patient.getEmail();\n        long nif \u003d patient.getNif();\n        LocalDateTime dueDate \u003d LocalDateTime.now().plusDays(Invoice.NR_DAYS_TO_PAY_INVOICE);\n        Double value \u003d appointment.getDoctor().getSpeciality().getPrice();\n        InvoiceApi invoiceApi \u003d createInvoiceAPI(name, email, nif, dueDate, value, null);\n        // se existir nº, adicionar o número ao appointment e salvar\n        if (invoiceApi !\u003d null \u0026\u0026 invoiceApi.getId() !\u003d null) {\n            Invoice invoice \u003d new Invoice(appointment, invoiceApi);\n            appointment.setInvoice(invoice);\n            invoiceRepository.save(invoice);\n            appointment.setInvoice(invoice);\n            appointmentRepository.save(appointment);\n        }\n    }\n}","methodInvocations":[{"scopeName":"appointment","methodName":"getInvoice","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"patient","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patient","methodName":"getEmail","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patient","methodName":"getNif","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointment","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getDoctor()","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment.getDoctor().getSpeciality()","methodName":"getPrice","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"invoiceApi","methodName":"getId","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceApi"},{"scopeName":"appointment","methodName":"setInvoice","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"invoiceRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.InvoiceRepository"},{"scopeName":"appointment","methodName":"setInvoice","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findByInvoiceId":{"name":"findByInvoiceId","lineBegin":283,"lineEnd":286,"annotations":["@Override"],"returnDataType":["Invoice"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"invoiceId","qualifedType":""}],"variables":[],"body":"{\n    return invoiceRepository.findByInvoiceId(invoiceId);\n}","methodInvocations":[{"scopeName":"invoiceRepository","methodName":"findByInvoiceId","targetClassName":"pt.iscte.hospital.repositories.InvoiceRepository"}]}},"methodInvocations":[{"scopeName":"appointment","methodName":"getInvoice","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"patient","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patient","methodName":"getEmail","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patient","methodName":"getNif","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointment","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getDoctor()","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment.getDoctor().getSpeciality()","methodName":"getPrice","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"invoiceApi","methodName":"getId","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceApi"},{"scopeName":"appointment","methodName":"setInvoice","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"invoiceRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.InvoiceRepository"},{"scopeName":"appointment","methodName":"setInvoice","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointment","methodName":"getInvoice","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getInvoice","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"invoice","methodName":"getInvoiceApiId","targetClassName":"pt.iscte.hospital.entities.Invoice"},{"scopeName":"invoice","methodName":"setPaidDate","targetClassName":"pt.iscte.hospital.entities.Invoice"},{"scopeName":"invoice","methodName":"setInvoiceState","targetClassName":"pt.iscte.hospital.entities.Invoice"},{"scopeName":"invoiceRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.InvoiceRepository"},{"scopeName":"response","methodName":"getStatus","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceResponse"},{"scopeName":"response","methodName":"getInvoice","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceResponse"},{"scopeName":"response","methodName":"getStatus","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceResponse"},{"scopeName":"response","methodName":"getInvoice","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceResponse"},{"scopeName":"response","methodName":"getStatus","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceResponse"},{"scopeName":"invoiceFilter","methodName":"filtros","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceFilter"},{"scopeName":"response","methodName":"getStatus","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceListResponse"},{"scopeName":"response","methodName":"getInvoices","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceListResponse"},{"scopeName":"invoiceRepository","methodName":"findByInvoiceId","targetClassName":"pt.iscte.hospital.repositories.InvoiceRepository"}],"implementedTypes":["InvoiceService","pt.iscte.hospital.services.invoice.InvoiceService"],"extendedTypes":[],"imports":["org.json.JSONObject","org.springframework.beans.factory.annotation.Autowired","org.springframework.http","org.springframework.stereotype.Service","org.springframework.web.client.HttpClientErrorException","org.springframework.web.client.HttpServerErrorException","org.springframework.web.client.RestTemplate","org.springframework.web.client.UnknownHttpStatusCodeException","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Invoice","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.states.InvoiceState","pt.iscte.hospital.repositories.AppointmentRepository","pt.iscte.hospital.repositories.InvoiceRepository","pt.iscte.hospital.exceptions.PaymentException","java.time.LocalDateTime","java.time.format.DateTimeFormatter","java.util"]},"pt.iscte.hospital.repositories.SlotRepository":{"qualifiedName":"pt.iscte.hospital.repositories.SlotRepository","begin":1,"end":49,"isInterface":true,"annotations":["@Repository"],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Doctor"],"methods":{"countAllByIsAvailableAndDoctorAndDateBetween":{"name":"countAllByIsAvailableAndDoctorAndDateBetween","parametersDataType":["boolean","Doctor","LocalDate","LocalDate"],"returnDataType":["Long"]},"findByDoctorAndDateAndTimeBegin":{"name":"findByDoctorAndDateAndTimeBegin","parametersDataType":["Doctor","LocalDate","LocalTime"],"returnDataType":["Slot"]},"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc":{"name":"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc","parametersDataType":["Doctor","boolean"],"returnDataType":["Slot"]},"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc":{"name":"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc","parametersDataType":["Doctor","boolean","LocalDate"],"returnDataType":["Slot"]},"countAllByIsAvailableAndDoctorSpecialityAndDateBetween":{"name":"countAllByIsAvailableAndDoctorSpecialityAndDateBetween","parametersDataType":["boolean","Speciality","LocalDate","LocalDate"],"returnDataType":["Long"]},"countByDoctorSpecialityNameAndIsAvailableAndDate":{"name":"countByDoctorSpecialityNameAndIsAvailableAndDate","parametersDataType":["String","boolean","LocalDate"],"returnDataType":["Long"]},"countByDoctorAndDate":{"name":"countByDoctorAndDate","parametersDataType":["Doctor","LocalDate"],"returnDataType":["Long"]},"countByDoctorAndIsAvailableAndDate":{"name":"countByDoctorAndIsAvailableAndDate","parametersDataType":["Doctor","boolean","LocalDate"],"returnDataType":["Long"]},"countByDoctorSpecialityNameAndDate":{"name":"countByDoctorSpecialityNameAndDate","parametersDataType":["String","LocalDate"],"returnDataType":["Long"]},"findBySlotId":{"name":"findBySlotId","parametersDataType":["Long"],"returnDataType":["Slot"]},"findAllByDoctorAndDateOrderByTimeBeginAsc":{"name":"findAllByDoctorAndDateOrderByTimeBeginAsc","parametersDataType":["Doctor","LocalDate"],"returnDataType":["Slot"]}},"myMethods":{"countAllByIsAvailableAndDoctorAndDateBetween":{"name":"countAllByIsAvailableAndDoctorAndDateBetween","lineBegin":42,"lineEnd":46,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"LocalDate","variable":"dateBegin","qualifedType":""},{"type":"LocalDate","variable":"dateEnd","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByDoctorAndDateAndTimeBegin":{"name":"findByDoctorAndDateAndTimeBegin","lineBegin":48,"lineEnd":48,"annotations":[],"returnDataType":["Slot"],"identifier":[],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"LocalTime","variable":"timeBegin","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc":{"name":"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc","lineBegin":17,"lineEnd":19,"annotations":[],"returnDataType":["List\u003cSlot\u003e"],"identifier":["List","Slot"],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"boolean","variable":"isAvailable","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc":{"name":"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc","lineBegin":21,"lineEnd":24,"annotations":[],"returnDataType":["List\u003cSlot\u003e"],"identifier":["List","Slot"],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countAllByIsAvailableAndDoctorSpecialityAndDateBetween":{"name":"countAllByIsAvailableAndDoctorSpecialityAndDateBetween","lineBegin":36,"lineEnd":40,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"Speciality","variable":"speciality","qualifedType":""},{"type":"LocalDate","variable":"dateBegin","qualifedType":""},{"type":"LocalDate","variable":"dateEnd","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countByDoctorSpecialityNameAndIsAvailableAndDate":{"name":"countByDoctorSpecialityNameAndIsAvailableAndDate","lineBegin":32,"lineEnd":32,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"String","variable":"specialityName","qualifedType":""},{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countByDoctorAndDate":{"name":"countByDoctorAndDate","lineBegin":26,"lineEnd":26,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countByDoctorAndIsAvailableAndDate":{"name":"countByDoctorAndIsAvailableAndDate","lineBegin":28,"lineEnd":28,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"boolean","variable":"isAvailable","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countByDoctorSpecialityNameAndDate":{"name":"countByDoctorSpecialityNameAndDate","lineBegin":30,"lineEnd":30,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"String","variable":"specialityName","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findBySlotId":{"name":"findBySlotId","lineBegin":34,"lineEnd":34,"annotations":[],"returnDataType":["Slot"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"slotId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByDoctorAndDateOrderByTimeBeginAsc":{"name":"findAllByDoctorAndDateOrderByTimeBeginAsc","lineBegin":15,"lineEnd":15,"annotations":[],"returnDataType":["List\u003cSlot\u003e"],"identifier":["List","Slot"],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["JpaRepository\u003cSlot, Long\u003e"],"imports":["org.springframework.data.jpa.repository.JpaRepository","org.springframework.stereotype.Repository","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Speciality","java.time.LocalDate","java.time.LocalTime","java.util.List"]},"pt.iscte.hospital.repositories.user.EmployeeRepository":{"qualifiedName":"pt.iscte.hospital.repositories.user.EmployeeRepository","begin":1,"end":9,"isInterface":true,"annotations":["@Repository"],"variables":[],"instance_variables":[],"dependencies":[],"methods":{},"myMethods":{},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["JpaRepository\u003cEmployee, Long\u003e"],"imports":["org.springframework.data.jpa.repository.JpaRepository","org.springframework.stereotype.Repository","pt.iscte.hospital.entities.Employee"]},"pt.iscte.hospital.entities.Nationality":{"qualifiedName":"pt.iscte.hospital.entities.Nationality","begin":1,"end":47,"isInterface":false,"annotations":["@Entity"],"variables":["Long nationalityId","String name"],"instance_variables":[{"annotations":["@Id","@GeneratedValue(strategy \u003d GenerationType.IDENTITY)"],"modifier":"private ","identifier":[],"type":"Long","variable":"nationalityId","lineBegin":11,"lineEnd":13},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"name","lineBegin":14,"lineEnd":14}],"dependencies":[],"methods":{"setName":{"name":"setName","parametersDataType":["String"],"returnDataType":["void"]},"getNationalityId":{"name":"getNationalityId","parametersDataType":[],"returnDataType":["Long"]},"setNationalityId":{"name":"setNationalityId","parametersDataType":["Long"],"returnDataType":["void"]},"getName":{"name":"getName","parametersDataType":[],"returnDataType":["String"]},"toString":{"name":"toString","parametersDataType":[],"returnDataType":["String"]}},"myMethods":{"setName":{"name":"setName","lineBegin":36,"lineEnd":38,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"{\n    this.name \u003d name;\n}","methodInvocations":[]},"getNationalityId":{"name":"getNationalityId","lineBegin":24,"lineEnd":26,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return nationalityId;\n}","methodInvocations":[]},"setNationalityId":{"name":"setNationalityId","lineBegin":28,"lineEnd":30,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"nationalityId","qualifedType":""}],"variables":[],"body":"{\n    this.nationalityId \u003d nationalityId;\n}","methodInvocations":[]},"getName":{"name":"getName","lineBegin":32,"lineEnd":34,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return name;\n}","methodInvocations":[]},"toString":{"name":"toString","lineBegin":40,"lineEnd":46,"annotations":["@Override"],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return \"Nationality{\" + \"nationalityId\u003d\" + nationalityId + \", name\u003d\u0027\" + name + \u0027\\\u0027\u0027 + \u0027}\u0027;\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["javax.persistence.Entity","javax.persistence.GeneratedValue","javax.persistence.GenerationType","javax.persistence.Id"]},"pt.iscte.hospital.controllers.appointment.AppointmentMsgController":{"qualifiedName":"pt.iscte.hospital.controllers.appointment.AppointmentMsgController","begin":1,"end":78,"isInterface":false,"annotations":["@Controller"],"variables":["Common common","PatientWaitingAppointmentService patientWaitingAppointmentService","SlotService slotService","AppointmentService appointmentService","PatientWaitingAppointment patientWA","boolean hasAlreadyRepliedToOffer","Slot slot","Patient patient","Appointment appointment"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"Common","variable":"common","lineBegin":21,"lineEnd":22},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"PatientWaitingAppointmentService","variable":"patientWaitingAppointmentService","lineBegin":23,"lineEnd":24},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"SlotService","variable":"slotService","lineBegin":25,"lineEnd":26},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"AppointmentService","variable":"appointmentService","lineBegin":27,"lineEnd":28}],"dependencies":["pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService","pt.iscte.hospital.services.SlotService","pt.iscte.hospital.services.AppointmentService","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Appointment"],"methods":{"confirmarConsultaMsg":{"name":"confirmarConsultaMsg","parametersDataType":["ModelMap","Long","String"],"returnDataType":["String"]}},"myMethods":{"confirmarConsultaMsg":{"name":"confirmarConsultaMsg","lineBegin":30,"lineEnd":77,"annotations":["@GetMapping(value \u003d \"/patient/waiting-appointment/{awaitingIdNumber}/{reply}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"awaitingIdNumber","qualifedType":""},{"type":"String","variable":"reply","qualifedType":""}],"variables":[{"type":"PatientWaitingAppointment","variable":"patientWA","qualifedType":""},{"type":"boolean","variable":"hasAlreadyRepliedToOffer","qualifedType":""},{"type":"Slot","variable":"slot","qualifedType":""},{"type":"Patient","variable":"patient","qualifedType":""},{"type":"Appointment","variable":"appointment","qualifedType":""}],"body":"{\n    if (awaitingIdNumber \u003d\u003d null || reply \u003d\u003d null) {\n        return \"/patient/messages\";\n    }\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"hasButton2\", true);\n    modelMap.put(\"button2_text\", \"Mensagens\");\n    modelMap.put(\"button2_url\", \"/patient/messages\");\n    PatientWaitingAppointment patientWA \u003d patientWaitingAppointmentService.findByPatientWaitingAppointmentId(awaitingIdNumber);\n    boolean hasAlreadyRepliedToOffer \u003d patientWA.isRepliedToOffer();\n    if (hasAlreadyRepliedToOffer) {\n        modelMap.put(\"message\", \"Já tinha respondido a esta mensagem ou não respondeu a tempo.\");\n        modelMap.put(\"imageURL\", AlertMessageImage.FAILURE.getImageURL());\n        return \"components/alert-message\";\n    }\n    Slot slot \u003d patientWA.getSlot();\n    Patient patient \u003d patientWA.getPatient();\n    if (reply.equals(\"yes\")) {\n        slot.setAvailable(false);\n        patientWA.setSlotAccepted(true);\n        modelMap.put(\"message\", \"Consulta Confirmada.\");\n    } else {\n        slot.setAvailable(true);\n        patientWA.setSlotAccepted(false);\n        modelMap.put(\"message\", \"Consulta Não Confirmada.\");\n    }\n    patientWA.setRepliedToOffer(true);\n    patientWaitingAppointmentService.save(patientWA);\n    slotService.saveSlot(slot);\n    Appointment appointment \u003d new Appointment(patient, slot);\n    appointmentService.saveAppointment(appointment);\n    modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n    return \"components/alert-message\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"patientWaitingAppointmentService","methodName":"findByPatientWaitingAppointmentId","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWA","methodName":"isRepliedToOffer","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWA","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWA","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"patientWA","methodName":"setSlotAccepted","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"patientWA","methodName":"setSlotAccepted","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWA","methodName":"setRepliedToOffer","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"}]}},"methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"patientWaitingAppointmentService","methodName":"findByPatientWaitingAppointmentId","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWA","methodName":"isRepliedToOffer","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWA","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWA","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"patientWA","methodName":"setSlotAccepted","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"patientWA","methodName":"setSlotAccepted","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWA","methodName":"setRepliedToOffer","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Controller","org.springframework.ui.ModelMap","org.springframework.web.bind.annotation.GetMapping","org.springframework.web.bind.annotation.PathVariable","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.objects.utils.AlertMessageImage","pt.iscte.hospital.services.AppointmentService","pt.iscte.hospital.services.SlotService","pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"]},"pt.iscte.hospital.repositories.user.ReceptionistRepository":{"qualifiedName":"pt.iscte.hospital.repositories.user.ReceptionistRepository","begin":1,"end":10,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Receptionist"],"methods":{"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["Receptionist"]}},"myMethods":{"findAll":{"name":"findAll","lineBegin":9,"lineEnd":9,"annotations":[],"returnDataType":["List\u003cReceptionist\u003e"],"identifier":["List","Receptionist"],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["JpaRepository\u003cReceptionist, Long\u003e"],"imports":["org.springframework.data.jpa.repository.JpaRepository","pt.iscte.hospital.entities.Receptionist","java.util.List"]},"pt.iscte.hospital.services.user.ReceptionistServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.user.ReceptionistServiceImpl","begin":1,"end":19,"isInterface":false,"annotations":["@Service"],"variables":["ReceptionistRepository receptionistRepository"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"ReceptionistRepository","variable":"receptionistRepository","lineBegin":12,"lineEnd":13}],"dependencies":["pt.iscte.hospital.repositories.user.ReceptionistRepository","pt.iscte.hospital.entities.Receptionist"],"methods":{"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["Receptionist"]}},"myMethods":{"findAll":{"name":"findAll","lineBegin":15,"lineEnd":18,"annotations":["@Override"],"returnDataType":["List\u003cReceptionist\u003e"],"identifier":["List","Receptionist"],"parametersDataType":[],"variables":[],"body":"{\n    return receptionistRepository.findAll();\n}","methodInvocations":[{"scopeName":"receptionistRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.user.ReceptionistRepository"}]}},"methodInvocations":[{"scopeName":"receptionistRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.user.ReceptionistRepository"}],"implementedTypes":["pt.iscte.hospital.services.user.ReceptionistService","ReceptionistService"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Service","pt.iscte.hospital.entities.Receptionist","pt.iscte.hospital.repositories.user.ReceptionistRepository","java.util.List"]},"pt.iscte.hospital.repositories.InvoiceRepository":{"qualifiedName":"pt.iscte.hospital.repositories.InvoiceRepository","begin":1,"end":11,"isInterface":true,"annotations":["@Repository"],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Invoice"],"methods":{"findByInvoiceId":{"name":"findByInvoiceId","parametersDataType":["Long"],"returnDataType":["Invoice"]}},"myMethods":{"findByInvoiceId":{"name":"findByInvoiceId","lineBegin":9,"lineEnd":9,"annotations":[],"returnDataType":["Invoice"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"invoiceId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["JpaRepository\u003cInvoice, Long\u003e"],"imports":["org.springframework.data.jpa.repository.JpaRepository","org.springframework.stereotype.Repository","pt.iscte.hospital.entities.Invoice"]},"pt.iscte.hospital.services.AppointmentService":{"qualifiedName":"pt.iscte.hospital.services.AppointmentService","begin":1,"end":126,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Invoice"],"methods":{"findAllByPatientAndAppointmentStatus":{"name":"findAllByPatientAndAppointmentStatus","parametersDataType":["Patient","Integer"],"returnDataType":["Appointment"]},"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc":{"name":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc","parametersDataType":["Long","LocalDate","int","boolean"],"returnDataType":["Appointment"]},"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase":{"name":"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase","parametersDataType":["LocalDate","Integer","String","String","String"],"returnDataType":["Appointment"]},"findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","parametersDataType":["Long","Integer","LocalDate","String","String"],"returnDataType":["Appointment"]},"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["Appointment"]},"findAllBySlotDoctorUserId":{"name":"findAllBySlotDoctorUserId","parametersDataType":["Long"],"returnDataType":["Appointment"]},"countBySlotDateAndAppointmentStatusAndHasChecked":{"name":"countBySlotDateAndAppointmentStatusAndHasChecked","parametersDataType":["LocalDate","int","boolean"],"returnDataType":["long"]},"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus":{"name":"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus","parametersDataType":["Long","Long","int"],"returnDataType":["long"]},"findAllBySlotDateAndAppointmentStatus":{"name":"findAllBySlotDateAndAppointmentStatus","parametersDataType":["LocalDate","Integer"],"returnDataType":["Appointment"]},"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc":{"name":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc","parametersDataType":["Long","LocalDate","int"],"returnDataType":["Appointment"]},"findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId":{"name":"findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId","parametersDataType":["String","Long"],"returnDataType":["Appointment"]},"findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","parametersDataType":["String","String","String"],"returnDataType":["Appointment"]},"findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked":{"name":"findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked","parametersDataType":["Long","LocalDate","Integer","boolean"],"returnDataType":["Appointment"]},"findAllBySlotDoctorUserIdAndAppointmentStatus":{"name":"findAllBySlotDoctorUserIdAndAppointmentStatus","parametersDataType":["Long","int"],"returnDataType":["Appointment"]},"findAllByAppointmentStatus":{"name":"findAllByAppointmentStatus","parametersDataType":["Integer"],"returnDataType":["Appointment"]},"findAllByPatientUserIdAndSlotDateAndAppointmentStatus":{"name":"findAllByPatientUserIdAndSlotDateAndAppointmentStatus","parametersDataType":["Long","LocalDate","Integer"],"returnDataType":["Appointment"]},"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked":{"name":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked","parametersDataType":["long","LocalDate","int","boolean"],"returnDataType":["long"]},"findByAppointmentId":{"name":"findByAppointmentId","parametersDataType":["Long"],"returnDataType":["Appointment"]},"findAllByPatientUserId":{"name":"findAllByPatientUserId","parametersDataType":["Long"],"returnDataType":["Appointment"]},"findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId":{"name":"findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId","parametersDataType":["LocalDate","String","Long"],"returnDataType":["Appointment"]},"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus":{"name":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus","parametersDataType":["long","LocalDate","int"],"returnDataType":["long"]},"findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","parametersDataType":["LocalDate","String","String","String"],"returnDataType":["Appointment"]},"findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","parametersDataType":["Long","Integer","String","String"],"returnDataType":["Appointment"]},"saveAppointment":{"name":"saveAppointment","parametersDataType":["Appointment"],"returnDataType":["void"]},"findAllByAppointmentStatusAndInvoice":{"name":"findAllByAppointmentStatusAndInvoice","parametersDataType":["int","Invoice"],"returnDataType":["Appointment"]},"countBySlotDateAndAppointmentStatus":{"name":"countBySlotDateAndAppointmentStatus","parametersDataType":["LocalDate","int"],"returnDataType":["long"]}},"myMethods":{"findAllByPatientAndAppointmentStatus":{"name":"findAllByPatientAndAppointmentStatus","lineBegin":20,"lineEnd":21,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Patient","variable":"patient","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc":{"name":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc","lineBegin":82,"lineEnd":86,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""},{"type":"boolean","variable":"hasChecked","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase":{"name":"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase","lineBegin":74,"lineEnd":79,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","lineBegin":23,"lineEnd":28,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAll":{"name":"findAll","lineBegin":48,"lineEnd":48,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDoctorUserId":{"name":"findAllBySlotDoctorUserId","lineBegin":51,"lineEnd":51,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countBySlotDateAndAppointmentStatusAndHasChecked":{"name":"countBySlotDateAndAppointmentStatusAndHasChecked","lineBegin":100,"lineEnd":103,"annotations":[],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""},{"type":"boolean","variable":"hasChecked","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus":{"name":"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus","lineBegin":106,"lineEnd":110,"annotations":[],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"doctorId","qualifedType":""},{"type":"Long","variable":"patientId","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDateAndAppointmentStatus":{"name":"findAllBySlotDateAndAppointmentStatus","lineBegin":45,"lineEnd":46,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc":{"name":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc","lineBegin":88,"lineEnd":92,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId":{"name":"findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId","lineBegin":53,"lineEnd":54,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"String","variable":"patientName","qualifedType":""},{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","lineBegin":69,"lineEnd":72,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked":{"name":"findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked","lineBegin":36,"lineEnd":39,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""},{"type":"boolean","variable":"hasChecked","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDoctorUserIdAndAppointmentStatus":{"name":"findAllBySlotDoctorUserIdAndAppointmentStatus","lineBegin":60,"lineEnd":60,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"doctorId","qualifedType":""},{"type":"int","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByAppointmentStatus":{"name":"findAllByAppointmentStatus","lineBegin":15,"lineEnd":15,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Integer","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByPatientUserIdAndSlotDateAndAppointmentStatus":{"name":"findAllByPatientUserIdAndSlotDateAndAppointmentStatus","lineBegin":41,"lineEnd":43,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked":{"name":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked","lineBegin":118,"lineEnd":122,"annotations":[],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"long","variable":"doctorId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""},{"type":"boolean","variable":"hasChecked","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByAppointmentId":{"name":"findByAppointmentId","lineBegin":13,"lineEnd":13,"annotations":[],"returnDataType":["Appointment"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByPatientUserId":{"name":"findAllByPatientUserId","lineBegin":17,"lineEnd":17,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId":{"name":"findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId","lineBegin":56,"lineEnd":58,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""},{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus":{"name":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus","lineBegin":113,"lineEnd":116,"annotations":[],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"long","variable":"doctorId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","lineBegin":63,"lineEnd":67,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","lineBegin":30,"lineEnd":34,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"saveAppointment":{"name":"saveAppointment","lineBegin":11,"lineEnd":11,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByAppointmentStatusAndInvoice":{"name":"findAllByAppointmentStatusAndInvoice","lineBegin":125,"lineEnd":125,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"int","variable":"appointmentStatus","qualifedType":""},{"type":"Invoice","variable":"invoice","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countBySlotDateAndAppointmentStatus":{"name":"countBySlotDateAndAppointmentStatus","lineBegin":95,"lineEnd":97,"annotations":[],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Invoice","pt.iscte.hospital.entities.Patient","java.time.LocalDate","java.util.List"]},"pt.iscte.hospital.entities.Speciality":{"qualifiedName":"pt.iscte.hospital.entities.Speciality","begin":1,"end":71,"isInterface":false,"annotations":["@Entity","@Getter"],"variables":["Long specialityId","String name","double price","List\u003cDoctor\u003e doctors"],"instance_variables":[{"annotations":["@Id","// https://www.baeldung.com/hibernate-identifiers\n@GeneratedValue(strategy \u003d GenerationType.IDENTITY)"],"modifier":"private ","identifier":[],"type":"Long","variable":"specialityId","lineBegin":12,"lineEnd":14},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"name","lineBegin":16,"lineEnd":16},{"annotations":[],"modifier":"private ","identifier":[],"type":"double","variable":"price","lineBegin":18,"lineEnd":18},{"annotations":["@OneToMany(mappedBy \u003d \"speciality\")"],"modifier":"private ","identifier":["List","Doctor"],"type":"List\u003cDoctor\u003e","variable":"doctors","lineBegin":20,"lineEnd":21}],"dependencies":["pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor"],"methods":{"setName":{"name":"setName","parametersDataType":["String"],"returnDataType":["void"]},"getDoctors":{"name":"getDoctors","parametersDataType":[],"returnDataType":["Doctor"]},"getName":{"name":"getName","parametersDataType":[],"returnDataType":["String"]},"setDoctors":{"name":"setDoctors","parametersDataType":["Doctor"],"returnDataType":["void"]},"getSpecialityId":{"name":"getSpecialityId","parametersDataType":[],"returnDataType":["Long"]},"toString":{"name":"toString","parametersDataType":[],"returnDataType":["String"]},"setSpecialityId":{"name":"setSpecialityId","parametersDataType":["Long"],"returnDataType":["void"]}},"myMethods":{"setName":{"name":"setName","lineBegin":51,"lineEnd":53,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"{\n    this.name \u003d name;\n}","methodInvocations":[]},"getDoctors":{"name":"getDoctors","lineBegin":55,"lineEnd":57,"annotations":[],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[],"variables":[],"body":"{\n    return doctors;\n}","methodInvocations":[]},"getName":{"name":"getName","lineBegin":47,"lineEnd":49,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return name;\n}","methodInvocations":[]},"setDoctors":{"name":"setDoctors","lineBegin":59,"lineEnd":61,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"List\u003cDoctor\u003e","variable":"doctors","qualifedType":""}],"variables":[],"body":"{\n    this.doctors \u003d doctors;\n}","methodInvocations":[]},"getSpecialityId":{"name":"getSpecialityId","lineBegin":39,"lineEnd":41,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return specialityId;\n}","methodInvocations":[]},"toString":{"name":"toString","lineBegin":63,"lineEnd":70,"annotations":["@Override"],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return \"Speciality{\" + \"specialityId\u003d\" + specialityId + \", name\u003d\u0027\" + name + \u0027\\\u0027\u0027 + \", price\u003d\" + price + \u0027}\u0027;\n}","methodInvocations":[]},"setSpecialityId":{"name":"setSpecialityId","lineBegin":43,"lineEnd":45,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"specialityId","qualifedType":""}],"variables":[],"body":"{\n    this.specialityId \u003d specialityId;\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["lombok.Getter","javax.persistence","java.util.List"]},"pt.iscte.hospital.services.ImageUploadServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.ImageUploadServiceImpl","begin":1,"end":89,"isInterface":false,"annotations":["@Service"],"variables":["String dirSavePath","long IMAGE_MAX_SIZE","String[] IMAGE_TYPES","String contentType","String rootDir","String savePath","String fileExtension","String fileName","String contentType","boolean isImage","String imageType","HashMap\u003cString,String\u003e imageExtensions"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"dirSavePath","lineBegin":14,"lineEnd":14},{"annotations":[],"modifier":"private ","identifier":[],"type":"long","variable":"IMAGE_MAX_SIZE","lineBegin":15,"lineEnd":15},{"annotations":[],"modifier":"private ","identifier":[],"type":"String[]","variable":"IMAGE_TYPES","lineBegin":16,"lineEnd":16}],"dependencies":[],"methods":{"verifyImage":{"name":"verifyImage","parametersDataType":["MultipartFile"],"returnDataType":["void"]},"getFileExtension":{"name":"getFileExtension","parametersDataType":["String"],"returnDataType":["String"]},"getImageMaxSize":{"name":"getImageMaxSize","parametersDataType":[],"returnDataType":["long"]},"uploadImage":{"name":"uploadImage","parametersDataType":["MultipartFile","String"],"returnDataType":["String"]}},"myMethods":{"verifyImage":{"name":"verifyImage","lineBegin":53,"lineEnd":72,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"MultipartFile","variable":"imageFile","qualifedType":""}],"variables":[{"type":"String","variable":"contentType","qualifedType":""},{"type":"boolean","variable":"isImage","qualifedType":""},{"type":"String","variable":"imageType","qualifedType":""}],"body":"{\n    String contentType \u003d imageFile.getContentType();\n    boolean isImage \u003d false;\n    // Check if size too big\n    if (imageFile.getSize() \u003e IMAGE_MAX_SIZE) {\n        throw new ImageSizeException();\n    }\n    // Check if image jpg or png\n    for (String imageType : IMAGE_TYPES) {\n        if (contentType.equals(imageType)) {\n            isImage \u003d true;\n            break;\n        }\n    }\n    if (!isImage) {\n        throw new ImageTypeException();\n    }\n}","methodInvocations":[{"scopeName":"contentType","methodName":"equals","targetClassName":""}]},"getFileExtension":{"name":"getFileExtension","lineBegin":81,"lineEnd":87,"annotations":["@Override"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"String","variable":"imageType","qualifedType":""}],"variables":[],"body":"{\n    HashMap\u003cString, String\u003e imageExtensions \u003d new HashMap\u003c\u003e();\n    imageExtensions.put(\"image/jpeg\", \".jpg\");\n    imageExtensions.put(\"image/png\", \".png\");\n    return imageExtensions.get(imageType);\n}","methodInvocations":[]},"getImageMaxSize":{"name":"getImageMaxSize","lineBegin":39,"lineEnd":42,"annotations":["@Override"],"returnDataType":["long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return IMAGE_MAX_SIZE / 1000000;\n}","methodInvocations":[]},"uploadImage":{"name":"uploadImage","lineBegin":19,"lineEnd":37,"annotations":["@Override"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"MultipartFile","variable":"imageFile","qualifedType":""},{"type":"String","variable":"username","qualifedType":""}],"variables":[{"type":"String","variable":"contentType","qualifedType":""},{"type":"String","variable":"rootDir","qualifedType":""},{"type":"String","variable":"savePath","qualifedType":""},{"type":"String","variable":"fileExtension","qualifedType":""},{"type":"String","variable":"fileName","qualifedType":""}],"body":"{\n    // Check if size too big \u0026 Check if image jpg or png\n    // Throws an error if not a valid image\n    verifyImage(imageFile);\n    // Sets save path and file extension\n    String contentType \u003d imageFile.getContentType();\n    // root directory of the project\n    String rootDir \u003d System.getProperty(\"user.dir\");\n    // save directory path for images\n    String savePath \u003d rootDir + \"/\" + dirSavePath;\n    String fileExtension \u003d getFileExtension(contentType);\n    String fileName \u003d username + fileExtension;\n    // Save image\n    imageFile.transferTo(new File(savePath + fileName));\n    return fileName;\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":["pt.iscte.hospital.services.ImageUploadService","ImageUploadService"],"extendedTypes":[],"imports":["org.springframework.stereotype.Service","org.springframework.web.multipart.MultipartFile","pt.iscte.hospital.exceptions.ImageSizeException","pt.iscte.hospital.exceptions.ImageTypeException","java.io.File","java.io.IOException","java.util.HashMap"]},"pt.iscte.hospital.repositories.waiting.DoctorWaitingPatientRepository":{"qualifiedName":"pt.iscte.hospital.repositories.waiting.DoctorWaitingPatientRepository","begin":1,"end":13,"isInterface":true,"annotations":["@Repository"],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.waiting.DoctorWaitingPatient"],"methods":{"findAllByDate":{"name":"findAllByDate","parametersDataType":["LocalDate"],"returnDataType":["DoctorWaitingPatient"]}},"myMethods":{"findAllByDate":{"name":"findAllByDate","lineBegin":12,"lineEnd":12,"annotations":[],"returnDataType":["List\u003cDoctorWaitingPatient\u003e"],"identifier":["List","DoctorWaitingPatient"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["JpaRepository\u003cDoctorWaitingPatient, Long\u003e"],"imports":["org.springframework.data.jpa.repository.JpaRepository","org.springframework.stereotype.Repository","pt.iscte.hospital.entities.waiting.DoctorWaitingPatient","java.time.LocalDate","java.util.List"]},"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentServiceImpl","begin":1,"end":58,"isInterface":false,"annotations":["@Service"],"variables":["PatientWaitingAppointmentRepository patientWaitingAppointmentRepository"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"public ","identifier":[],"type":"PatientWaitingAppointmentRepository","variable":"patientWaitingAppointmentRepository","lineBegin":13,"lineEnd":14}],"dependencies":["pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"],"methods":{"findAllByClosed":{"name":"findAllByClosed","parametersDataType":["boolean"],"returnDataType":["PatientWaitingAppointment"]},"findAllByClosedOrderByDate":{"name":"findAllByClosedOrderByDate","parametersDataType":["boolean"],"returnDataType":["PatientWaitingAppointment"]},"findAllByClosedAndRepliedToOffer":{"name":"findAllByClosedAndRepliedToOffer","parametersDataType":["boolean","boolean"],"returnDataType":["PatientWaitingAppointment"]},"findAllByPatientUserIdAndClosed":{"name":"findAllByPatientUserIdAndClosed","parametersDataType":["long","boolean"],"returnDataType":["PatientWaitingAppointment"]},"save":{"name":"save","parametersDataType":["PatientWaitingAppointment"],"returnDataType":["void"]},"saveWaitingListRequest":{"name":"saveWaitingListRequest","parametersDataType":["PatientWaitingAppointment"],"returnDataType":["void"]},"findByPatientWaitingAppointmentId":{"name":"findByPatientWaitingAppointmentId","parametersDataType":["Long"],"returnDataType":["PatientWaitingAppointment"]},"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["PatientWaitingAppointment"]}},"myMethods":{"findAllByClosed":{"name":"findAllByClosed","lineBegin":30,"lineEnd":33,"annotations":["@Override"],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[{"type":"boolean","variable":"closed","qualifedType":""}],"variables":[],"body":"{\n    return patientWaitingAppointmentRepository.findAllByClosed(closed);\n}","methodInvocations":[{"scopeName":"patientWaitingAppointmentRepository","methodName":"findAllByClosed","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"}]},"findAllByClosedOrderByDate":{"name":"findAllByClosedOrderByDate","lineBegin":47,"lineEnd":50,"annotations":["@Override"],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[{"type":"boolean","variable":"closed","qualifedType":""}],"variables":[],"body":"{\n    return patientWaitingAppointmentRepository.findAllByClosedOrderByDate(closed);\n}","methodInvocations":[{"scopeName":"patientWaitingAppointmentRepository","methodName":"findAllByClosedOrderByDate","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"}]},"findAllByClosedAndRepliedToOffer":{"name":"findAllByClosedAndRepliedToOffer","lineBegin":35,"lineEnd":40,"annotations":["@Override"],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[{"type":"boolean","variable":"closed","qualifedType":""},{"type":"boolean","variable":"repliedToOffer","qualifedType":""}],"variables":[],"body":"{\n    return patientWaitingAppointmentRepository.findAllByClosedAndRepliedToOffer(closed, repliedToOffer);\n}","methodInvocations":[{"scopeName":"patientWaitingAppointmentRepository","methodName":"findAllByClosedAndRepliedToOffer","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"}]},"findAllByPatientUserIdAndClosed":{"name":"findAllByPatientUserIdAndClosed","lineBegin":26,"lineEnd":29,"annotations":["@Override"],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[{"type":"long","variable":"userId","qualifedType":""},{"type":"boolean","variable":"closed","qualifedType":""}],"variables":[],"body":"{\n    return patientWaitingAppointmentRepository.findAllByPatientUserIdAndClosed(userId, closed);\n}","methodInvocations":[{"scopeName":"patientWaitingAppointmentRepository","methodName":"findAllByPatientUserIdAndClosed","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"}]},"save":{"name":"save","lineBegin":42,"lineEnd":45,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"PatientWaitingAppointment","variable":"patientWaitingAppointment","qualifedType":""}],"variables":[],"body":"{\n    patientWaitingAppointmentRepository.save(patientWaitingAppointment);\n}","methodInvocations":[{"scopeName":"patientWaitingAppointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"}]},"saveWaitingListRequest":{"name":"saveWaitingListRequest","lineBegin":16,"lineEnd":20,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"PatientWaitingAppointment","variable":"patientWaitingAppointment","qualifedType":""}],"variables":[],"body":"{\n    patientWaitingAppointmentRepository.save(patientWaitingAppointment);\n}","methodInvocations":[{"scopeName":"patientWaitingAppointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"}]},"findByPatientWaitingAppointmentId":{"name":"findByPatientWaitingAppointmentId","lineBegin":52,"lineEnd":55,"annotations":["@Override"],"returnDataType":["PatientWaitingAppointment"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"patientWaitingAppointmentId","qualifedType":""}],"variables":[],"body":"{\n    return patientWaitingAppointmentRepository.findByPatientWaitingAppointmentId(patientWaitingAppointmentId);\n}","methodInvocations":[{"scopeName":"patientWaitingAppointmentRepository","methodName":"findByPatientWaitingAppointmentId","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"}]},"findAll":{"name":"findAll","lineBegin":21,"lineEnd":24,"annotations":["@Override"],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[],"variables":[],"body":"{\n    return patientWaitingAppointmentRepository.findAll();\n}","methodInvocations":[{"scopeName":"patientWaitingAppointmentRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"}]}},"methodInvocations":[{"scopeName":"patientWaitingAppointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"},{"scopeName":"patientWaitingAppointmentRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"},{"scopeName":"patientWaitingAppointmentRepository","methodName":"findAllByPatientUserIdAndClosed","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"},{"scopeName":"patientWaitingAppointmentRepository","methodName":"findAllByClosed","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"},{"scopeName":"patientWaitingAppointmentRepository","methodName":"findAllByClosedAndRepliedToOffer","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"},{"scopeName":"patientWaitingAppointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"},{"scopeName":"patientWaitingAppointmentRepository","methodName":"findAllByClosedOrderByDate","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"},{"scopeName":"patientWaitingAppointmentRepository","methodName":"findByPatientWaitingAppointmentId","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"}],"implementedTypes":["pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService","PatientWaitingAppointmentService"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Service","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository","java.util.List"]},"pt.iscte.hospital.objects.utils.Calendar":{"qualifiedName":"pt.iscte.hospital.objects.utils.Calendar","begin":1,"end":39,"isInterface":false,"annotations":[],"variables":["DateTimeFormatter FORMATTER","DateTimeFormatter TIME_FORMATTER","DateTimeFormatter DATE_TIME_FORMATTER","LocalDate date","Integer[] calendar","int nrDays","int weekDay","int day","List\u003cDay\u003e calendarDays","String strDate","LocalDate ld","int i"],"instance_variables":[{"annotations":[],"modifier":"public ","identifier":[],"type":"DateTimeFormatter","variable":"FORMATTER","lineBegin":9,"lineEnd":9},{"annotations":[],"modifier":"public ","identifier":[],"type":"DateTimeFormatter","variable":"TIME_FORMATTER","lineBegin":10,"lineEnd":10},{"annotations":[],"modifier":"public ","identifier":[],"type":"DateTimeFormatter","variable":"DATE_TIME_FORMATTER","lineBegin":11,"lineEnd":11}],"dependencies":["pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.objects.utils.Day"],"methods":{"calendarList":{"name":"calendarList","parametersDataType":["int","int"],"returnDataType":["Day"]}},"myMethods":{"calendarList":{"name":"calendarList","lineBegin":13,"lineEnd":38,"annotations":[],"returnDataType":["List\u003cDay\u003e"],"identifier":["List","Day"],"parametersDataType":[{"type":"int","variable":"year","qualifedType":""},{"type":"int","variable":"month","qualifedType":""}],"variables":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"Integer[]","variable":"calendar","qualifedType":""},{"type":"int","variable":"nrDays","qualifedType":""},{"type":"int","variable":"weekDay","qualifedType":""},{"type":"int","variable":"day","qualifedType":""},{"type":"List\u003cDay\u003e","variable":"calendarDays","qualifedType":"pt.iscte.hospital.objects.utils.Day"},{"type":"String","variable":"strDate","qualifedType":""},{"type":"LocalDate","variable":"ld","qualifedType":""},{"type":"int","variable":"i","qualifedType":""}],"body":"{\n    LocalDate date \u003d LocalDate.of(year, month, 1);\n    Integer[] calendar \u003d new Integer[42];\n    int nrDays \u003d date.lengthOfMonth();\n    int weekDay \u003d date.getDayOfWeek().getValue();\n    for (int day \u003d 1; day \u003c\u003d nrDays; day++) {\n        calendar[day + weekDay - 2] \u003d day;\n    }\n    List\u003cDay\u003e calendarDays \u003d new ArrayList\u003c\u003e();\n    for (int i \u003d 0; i \u003c calendar.length; i++) {\n        String strDate \u003d \"\";\n        LocalDate ld \u003d null;\n        if (calendar[i] !\u003d null) {\n            ld \u003d LocalDate.of(year, month, calendar[i]);\n            strDate \u003d ld.format(FORMATTER);\n        }\n        calendarDays.add(new Day(i, calendar[i], strDate, ld));\n    }\n    return calendarDays;\n}","methodInvocations":[{"scopeName":"date","methodName":"lengthOfMonth","targetClassName":""},{"scopeName":"date","methodName":"getDayOfWeek","targetClassName":""},{"scopeName":"date.getDayOfWeek()","methodName":"getValue","targetClassName":""},{"scopeName":"ld","methodName":"format","targetClassName":""},{"scopeName":"calendarDays","methodName":"add","targetClassName":"pt.iscte.hospital.objects.utils.Day"}]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["java.time.LocalDate","java.time.format.DateTimeFormatter","java.util.ArrayList","java.util.List"]},"pt.iscte.hospital.controllers.MessageController":{"qualifiedName":"pt.iscte.hospital.controllers.MessageController","begin":1,"end":104,"isInterface":false,"annotations":["@Controller"],"variables":["Common common","MessageService messageService","List\u003cMessage\u003e messages","Long userId","List\u003cMessage\u003e messages","boolean hasRead","LocalDate date"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"Common","variable":"common","lineBegin":20,"lineEnd":20},{"annotations":[],"modifier":"private ","identifier":[],"type":"MessageService","variable":"messageService","lineBegin":21,"lineEnd":21}],"dependencies":["pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.services.MessageService","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message"],"methods":{"verFiltrarMensagens":{"name":"verFiltrarMensagens","parametersDataType":["ModelMap","String","String","String"],"returnDataType":["String"]},"deleteMensagem":{"name":"deleteMensagem","parametersDataType":["String","Long"],"returnDataType":["String"]},"markHasReadMensagens":{"name":"markHasReadMensagens","parametersDataType":["String","Long"],"returnDataType":["String"]},"verMensagens":{"name":"verMensagens","parametersDataType":["ModelMap","String"],"returnDataType":["String"]}},"myMethods":{"verFiltrarMensagens":{"name":"verFiltrarMensagens","lineBegin":41,"lineEnd":81,"annotations":["@PostMapping(value \u003d \"/{userType}/messages\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"String","variable":"userType","qualifedType":""},{"type":"String","variable":"dateScr","qualifedType":""},{"type":"String","variable":"msgStateSrc","qualifedType":""}],"variables":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"List\u003cMessage\u003e","variable":"messages","qualifedType":"pt.iscte.hospital.entities.Message"},{"type":"boolean","variable":"hasRead","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"body":"{\n    Long userId \u003d common.currentUser().getUserId();\n    // resultado da pesquisa\n    List\u003cMessage\u003e messages;\n    boolean hasRead \u003d false;\n    LocalDate date \u003d null;\n    if (dateScr !\u003d null \u0026\u0026 !dateScr.isEmpty()) {\n        date \u003d LocalDate.parse(dateScr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));\n    }\n    // pesquisa sem requisitos\n    if ((dateScr \u003d\u003d null || dateScr.isEmpty()) \u0026\u0026 (msgStateSrc \u003d\u003d null || msgStateSrc.equals(\"all\"))) {\n        messages \u003d messageService.findAllByUserUserIdOrderByDateDesc(userId);\n    // pesquisa por estado\n    } else if ((dateScr \u003d\u003d null || dateScr.isEmpty()) \u0026\u0026 msgStateSrc !\u003d null) {\n        if (msgStateSrc.equals(\"open\")) {\n            hasRead \u003d true;\n        }\n        messages \u003d messageService.findAllByUserUserIdAndReadMsgOrderByDateDesc(userId, hasRead);\n    } else // pesquisa por data e todos os estados\n    if ((msgStateSrc \u003d\u003d null || msgStateSrc.equals(\"all\"))) {\n        messages \u003d messageService.findAllByUserUserIdAndDateOrderByDateDesc(userId, date);\n    } else {\n        if (msgStateSrc.equals(\"open\")) {\n            hasRead \u003d true;\n        }\n        messages \u003d messageService.findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc(userId, date, hasRead);\n    }\n    modelMap.put(\"messages\", messages);\n    modelMap.put(\"userType\", userType);\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"user/message-list\";\n}","methodInvocations":[{"scopeName":"common","methodName":"currentUser","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common.currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"messageService","methodName":"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"messageService","methodName":"findAllByUserUserIdAndDateOrderByDateDesc","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"messageService","methodName":"findAllByUserUserIdAndReadMsgOrderByDateDesc","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"messageService","methodName":"findAllByUserUserIdOrderByDateDesc","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"deleteMensagem":{"name":"deleteMensagem","lineBegin":83,"lineEnd":90,"annotations":["@GetMapping(value \u003d \"/{userType}/messages/delete/{messageId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"String","variable":"userType","qualifedType":""},{"type":"Long","variable":"messageId","qualifedType":""}],"variables":[],"body":"{\n    messageService.deleteMessageById(messageId);\n    return \"redirect:/\" + userType + \"/messages\";\n}","methodInvocations":[{"scopeName":"messageService","methodName":"deleteMessageById","targetClassName":"pt.iscte.hospital.services.MessageService"}]},"markHasReadMensagens":{"name":"markHasReadMensagens","lineBegin":92,"lineEnd":99,"annotations":["@GetMapping(value \u003d \"/{userType}/messages/read/{messageId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"String","variable":"userType","qualifedType":""},{"type":"Long","variable":"messageId","qualifedType":""}],"variables":[],"body":"{\n    messageService.markMessageHasReadById(messageId);\n    return \"redirect:/\" + userType + \"/messages\";\n}","methodInvocations":[{"scopeName":"messageService","methodName":"markMessageHasReadById","targetClassName":"pt.iscte.hospital.services.MessageService"}]},"verMensagens":{"name":"verMensagens","lineBegin":29,"lineEnd":39,"annotations":["@GetMapping(value \u003d \"/{userType}/messages\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"String","variable":"userType","qualifedType":""}],"variables":[{"type":"List\u003cMessage\u003e","variable":"messages","qualifedType":"pt.iscte.hospital.entities.Message"}],"body":"{\n    List\u003cMessage\u003e messages \u003d messageService.findAllByUserUserIdOrderByDateDesc(common.currentUser().getUserId());\n    modelMap.put(\"messages\", messages);\n    modelMap.put(\"userType\", userType);\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"user/message-list\";\n}","methodInvocations":[{"scopeName":"common","methodName":"currentUser","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common.currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"messageService","methodName":"findAllByUserUserIdOrderByDateDesc","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]}},"methodInvocations":[{"scopeName":"common","methodName":"currentUser","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common.currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"messageService","methodName":"findAllByUserUserIdOrderByDateDesc","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"currentUser","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common.currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"messageService","methodName":"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"messageService","methodName":"findAllByUserUserIdAndDateOrderByDateDesc","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"messageService","methodName":"findAllByUserUserIdAndReadMsgOrderByDateDesc","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"messageService","methodName":"findAllByUserUserIdOrderByDateDesc","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"messageService","methodName":"deleteMessageById","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"messageService","methodName":"markMessageHasReadById","targetClassName":"pt.iscte.hospital.services.MessageService"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Controller","org.springframework.ui.ModelMap","org.springframework.web.bind.annotation.GetMapping","org.springframework.web.bind.annotation.PathVariable","org.springframework.web.bind.annotation.PostMapping","org.springframework.web.bind.annotation.RequestParam","pt.iscte.hospital.entities.Message","pt.iscte.hospital.services.MessageService","pt.iscte.hospital.controllers.utils.Common","java.time.LocalDate","java.time.format.DateTimeFormatter","java.util.List"]},"pt.iscte.hospital.services.user.ReceptionistService":{"qualifiedName":"pt.iscte.hospital.services.user.ReceptionistService","begin":1,"end":11,"isInterface":true,"annotations":["@Service"],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Receptionist"],"methods":{"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["Receptionist"]}},"myMethods":{"findAll":{"name":"findAll","lineBegin":10,"lineEnd":10,"annotations":[],"returnDataType":["List\u003cReceptionist\u003e"],"identifier":["List","Receptionist"],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.stereotype.Service","pt.iscte.hospital.entities.Receptionist","java.util.List"]},"pt.iscte.hospital.services.validation.UserValidationServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.validation.UserValidationServiceImpl","begin":1,"end":372,"isInterface":false,"annotations":["@Service"],"variables":["UserRepository userRepository","NationalityRepository nationalityRepository","ImageUploadService imageUploadService","SpecialityRepository specialityRepository","User user","boolean isValid","ModelMap errorModelMap","String[] names","int i","String phone","User userUnique","User userUnique","String cc","String bi","String passaporte","String patientNumber","String nif","String pattern","DateTimeFormatter df","LocalDate date","String[] palavras","int i","Nationality userNationality","User nifUnique","User patientNumberUnique","User documentNumberUnique","String licenseNumber","Speciality userSpeciality"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"UserRepository","variable":"userRepository","lineBegin":24,"lineEnd":25},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"NationalityRepository","variable":"nationalityRepository","lineBegin":26,"lineEnd":27},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"ImageUploadService","variable":"imageUploadService","lineBegin":28,"lineEnd":29},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"SpecialityRepository","variable":"specialityRepository","lineBegin":30,"lineEnd":31},{"annotations":[],"modifier":"private ","identifier":[],"type":"User","variable":"user","lineBegin":33,"lineEnd":33},{"annotations":[],"modifier":"private ","identifier":[],"type":"boolean","variable":"isValid","lineBegin":34,"lineEnd":34},{"annotations":[],"modifier":"private ","identifier":[],"type":"ModelMap","variable":"errorModelMap","lineBegin":35,"lineEnd":35}],"dependencies":["pt.iscte.hospital.repositories.user.UserRepository","pt.iscte.hospital.repositories.NationalityRepository","pt.iscte.hospital.services.ImageUploadService","pt.iscte.hospital.repositories.SpecialityRepository","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Nationality","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.entities.User","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService"],"methods":{"validSex":{"name":"validSex","parametersDataType":[],"returnDataType":["UserValidationService"]},"validAddress":{"name":"validAddress","parametersDataType":[],"returnDataType":["UserValidationService"]},"validPatientNumber":{"name":"validPatientNumber","parametersDataType":[],"returnDataType":["UserValidationService"]},"validAccount":{"name":"validAccount","parametersDataType":[],"returnDataType":["UserValidationService"]},"notValidImageSize":{"name":"notValidImageSize","parametersDataType":[],"returnDataType":["UserValidationService"]},"validCity":{"name":"validCity","parametersDataType":[],"returnDataType":["UserValidationService"]},"validSpeciality":{"name":"validSpeciality","parametersDataType":["String"],"returnDataType":["UserValidationService"]},"validDocumentType":{"name":"validDocumentType","parametersDataType":[],"returnDataType":["UserValidationService"]},"notValidImageType":{"name":"notValidImageType","parametersDataType":[],"returnDataType":["UserValidationService"]},"validPassword":{"name":"validPassword","parametersDataType":[],"returnDataType":["UserValidationService"]},"validEmail":{"name":"validEmail","parametersDataType":[],"returnDataType":["UserValidationService"]},"validLicenseNumber":{"name":"validLicenseNumber","parametersDataType":[],"returnDataType":["UserValidationService"]},"setUser":{"name":"setUser","parametersDataType":["User"],"returnDataType":["UserValidationService"]},"validPhone":{"name":"validPhone","parametersDataType":[],"returnDataType":["UserValidationService"]},"validEmail2":{"name":"validEmail2","parametersDataType":[],"returnDataType":["UserValidationService"]},"validNationality":{"name":"validNationality","parametersDataType":[],"returnDataType":["UserValidationService"]},"validNif":{"name":"validNif","parametersDataType":[],"returnDataType":["UserValidationService"]},"isValid":{"name":"isValid","parametersDataType":[],"returnDataType":["boolean"]},"clear":{"name":"clear","parametersDataType":[],"returnDataType":["UserValidationService"]},"validDocumentNumber":{"name":"validDocumentNumber","parametersDataType":[],"returnDataType":["UserValidationService"]},"validNifUnique":{"name":"validNifUnique","parametersDataType":[],"returnDataType":["UserValidationService"]},"notValidPhotoUpload":{"name":"notValidPhotoUpload","parametersDataType":[],"returnDataType":["UserValidationService"]},"getErrorModelMap":{"name":"getErrorModelMap","parametersDataType":[],"returnDataType":["ModelMap"]},"validPostCode":{"name":"validPostCode","parametersDataType":[],"returnDataType":["UserValidationService"]},"validPatientNumberUnique":{"name":"validPatientNumberUnique","parametersDataType":[],"returnDataType":["UserValidationService"]},"validName":{"name":"validName","parametersDataType":[],"returnDataType":["UserValidationService"]},"validDocumentNumberUnique":{"name":"validDocumentNumberUnique","parametersDataType":[],"returnDataType":["UserValidationService"]},"validBirthday":{"name":"validBirthday","parametersDataType":[],"returnDataType":["UserValidationService"]},"validUsername":{"name":"validUsername","parametersDataType":[],"returnDataType":["UserValidationService"]},"samePassword":{"name":"samePassword","parametersDataType":["String"],"returnDataType":["UserValidationService"]}},"myMethods":{"validSex":{"name":"validSex","lineBegin":104,"lineEnd":114,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    if (user.getSex().matches(\"Feminino\") || user.getSex().matches(\"Masculino\")) {\n    } else {\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgSex\", ErrorMessage.ERROR_MESSAGE_SEX.getErrorMsg());\n        return this;\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getSex","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getSex()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getSex","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getSex()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"}]},"validAddress":{"name":"validAddress","lineBegin":253,"lineEnd":264,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"String[]","variable":"palavras","qualifedType":""},{"type":"int","variable":"i","qualifedType":""}],"body":"{\n    String[] palavras \u003d user.getName().split(\" \");\n    for (int i \u003d 0; i \u003c palavras.length; i++) {\n        if (!palavras[i].matches(\"[A-Za-zÀ-ÿ\u0027/-]{1,}\")) {\n            isValid \u003d false;\n            errorModelMap.put(\"errorMsgAddress\", ErrorMessage.ERROR_MESSAGE_ADDRESS.getErrorMsg());\n            return this;\n        }\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getName()","methodName":"split","targetClassName":"pt.iscte.hospital.entities.User"}]},"validPatientNumber":{"name":"validPatientNumber","lineBegin":175,"lineEnd":187,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"String","variable":"patientNumber","qualifedType":""}],"body":"{\n    if (user.getPatientNumber() \u003d\u003d null) {\n        return this;\n    }\n    String patientNumber \u003d String.valueOf(user.getPatientNumber());\n    if (patientNumber.matches(\"[0-9]{9}\")) {\n        return this;\n    }\n    isValid \u003d false;\n    errorModelMap.put(\"errorMsgPatientNumber\", ErrorMessage.ERROR_MESSAGE_PATIENT_NUMBER.getErrorMsg());\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getPatientNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getPatientNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patientNumber","methodName":"matches","targetClassName":""}]},"validAccount":{"name":"validAccount","lineBegin":220,"lineEnd":229,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    if (user.getAccount().matches(\"Utente\") || user.getAccount().matches(\"Médico\") || user.getAccount().matches(\"Recepcionista\")) {\n        return this;\n    } else {\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgAccount\", ErrorMessage.ERROR_MESSAGE_ACCOUNT.getErrorMsg());\n        return this;\n    }\n}","methodInvocations":[{"scopeName":"user","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getAccount()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getAccount()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getAccount()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"}]},"notValidImageSize":{"name":"notValidImageSize","lineBegin":348,"lineEnd":353,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    errorModelMap.put(\"errorMsgPhotoUpload\", String.format(ErrorMessage.IMAGE_SIZE.getErrorMsg(), imageUploadService.getImageMaxSize()));\n    isValid \u003d false;\n    return this;\n}","methodInvocations":[{"scopeName":"imageUploadService","methodName":"getImageMaxSize","targetClassName":"pt.iscte.hospital.services.ImageUploadService"}]},"validCity":{"name":"validCity","lineBegin":210,"lineEnd":218,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    if (user.getCity().matches(\"^[A-Za-zÀ-ÿ\u0027][a-zA-ZÀ-ÿ\u0027\\\\s-]+[a-zA-ZÀ-ÿ\u0027]$\")) {\n        return this;\n    }\n    isValid \u003d false;\n    errorModelMap.put(\"errorMsgCity\", ErrorMessage.ERROR_MESSAGE_CITY.getErrorMsg());\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getCity","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getCity()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"}]},"validSpeciality":{"name":"validSpeciality","lineBegin":323,"lineEnd":332,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[{"type":"String","variable":"speciality","qualifedType":""}],"variables":[{"type":"Speciality","variable":"userSpeciality","qualifedType":""}],"body":"{\n    Speciality userSpeciality \u003d specialityRepository.findByName(speciality);\n    if (userSpeciality !\u003d null) {\n        return this;\n    }\n    isValid \u003d false;\n    errorModelMap.put(\"errorMsgSpeciality\", ErrorMessage.ERROR_MESSAGE_SPECIALITY.getErrorMsg());\n    return this;\n}","methodInvocations":[{"scopeName":"specialityRepository","methodName":"findByName","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"}]},"validDocumentType":{"name":"validDocumentType","lineBegin":137,"lineEnd":148,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    if (user.getDocumentType().matches(\"Bilhete de Identidade\") || user.getDocumentType().matches(\"Cartão de Cidadão\") || user.getDocumentType().matches(\"Passaporte\")) {\n        return this;\n    } else {\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgDocumentType\", ErrorMessage.ERROR_MESSAGE_DOCUMENT_TYPE.getErrorMsg());\n        return this;\n    }\n}","methodInvocations":[{"scopeName":"user","methodName":"getDocumentType","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getDocumentType()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentType","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getDocumentType()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentType","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getDocumentType()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"}]},"notValidImageType":{"name":"notValidImageType","lineBegin":341,"lineEnd":346,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    errorModelMap.put(\"errorMsgPhotoUpload\", ErrorMessage.IMAGE_TYPE.getErrorMsg());\n    isValid \u003d false;\n    return this;\n}","methodInvocations":[]},"validPassword":{"name":"validPassword","lineBegin":75,"lineEnd":82,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    if (!user.getPassword().matches(\".{1,15}\")) {\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgPassword\", ErrorMessage.ERROR_MESSAGE_PASSWORD.getErrorMsg());\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getPassword()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"}]},"validEmail":{"name":"validEmail","lineBegin":116,"lineEnd":124,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"User","variable":"userUnique","qualifedType":""}],"body":"{\n    User userUnique \u003d userRepository.findByEmail(user.getEmail());\n    if (userUnique !\u003d null) {\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgEmail\", ErrorMessage.ERROR_MESSAGE_EMAIL.getErrorMsg());\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getEmail","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userRepository","methodName":"findByEmail","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"}]},"validLicenseNumber":{"name":"validLicenseNumber","lineBegin":313,"lineEnd":322,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"String","variable":"licenseNumber","qualifedType":""}],"body":"{\n    String licenseNumber \u003d String.valueOf(((Doctor) user).getLicenseNumber());\n    if (licenseNumber.matches(\"[0-9]{16}\") || licenseNumber.matches(\"\")) {\n        return this;\n    }\n    isValid \u003d false;\n    errorModelMap.put(\"errorMsgLicenseNumber\", ErrorMessage.ERROR_MESSAGE_LICENSE_NUMBER.getErrorMsg());\n    return this;\n}","methodInvocations":[{"scopeName":"((Doctor) user)","methodName":"getLicenseNumber","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"licenseNumber","methodName":"matches","targetClassName":""},{"scopeName":"licenseNumber","methodName":"matches","targetClassName":""}]},"setUser":{"name":"setUser","lineBegin":46,"lineEnd":50,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[{"type":"User","variable":"user","qualifedType":""}],"variables":[],"body":"{\n    this.user \u003d user;\n    return this;\n}","methodInvocations":[]},"validPhone":{"name":"validPhone","lineBegin":65,"lineEnd":73,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"String","variable":"phone","qualifedType":""}],"body":"{\n    String phone \u003d String.valueOf(user.getPhone());\n    if (!phone.matches(\"^9[1236][0-9]{7}$|^2[3-9][1-9][0-9]{6}$|^2[12][0-9]{7}$\")) {\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgPhone\", ErrorMessage.ERROR_MESSAGE_PHONE.getErrorMsg());\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getPhone","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"phone","methodName":"matches","targetClassName":""}]},"validEmail2":{"name":"validEmail2","lineBegin":200,"lineEnd":208,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    if (user.getEmail().matches(\"^[a-zA-Z0-9_+\u0026*-]+(?:\\\\.[a-zA-Z0-9_+\u0026*-]+)*@(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,3}$\")) {\n        return this;\n    }\n    isValid \u003d false;\n    errorModelMap.put(\"errorMsgEmail\", ErrorMessage.ERROR_MESSAGE_EMAIL2.getErrorMsg());\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getEmail","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getEmail()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"}]},"validNationality":{"name":"validNationality","lineBegin":266,"lineEnd":275,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"Nationality","variable":"userNationality","qualifedType":""}],"body":"{\n    Nationality userNationality \u003d nationalityRepository.findByName(user.getNationality());\n    if (userNationality !\u003d null) {\n        return this;\n    }\n    isValid \u003d false;\n    errorModelMap.put(\"errorMsgNationality\", ErrorMessage.ERROR_MESSAGE_NATIONALITY.getErrorMsg());\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getNationality","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"nationalityRepository","methodName":"findByName","targetClassName":"pt.iscte.hospital.repositories.NationalityRepository"}]},"validNif":{"name":"validNif","lineBegin":189,"lineEnd":198,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"String","variable":"nif","qualifedType":""}],"body":"{\n    String nif \u003d String.valueOf(user.getNif());\n    if (nif.matches(\"[0-9]{9}\")) {\n        return this;\n    }\n    isValid \u003d false;\n    errorModelMap.put(\"errorMsgNif\", ErrorMessage.ERROR_MESSAGE_NIF.getErrorMsg());\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getNif","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"nif","methodName":"matches","targetClassName":""}]},"isValid":{"name":"isValid","lineBegin":355,"lineEnd":358,"annotations":["@Override"],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return isValid;\n}","methodInvocations":[]},"clear":{"name":"clear","lineBegin":365,"lineEnd":371,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    user \u003d null;\n    isValid \u003d true;\n    errorModelMap \u003d new ModelMap();\n    return this;\n}","methodInvocations":[]},"validDocumentNumber":{"name":"validDocumentNumber","lineBegin":150,"lineEnd":173,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"String","variable":"cc","qualifedType":""},{"type":"String","variable":"bi","qualifedType":""},{"type":"String","variable":"passaporte","qualifedType":""}],"body":"{\n    if (user.getDocumentType().equals(\"Cartão de Cidadão\")) {\n        String cc \u003d String.valueOf(user.getDocumentNumber());\n        if (cc.matches(\"[0-9]{8}\")) {\n            return this;\n        }\n    }\n    if (user.getDocumentType().equals(\"Bilhete de Identidade\")) {\n        String bi \u003d String.valueOf(user.getDocumentNumber());\n        if (bi.matches(\"[0-9]{8}\")) {\n            return this;\n        }\n    }\n    if (user.getDocumentType().equals(\"Passaporte\")) {\n        String passaporte \u003d String.valueOf(user.getDocumentNumber());\n        if (passaporte.matches(\"[0-9]{8}\")) {\n            return this;\n        }\n    }\n    isValid \u003d false;\n    errorModelMap.put(\"errorMsgDocumentNumber\", ErrorMessage.ERROR_MESSAGE_DOCUMENT_NUMBER.getErrorMsg());\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getDocumentType","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getDocumentType()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"cc","methodName":"matches","targetClassName":""},{"scopeName":"user","methodName":"getDocumentType","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getDocumentType()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"bi","methodName":"matches","targetClassName":""},{"scopeName":"user","methodName":"getDocumentType","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getDocumentType()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"passaporte","methodName":"matches","targetClassName":""}]},"validNifUnique":{"name":"validNifUnique","lineBegin":277,"lineEnd":286,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"User","variable":"nifUnique","qualifedType":""}],"body":"{\n    User nifUnique \u003d userRepository.findByNifAndAccount(user.getNif(), user.getAccount());\n    if (nifUnique !\u003d null) {\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgNif\", ErrorMessage.ERROR_MESSAGE_NIF2.getErrorMsg());\n        return this;\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getNif","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userRepository","methodName":"findByNifAndAccount","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"}]},"notValidPhotoUpload":{"name":"notValidPhotoUpload","lineBegin":334,"lineEnd":339,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    errorModelMap.put(\"errorMsgPhotoUpload\", ErrorMessage.PHOTO_UPLOAD.getErrorMsg());\n    isValid \u003d false;\n    return this;\n}","methodInvocations":[]},"getErrorModelMap":{"name":"getErrorModelMap","lineBegin":360,"lineEnd":363,"annotations":["@Override"],"returnDataType":["ModelMap"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return errorModelMap;\n}","methodInvocations":[]},"validPostCode":{"name":"validPostCode","lineBegin":93,"lineEnd":102,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    if (user.getPostCode().matches(\"[0-9]{4}[-][0-9]{3}\") || user.getPostCode().matches(\"\")) {\n    } else {\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgPostCode\", ErrorMessage.ERROR_MESSAGE_POST_CODE.getErrorMsg());\n        return this;\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getPostCode","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getPostCode()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getPostCode","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getPostCode()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"}]},"validPatientNumberUnique":{"name":"validPatientNumberUnique","lineBegin":288,"lineEnd":300,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"User","variable":"patientNumberUnique","qualifedType":""}],"body":"{\n    if (user.getPatientNumber() \u003d\u003d null) {\n        return this;\n    }\n    User patientNumberUnique \u003d userRepository.findByPatientNumberAndAccount(user.getPatientNumber(), user.getAccount());\n    if (patientNumberUnique !\u003d null) {\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgPatientNumber\", ErrorMessage.ERROR_MESSAGE_PATIENT_NUMBER2.getErrorMsg());\n        return this;\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getPatientNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getPatientNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userRepository","methodName":"findByPatientNumberAndAccount","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"}]},"validName":{"name":"validName","lineBegin":52,"lineEnd":63,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"String[]","variable":"names","qualifedType":""},{"type":"int","variable":"i","qualifedType":""}],"body":"{\n    String[] names \u003d user.getName().split(\" \");\n    for (int i \u003d 0; i \u003c names.length; i++) {\n        if (!names[i].matches(\"[A-Za-zÀ-ÿ\u0027]{2,}||[e]{1}\")) {\n            isValid \u003d false;\n            errorModelMap.put(\"errorMsgName\", ErrorMessage.ERROR_MESSAGE_NAME.getErrorMsg());\n            return this;\n        }\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getName()","methodName":"split","targetClassName":"pt.iscte.hospital.entities.User"}]},"validDocumentNumberUnique":{"name":"validDocumentNumberUnique","lineBegin":302,"lineEnd":311,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"User","variable":"documentNumberUnique","qualifedType":""}],"body":"{\n    User documentNumberUnique \u003d userRepository.findByDocumentNumberAndAccount(user.getDocumentNumber(), user.getAccount());\n    if (documentNumberUnique !\u003d null) {\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgDocumentNumber\", ErrorMessage.ERROR_MESSAGE_DOCUMENT_NUMBER2.getErrorMsg());\n        return this;\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getDocumentNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userRepository","methodName":"findByDocumentNumberAndAccount","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"}]},"validBirthday":{"name":"validBirthday","lineBegin":231,"lineEnd":251,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"String","variable":"pattern","qualifedType":""},{"type":"DateTimeFormatter","variable":"df","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"body":"{\n    String pattern \u003d \"uuuu-MM-dd\";\n    DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(pattern).withResolverStyle(ResolverStyle.STRICT);\n    try {\n        LocalDate date \u003d LocalDate.parse(user.getBirthdayStr(), df);\n        if (date.isAfter(LocalDate.now()) || date.isBefore(LocalDate.of(1900, 1, 1))) {\n            isValid \u003d false;\n            errorModelMap.put(\"errorMsgBirthday\", ErrorMessage.ERROR_MESSAGE_BIRTHDAY.getErrorMsg());\n            return this;\n        }\n        return this;\n    } catch (DateTimeParseException e) {\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgBirthday\", ErrorMessage.ERROR_MESSAGE_BIRTHDAY.getErrorMsg());\n        return this;\n    }\n}","methodInvocations":[{"scopeName":"user","methodName":"getBirthdayStr","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"date","methodName":"isAfter","targetClassName":""},{"scopeName":"date","methodName":"isBefore","targetClassName":""}]},"validUsername":{"name":"validUsername","lineBegin":126,"lineEnd":135,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"User","variable":"userUnique","qualifedType":""}],"body":"{\n    User userUnique \u003d userRepository.findByUsername(user.getUsername());\n    if (userUnique !\u003d null) {\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgUsername\", ErrorMessage.ERROR_MESSAGE_USERNAME.getErrorMsg());\n        return this;\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"}]},"samePassword":{"name":"samePassword","lineBegin":84,"lineEnd":91,"annotations":["@Override"],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[{"type":"String","variable":"passwordRetyped","qualifedType":""}],"variables":[],"body":"{\n    if (!user.getPassword().equals(passwordRetyped)) {\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgPassword2\", ErrorMessage.ERROR_MESSAGE_PASSWORD2.getErrorMsg());\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"user","methodName":"getPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getPassword()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"}]}},"methodInvocations":[{"scopeName":"user","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getName()","methodName":"split","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getPhone","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getPassword()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getPassword()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getPostCode","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getPostCode()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getPostCode","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getPostCode()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getSex","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getSex()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getSex","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getSex()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getEmail","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userRepository","methodName":"findByEmail","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"user","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"user","methodName":"getDocumentType","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getDocumentType()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentType","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getDocumentType()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentType","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getDocumentType()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentType","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getDocumentType()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentType","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getDocumentType()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentType","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getDocumentType()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getDocumentNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getPatientNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getPatientNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getNif","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getEmail","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getEmail()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getCity","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getCity()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getAccount()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getAccount()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getAccount()","methodName":"matches","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getBirthdayStr","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getName()","methodName":"split","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getNationality","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"nationalityRepository","methodName":"findByName","targetClassName":"pt.iscte.hospital.repositories.NationalityRepository"},{"scopeName":"user","methodName":"getNif","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userRepository","methodName":"findByNifAndAccount","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"user","methodName":"getPatientNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getPatientNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userRepository","methodName":"findByPatientNumberAndAccount","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"user","methodName":"getDocumentNumber","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userRepository","methodName":"findByDocumentNumberAndAccount","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"((Doctor) user)","methodName":"getLicenseNumber","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"specialityRepository","methodName":"findByName","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"},{"scopeName":"imageUploadService","methodName":"getImageMaxSize","targetClassName":"pt.iscte.hospital.services.ImageUploadService"}],"implementedTypes":["UserValidationService","pt.iscte.hospital.services.validation.UserValidationService"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Service","org.springframework.ui.ModelMap","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Nationality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.User","pt.iscte.hospital.repositories.NationalityRepository","pt.iscte.hospital.repositories.user.UserRepository","pt.iscte.hospital.repositories.SpecialityRepository","pt.iscte.hospital.services.ErrorMessage","pt.iscte.hospital.services.ImageUploadService","java.time.LocalDate","java.time.format.DateTimeFormatter","java.time.format.DateTimeParseException","java.time.format.ResolverStyle"]},"pt.iscte.hospital.controllers.patient_receptionist.InvoiceController":{"qualifiedName":"pt.iscte.hospital.controllers.patient_receptionist.InvoiceController","begin":1,"end":61,"isInterface":false,"annotations":["@Controller"],"variables":["UserService userService","InvoiceService invoiceService","Common common","Invoice invoice","Appointment appointment","Invoice invoice","Appointment appointment"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"UserService","variable":"userService","lineBegin":20,"lineEnd":21},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"InvoiceService","variable":"invoiceService","lineBegin":22,"lineEnd":23},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"Common","variable":"common","lineBegin":24,"lineEnd":25}],"dependencies":["pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.invoice.InvoiceService","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.Invoice","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Invoice","pt.iscte.hospital.entities.Appointment"],"methods":{"pageShowInvoice":{"name":"pageShowInvoice","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"pageShowPayInvoice":{"name":"pageShowPayInvoice","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]}},"myMethods":{"pageShowInvoice":{"name":"pageShowInvoice","lineBegin":27,"lineEnd":37,"annotations":["@GetMapping(value \u003d \"/patient-receptionist/invoice/{invoiceNr}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"invoiceNr","qualifedType":""}],"variables":[{"type":"Invoice","variable":"invoice","qualifedType":""},{"type":"Appointment","variable":"appointment","qualifedType":""}],"body":"{\n    Invoice invoice \u003d invoiceService.findByInvoiceId(invoiceNr);\n    Appointment appointment \u003d invoice.getAppointment();\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"invoice\", invoice);\n    modelMap.put(\"appointment\", appointment);\n    return \"patient-receptionist/invoice\";\n}","methodInvocations":[{"scopeName":"invoiceService","methodName":"findByInvoiceId","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceService"},{"scopeName":"invoice","methodName":"getAppointment","targetClassName":"pt.iscte.hospital.entities.Invoice"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"pageShowPayInvoice":{"name":"pageShowPayInvoice","lineBegin":39,"lineEnd":60,"annotations":["@GetMapping(value \u003d \"/patient-receptionist/invoice/pay/{invoiceNr}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"invoiceNr","qualifedType":""}],"variables":[{"type":"Invoice","variable":"invoice","qualifedType":""},{"type":"Appointment","variable":"appointment","qualifedType":""}],"body":"{\n    Invoice invoice \u003d invoiceService.findByInvoiceId(invoiceNr);\n    Appointment appointment \u003d invoice.getAppointment();\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"hasButton2\", true);\n    modelMap.put(\"button2_text\", \"Regressar à factura\");\n    modelMap.put(\"button2_url\", \"/patient-receptionist/invoice/\" + invoiceNr);\n    try {\n        invoiceService.payInvoice(appointment);\n    } catch (PaymentException e) {\n        modelMap.put(\"message\", \"Não foi possível registar o pagamento na factura.\");\n        modelMap.put(\"imageURL\", AlertMessageImage.FAILURE.getImageURL());\n        return \"components/alert-message\";\n    }\n    modelMap.put(\"message\", \"Pagamento registado.\");\n    modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n    return \"components/alert-message\";\n}","methodInvocations":[{"scopeName":"invoiceService","methodName":"findByInvoiceId","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceService"},{"scopeName":"invoice","methodName":"getAppointment","targetClassName":"pt.iscte.hospital.entities.Invoice"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"invoiceService","methodName":"payInvoice","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceService"}]}},"methodInvocations":[{"scopeName":"invoiceService","methodName":"findByInvoiceId","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceService"},{"scopeName":"invoice","methodName":"getAppointment","targetClassName":"pt.iscte.hospital.entities.Invoice"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"invoiceService","methodName":"findByInvoiceId","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceService"},{"scopeName":"invoice","methodName":"getAppointment","targetClassName":"pt.iscte.hospital.entities.Invoice"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"invoiceService","methodName":"payInvoice","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceService"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Controller","org.springframework.ui.ModelMap","org.springframework.web.bind.annotation.GetMapping","org.springframework.web.bind.annotation.PathVariable","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Invoice","pt.iscte.hospital.exceptions.PaymentException","pt.iscte.hospital.objects.utils.AlertMessageImage","pt.iscte.hospital.services.invoice.InvoiceService","pt.iscte.hospital.services.user.UserService"]},"pt.iscte.hospital.configuration.AppInitializer":{"qualifiedName":"pt.iscte.hospital.configuration.AppInitializer","begin":1,"end":24,"isInterface":false,"annotations":[],"variables":["AnnotationConfigWebApplicationContext root"],"instance_variables":[],"dependencies":[],"methods":{"onStartup":{"name":"onStartup","parametersDataType":["ServletContext"],"returnDataType":["void"]}},"myMethods":{"onStartup":{"name":"onStartup","lineBegin":13,"lineEnd":23,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"ServletContext","variable":"sc","qualifedType":""}],"variables":[{"type":"AnnotationConfigWebApplicationContext","variable":"root","qualifedType":""}],"body":"{\n    AnnotationConfigWebApplicationContext root \u003d new AnnotationConfigWebApplicationContext();\n    root.register(WebSecurityConfig.class);\n    sc.addListener(new ContextLoaderListener(root));\n    sc.addFilter(\"securityFilter\", new DelegatingFilterProxy(\"springSecurityFilterChain\")).addMappingForUrlPatterns(null, false, \"/*\");\n}","methodInvocations":[{"scopeName":"root","methodName":"register","targetClassName":""}]}},"methodInvocations":[],"implementedTypes":["WebApplicationInitializer"],"extendedTypes":[],"imports":["org.springframework.web.WebApplicationInitializer","org.springframework.web.context.ContextLoaderListener","org.springframework.web.context.support.AnnotationConfigWebApplicationContext","org.springframework.web.filter.DelegatingFilterProxy","pt.iscte.hospital.security.WebSecurityConfig","javax.servlet.ServletContext"]},"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment":{"qualifiedName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","begin":1,"end":112,"isInterface":false,"annotations":["@Entity","@Getter","@Setter"],"variables":["Long patientWaitingAppointmentId","Doctor doctor","Patient patient","LocalDateTime date","LocalDateTime limitDateToReply","Slot slot","boolean closed","boolean slotAccepted","boolean repliedToOffer","Long position"],"instance_variables":[{"annotations":["@Id","@GeneratedValue(strategy \u003d GenerationType.IDENTITY)"],"modifier":"private ","identifier":[],"type":"Long","variable":"patientWaitingAppointmentId","lineBegin":18,"lineEnd":20},{"annotations":["@ManyToOne","@JoinColumn(name \u003d \"doctor_id\")"],"modifier":"private ","identifier":[],"type":"Doctor","variable":"doctor","lineBegin":22,"lineEnd":24},{"annotations":["@ManyToOne","@JoinColumn(name \u003d \"patient_id\")"],"modifier":"private ","identifier":[],"type":"Patient","variable":"patient","lineBegin":26,"lineEnd":28},{"annotations":["@DateTimeFormat(iso \u003d DateTimeFormat.ISO.DATE)"],"modifier":"private ","identifier":[],"type":"LocalDateTime","variable":"date","lineBegin":30,"lineEnd":31},{"annotations":["@DateTimeFormat(iso \u003d DateTimeFormat.ISO.DATE)"],"modifier":"private ","identifier":[],"type":"LocalDateTime","variable":"limitDateToReply","lineBegin":33,"lineEnd":34},{"annotations":["@ManyToOne","@JoinColumn(name \u003d \"slot_id\")"],"modifier":"private ","identifier":[],"type":"Slot","variable":"slot","lineBegin":36,"lineEnd":38},{"annotations":[],"modifier":"private ","identifier":[],"type":"boolean","variable":"closed","lineBegin":40,"lineEnd":40},{"annotations":[],"modifier":"private ","identifier":[],"type":"boolean","variable":"slotAccepted","lineBegin":42,"lineEnd":42},{"annotations":[],"modifier":"private ","identifier":[],"type":"boolean","variable":"repliedToOffer","lineBegin":44,"lineEnd":44},{"annotations":[],"modifier":"private ","identifier":[],"type":"Long","variable":"position","lineBegin":46,"lineEnd":46}],"dependencies":["pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor"],"methods":{"getDateTimeStr":{"name":"getDateTimeStr","parametersDataType":[],"returnDataType":["String"]},"setPatientWaitingAppointmentId":{"name":"setPatientWaitingAppointmentId","parametersDataType":["Long"],"returnDataType":["void"]},"compareTo":{"name":"compareTo","parametersDataType":["PatientWaitingAppointment"],"returnDataType":["int"]},"setClosed":{"name":"setClosed","parametersDataType":["boolean"],"returnDataType":["void"]},"getPatient":{"name":"getPatient","parametersDataType":[],"returnDataType":["Patient"]},"setPosition":{"name":"setPosition","parametersDataType":["Long"],"returnDataType":["void"]},"setPatient":{"name":"setPatient","parametersDataType":["Patient"],"returnDataType":["void"]},"getDoctor":{"name":"getDoctor","parametersDataType":[],"returnDataType":["Doctor"]},"getPosition":{"name":"getPosition","parametersDataType":[],"returnDataType":["Long"]},"isClosed":{"name":"isClosed","parametersDataType":[],"returnDataType":["boolean"]},"setDate":{"name":"setDate","parametersDataType":["LocalDateTime"],"returnDataType":["void"]},"setDoctor":{"name":"setDoctor","parametersDataType":["Doctor"],"returnDataType":["void"]},"getDate":{"name":"getDate","parametersDataType":[],"returnDataType":["LocalDateTime"]},"getPatientWaitingAppointmentId":{"name":"getPatientWaitingAppointmentId","parametersDataType":[],"returnDataType":["Long"]}},"myMethods":{"getDateTimeStr":{"name":"getDateTimeStr","lineBegin":104,"lineEnd":106,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return date.format(Calendar.DATE_TIME_FORMATTER);\n}","methodInvocations":[]},"setPatientWaitingAppointmentId":{"name":"setPatientWaitingAppointmentId","lineBegin":61,"lineEnd":63,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"patientWaitingAppointmentId","qualifedType":""}],"variables":[],"body":"{\n    this.patientWaitingAppointmentId \u003d patientWaitingAppointmentId;\n}","methodInvocations":[]},"compareTo":{"name":"compareTo","lineBegin":108,"lineEnd":111,"annotations":["@Override"],"returnDataType":["int"],"identifier":[],"parametersDataType":[{"type":"PatientWaitingAppointment","variable":"o","qualifedType":""}],"variables":[],"body":"{\n    return date.compareTo(o.date);\n}","methodInvocations":[]},"setClosed":{"name":"setClosed","lineBegin":93,"lineEnd":95,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"boolean","variable":"closed","qualifedType":""}],"variables":[],"body":"{\n    this.closed \u003d closed;\n}","methodInvocations":[]},"getPatient":{"name":"getPatient","lineBegin":73,"lineEnd":75,"annotations":[],"returnDataType":["Patient"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return patient;\n}","methodInvocations":[]},"setPosition":{"name":"setPosition","lineBegin":100,"lineEnd":102,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"position","qualifedType":""}],"variables":[],"body":"{\n    this.position \u003d position;\n}","methodInvocations":[]},"setPatient":{"name":"setPatient","lineBegin":77,"lineEnd":79,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Patient","variable":"patient","qualifedType":""}],"variables":[],"body":"{\n    this.patient \u003d patient;\n}","methodInvocations":[]},"getDoctor":{"name":"getDoctor","lineBegin":65,"lineEnd":67,"annotations":[],"returnDataType":["Doctor"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return doctor;\n}","methodInvocations":[]},"getPosition":{"name":"getPosition","lineBegin":97,"lineEnd":99,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return position;\n}","methodInvocations":[]},"isClosed":{"name":"isClosed","lineBegin":89,"lineEnd":91,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return closed;\n}","methodInvocations":[]},"setDate":{"name":"setDate","lineBegin":85,"lineEnd":87,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"LocalDateTime","variable":"date","qualifedType":""}],"variables":[],"body":"{\n    this.date \u003d date;\n}","methodInvocations":[]},"setDoctor":{"name":"setDoctor","lineBegin":69,"lineEnd":71,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""}],"variables":[],"body":"{\n    this.doctor \u003d doctor;\n}","methodInvocations":[]},"getDate":{"name":"getDate","lineBegin":81,"lineEnd":83,"annotations":[],"returnDataType":["LocalDateTime"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return date;\n}","methodInvocations":[]},"getPatientWaitingAppointmentId":{"name":"getPatientWaitingAppointmentId","lineBegin":57,"lineEnd":59,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return patientWaitingAppointmentId;\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":["Comparable\u003cPatientWaitingAppointment\u003e"],"extendedTypes":[],"imports":["lombok.Getter","lombok.Setter","org.springframework.format.annotation.DateTimeFormat","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.objects.utils.Calendar","javax.persistence","java.time.LocalDateTime"]},"pt.iscte.hospital.threads.UpdateInvoice":{"qualifiedName":"pt.iscte.hospital.threads.UpdateInvoice","begin":1,"end":37,"isInterface":false,"annotations":["@Component"],"variables":["AppointmentService appointmentService","InvoiceService invoiceService","List\u003cAppointment\u003e appointments","Appointment appointment"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"AppointmentService","variable":"appointmentService","lineBegin":16,"lineEnd":16},{"annotations":[],"modifier":"private ","identifier":[],"type":"InvoiceService","variable":"invoiceService","lineBegin":17,"lineEnd":17}],"dependencies":["pt.iscte.hospital.services.AppointmentService","pt.iscte.hospital.services.invoice.InvoiceService","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment"],"methods":{"solicitarFacturas":{"name":"solicitarFacturas","parametersDataType":[],"returnDataType":["void"]}},"myMethods":{"solicitarFacturas":{"name":"solicitarFacturas","lineBegin":26,"lineEnd":36,"annotations":["@Scheduled(fixedRate \u003d 60000)"],"returnDataType":["void"],"identifier":[],"parametersDataType":[],"variables":[{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"Appointment","variable":"appointment","qualifedType":""}],"body":"{\n    List\u003cAppointment\u003e appointments \u003d appointmentService.findAllByAppointmentStatusAndInvoice(AppointmentState.REALIZADA.getStateNr(), null);\n    System.out.println(\"Verificação de existência de facturas\");\n    for (Appointment appointment : appointments) {\n        invoiceService.createInvoice(appointment);\n        System.out.println(\"Tentativa de obter factura para: \" + appointment.getPatient().getName() + \" - \" + appointment.getDoctor().getSpeciality().getName());\n    }\n}","methodInvocations":[{"scopeName":"appointmentService","methodName":"findAllByAppointmentStatusAndInvoice","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"invoiceService","methodName":"createInvoice","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceService"},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getPatient()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointment","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getDoctor()","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment.getDoctor().getSpeciality()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Doctor"}]}},"methodInvocations":[{"scopeName":"appointmentService","methodName":"findAllByAppointmentStatusAndInvoice","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"invoiceService","methodName":"createInvoice","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceService"},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getPatient()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointment","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getDoctor()","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment.getDoctor().getSpeciality()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Doctor"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.scheduling.annotation.Scheduled","org.springframework.stereotype.Component","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.states.AppointmentState","pt.iscte.hospital.services.AppointmentService","pt.iscte.hospital.services.invoice.InvoiceService","java.util.List"]},"pt.iscte.hospital.security.WebSecurityConfig":{"qualifiedName":"pt.iscte.hospital.security.WebSecurityConfig","begin":1,"end":68,"isInterface":false,"annotations":["@Configuration","@EnableWebSecurity"],"variables":["CustomAuthenticationProvider authProvider"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"CustomAuthenticationProvider","variable":"authProvider","lineBegin":16,"lineEnd":17}],"dependencies":["pt.iscte.hospital.security.CustomAuthenticationProvider"],"methods":{"passwordEncoder":{"name":"passwordEncoder","parametersDataType":[],"returnDataType":["PasswordEncoder"]},"configure":{"name":"configure","parametersDataType":["HttpSecurity"],"returnDataType":["void"]}},"myMethods":{"passwordEncoder":{"name":"passwordEncoder","lineBegin":64,"lineEnd":67,"annotations":["@Bean"],"returnDataType":["PasswordEncoder"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return new BCryptPasswordEncoder();\n}","methodInvocations":[]},"configure":{"name":"configure","lineBegin":26,"lineEnd":61,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"HttpSecurity","variable":"http","qualifedType":""}],"variables":[],"body":"{\n    // http builder configurations for authorize requests and form login (see below)\n    http.csrf().disable().authorizeRequests().antMatchers(\"/\").permitAll().antMatchers(\"/test/**\").permitAll().antMatchers(\"/patient/**\").hasRole(\"PATIENT\").antMatchers(\"/employee/**\").hasRole(\"EMPLOYEE\").antMatchers(\"/receptionist/**\").hasRole(\"RECEPTIONIST\").antMatchers(\"/doctor/**\").hasRole(\"DOCTOR\").antMatchers(\"/unitresponsible/**\").hasRole(\"UNIT_RESPONSIBLE\").antMatchers(\"/doctor-receptionist/**\").hasAnyRole(\"DOCTOR\", \"RECEPTIONIST\").antMatchers(\"/patient-receptionist/**\").hasAnyRole(\"PATIENT\", \"RECEPTIONIST\").antMatchers(\"/user/**\", \"/main\", \"/userToMain\").hasAnyRole(\"PATIENT\", \"EMPLOYEE\", \"RECEPTIONIST\", \"DOCTOR\", \"UNIT_RESPONSIBLE\").antMatchers(\"/public/**\").permitAll().antMatchers(\"/*.css\", \"/fonts/**\", \"/imagens/**\", \"*.html\", \"*.ico\").permitAll().antMatchers(\"/uploaded_images/**\").hasAnyRole(\"PATIENT\", \"EMPLOYEE\", \"RECEPTIONIST\", \"DOCTOR\", \"UNIT_RESPONSIBLE\").anyRequest().authenticated().and().formLogin().loginPage(\"/public/login\").defaultSuccessUrl(\"/\", true).failureUrl(\"/public/login?error\u003dtrue\").and().logout().logoutUrl(// Este método faz logout do user\n    \"/logout\").logoutSuccessUrl(\"/public/main\").deleteCookies(\"JSESSIONID\");\n// ...\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["WebSecurityConfigurerAdapter"],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.context.annotation.Bean","org.springframework.context.annotation.Configuration","org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder","org.springframework.security.config.annotation.web.builders.HttpSecurity","org.springframework.security.config.annotation.web.configuration.EnableWebSecurity","org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter","org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder","org.springframework.security.crypto.password.PasswordEncoder"]},"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository":{"qualifiedName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository","begin":1,"end":24,"isInterface":true,"annotations":["@Repository"],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"],"methods":{"findAllByClosed":{"name":"findAllByClosed","parametersDataType":["boolean"],"returnDataType":["PatientWaitingAppointment"]},"findAllByClosedOrderByDate":{"name":"findAllByClosedOrderByDate","parametersDataType":["boolean"],"returnDataType":["PatientWaitingAppointment"]},"findAllByClosedAndRepliedToOffer":{"name":"findAllByClosedAndRepliedToOffer","parametersDataType":["boolean","boolean"],"returnDataType":["PatientWaitingAppointment"]},"findAllByPatientUserIdAndClosed":{"name":"findAllByPatientUserIdAndClosed","parametersDataType":["long","boolean"],"returnDataType":["PatientWaitingAppointment"]},"findByPatientWaitingAppointmentId":{"name":"findByPatientWaitingAppointmentId","parametersDataType":["Long"],"returnDataType":["PatientWaitingAppointment"]},"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["PatientWaitingAppointment"]}},"myMethods":{"findAllByClosed":{"name":"findAllByClosed","lineBegin":16,"lineEnd":16,"annotations":[],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[{"type":"boolean","variable":"closed","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByClosedOrderByDate":{"name":"findAllByClosedOrderByDate","lineBegin":20,"lineEnd":20,"annotations":[],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[{"type":"boolean","variable":"closed","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByClosedAndRepliedToOffer":{"name":"findAllByClosedAndRepliedToOffer","lineBegin":18,"lineEnd":18,"annotations":[],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[{"type":"boolean","variable":"closed","qualifedType":""},{"type":"boolean","variable":"repliedToOffer","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByPatientUserIdAndClosed":{"name":"findAllByPatientUserIdAndClosed","lineBegin":14,"lineEnd":14,"annotations":[],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[{"type":"long","variable":"userId","qualifedType":""},{"type":"boolean","variable":"closed","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByPatientWaitingAppointmentId":{"name":"findByPatientWaitingAppointmentId","lineBegin":22,"lineEnd":22,"annotations":[],"returnDataType":["PatientWaitingAppointment"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"patientWaitingAppointmentId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAll":{"name":"findAll","lineBegin":12,"lineEnd":12,"annotations":[],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["JpaRepository\u003cPatientWaitingAppointment, Long\u003e"],"imports":["org.springframework.data.jpa.repository.JpaRepository","org.springframework.stereotype.Repository","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","java.util.List"]},"pt.iscte.hospital.services.NationalityService":{"qualifiedName":"pt.iscte.hospital.services.NationalityService","begin":1,"end":9,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Nationality"],"methods":{"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["Nationality"]}},"myMethods":{"findAll":{"name":"findAll","lineBegin":8,"lineEnd":8,"annotations":[],"returnDataType":["List\u003cNationality\u003e"],"identifier":["List","Nationality"],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["pt.iscte.hospital.entities.Nationality","java.util.List"]},"pt.iscte.hospital.services.user.UserService":{"qualifiedName":"pt.iscte.hospital.services.user.UserService","begin":1,"end":31,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User"],"methods":{"findUser":{"name":"findUser","parametersDataType":["String"],"returnDataType":["User"]},"getUserRole":{"name":"getUserRole","parametersDataType":["User"],"returnDataType":["Role"]},"currentUser":{"name":"currentUser","parametersDataType":[],"returnDataType":["User"]},"validateUser":{"name":"validateUser","parametersDataType":["String","String"],"returnDataType":["boolean"]},"getUserMainPage":{"name":"getUserMainPage","parametersDataType":["User"],"returnDataType":["String"]},"findByUsername":{"name":"findByUsername","parametersDataType":["String"],"returnDataType":["User"]},"addUser":{"name":"addUser","parametersDataType":["User"],"returnDataType":["void"]},"findByUserId":{"name":"findByUserId","parametersDataType":["Long"],"returnDataType":["User"]},"getAuthorities":{"name":"getAuthorities","parametersDataType":["String"],"returnDataType":["GrantedAuthority"]},"validateUserMail":{"name":"validateUserMail","parametersDataType":["String","String"],"returnDataType":["boolean"]}},"myMethods":{"findUser":{"name":"findUser","lineBegin":20,"lineEnd":20,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"getUserRole":{"name":"getUserRole","lineBegin":26,"lineEnd":26,"annotations":[],"returnDataType":["Role"],"identifier":[],"parametersDataType":[{"type":"User","variable":"user","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"currentUser":{"name":"currentUser","lineBegin":22,"lineEnd":22,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validateUser":{"name":"validateUser","lineBegin":12,"lineEnd":12,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""},{"type":"String","variable":"password","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"getUserMainPage":{"name":"getUserMainPage","lineBegin":28,"lineEnd":28,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"User","variable":"user","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByUsername":{"name":"findByUsername","lineBegin":16,"lineEnd":16,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"addUser":{"name":"addUser","lineBegin":14,"lineEnd":14,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"User","variable":"user","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByUserId":{"name":"findByUserId","lineBegin":18,"lineEnd":18,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"getAuthorities":{"name":"getAuthorities","lineBegin":24,"lineEnd":24,"annotations":[],"returnDataType":["List\u003cGrantedAuthority\u003e"],"identifier":["List","GrantedAuthority"],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"validateUserMail":{"name":"validateUserMail","lineBegin":30,"lineEnd":30,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""},{"type":"String","variable":"email","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.security.core.GrantedAuthority","pt.iscte.hospital.entities.User","pt.iscte.hospital.security.Role","java.util.List"]},"pt.iscte.hospital.services.NationalityServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.NationalityServiceImpl","begin":1,"end":19,"isInterface":false,"annotations":["@Service"],"variables":["NationalityRepository nationalityRepository"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"NationalityRepository","variable":"nationalityRepository","lineBegin":12,"lineEnd":13}],"dependencies":["pt.iscte.hospital.repositories.NationalityRepository","pt.iscte.hospital.entities.Nationality"],"methods":{"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["Nationality"]}},"myMethods":{"findAll":{"name":"findAll","lineBegin":15,"lineEnd":18,"annotations":["@Override"],"returnDataType":["List\u003cNationality\u003e"],"identifier":["List","Nationality"],"parametersDataType":[],"variables":[],"body":"{\n    return nationalityRepository.findAll();\n}","methodInvocations":[{"scopeName":"nationalityRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.NationalityRepository"}]}},"methodInvocations":[{"scopeName":"nationalityRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.NationalityRepository"}],"implementedTypes":["pt.iscte.hospital.services.NationalityService","NationalityService"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Service","pt.iscte.hospital.entities.Nationality","pt.iscte.hospital.repositories.NationalityRepository","java.util.List"]},"pt.iscte.hospital.services.RegistrationService":{"qualifiedName":"pt.iscte.hospital.services.RegistrationService","begin":1,"end":10,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User"],"methods":{"changeEncryptPassword":{"name":"changeEncryptPassword","parametersDataType":["User","String"],"returnDataType":["void"]},"encryptPassword":{"name":"encryptPassword","parametersDataType":["User"],"returnDataType":["void"]}},"myMethods":{"changeEncryptPassword":{"name":"changeEncryptPassword","lineBegin":8,"lineEnd":8,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"User","variable":"user","qualifedType":""},{"type":"String","variable":"password","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"encryptPassword":{"name":"encryptPassword","lineBegin":6,"lineEnd":6,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"User","variable":"user","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["pt.iscte.hospital.entities.User"]},"pt.iscte.hospital.controllers.PublicController":{"qualifiedName":"pt.iscte.hospital.controllers.PublicController","begin":1,"end":95,"isInterface":false,"annotations":["@Controller"],"variables":["UserService userService","RegistrationService registrationService","Common common","User user","String mainPage","User user"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"UserService","variable":"userService","lineBegin":16,"lineEnd":16},{"annotations":[],"modifier":"private ","identifier":[],"type":"RegistrationService","variable":"registrationService","lineBegin":17,"lineEnd":17},{"annotations":[],"modifier":"private ","identifier":[],"type":"Common","variable":"common","lineBegin":18,"lineEnd":18}],"dependencies":["pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.RegistrationService","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User"],"methods":{"ShowContacts":{"name":"ShowContacts","parametersDataType":["ModelMap"],"returnDataType":["String"]},"showMainPage":{"name":"showMainPage","parametersDataType":["ModelMap"],"returnDataType":["String"]},"showLoginPage":{"name":"showLoginPage","parametersDataType":[],"returnDataType":["String"]},"showTermsAndConditions":{"name":"showTermsAndConditions","parametersDataType":[],"returnDataType":["String"]},"recoverPassword":{"name":"recoverPassword","parametersDataType":["ModelMap","String","String","String","String"],"returnDataType":["String"]},"showGeneralInformation":{"name":"showGeneralInformation","parametersDataType":["ModelMap"],"returnDataType":["String"]},"showRecoverPasswordPage":{"name":"showRecoverPasswordPage","parametersDataType":["ModelMap"],"returnDataType":["String"]}},"myMethods":{"ShowContacts":{"name":"ShowContacts","lineBegin":27,"lineEnd":31,"annotations":["@GetMapping(value \u003d \"/public/contacts\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[],"body":"{\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"public/contacts\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"showMainPage":{"name":"showMainPage","lineBegin":33,"lineEnd":42,"annotations":["@GetMapping(value \u003d { \"/public/main\", \"/\", \"/public\" })"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"User","variable":"user","qualifedType":""},{"type":"String","variable":"mainPage","qualifedType":""}],"body":"{\n    User user \u003d userService.currentUser();\n    String mainPage \u003d userService.getUserMainPage(user);\n    if (user !\u003d null) {\n        return \"redirect:\" + mainPage;\n    }\n    modelMap.addAllAttributes(common.sideNavMap());\n    return mainPage;\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService","methodName":"getUserMainPage","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"showLoginPage":{"name":"showLoginPage","lineBegin":51,"lineEnd":55,"annotations":["@GetMapping(value \u003d \"/public/login\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return \"public/login\";\n}","methodInvocations":[]},"showTermsAndConditions":{"name":"showTermsAndConditions","lineBegin":90,"lineEnd":93,"annotations":["@GetMapping(value \u003d \"/public/termsandconditions\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return \"public/termsandconditions\";\n}","methodInvocations":[]},"recoverPassword":{"name":"recoverPassword","lineBegin":66,"lineEnd":87,"annotations":["@PostMapping(value \u003d \"/public/recover-password\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"String","variable":"username","qualifedType":""},{"type":"String","variable":"email","qualifedType":""},{"type":"String","variable":"password1","qualifedType":""},{"type":"String","variable":"password2","qualifedType":""}],"variables":[{"type":"User","variable":"user","qualifedType":""}],"body":"{\n    if (userService.validateUserMail(username, email)) {\n        if (password1.equals(password2)) {\n            User user \u003d userService.findUser(username);\n            registrationService.changeEncryptPassword(user, password1);\n            userService.addUser(user);\n            return \"redirect:/public/login\";\n        } else {\n            modelMap.put(\"errorMessage\", \"Palavras-passe não coincidem\");\n        }\n    } else {\n        modelMap.put(\"errorMessage\", \"Username/Email inválido\");\n    }\n    modelMap.put(\"username\", username);\n    modelMap.put(\"email\", email);\n    return \"public/recover-password\";\n}","methodInvocations":[{"scopeName":"userService","methodName":"validateUserMail","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService","methodName":"findUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"registrationService","methodName":"changeEncryptPassword","targetClassName":"pt.iscte.hospital.services.RegistrationService"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"}]},"showGeneralInformation":{"name":"showGeneralInformation","lineBegin":44,"lineEnd":48,"annotations":["@GetMapping(value \u003d \"/public/general-information\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[],"body":"{\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"public/general-information\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"showRecoverPasswordPage":{"name":"showRecoverPasswordPage","lineBegin":58,"lineEnd":64,"annotations":["@GetMapping(value \u003d \"/public/recover-password\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[],"body":"{\n    modelMap.put(\"username\", \"\");\n    modelMap.put(\"email\", \"\");\n    return \"public/recover-password\";\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService","methodName":"getUserMainPage","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"userService","methodName":"validateUserMail","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService","methodName":"findUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"registrationService","methodName":"changeEncryptPassword","targetClassName":"pt.iscte.hospital.services.RegistrationService"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Controller","org.springframework.ui.ModelMap","org.springframework.web.bind.annotation.GetMapping","org.springframework.web.bind.annotation.PostMapping","org.springframework.web.bind.annotation.RequestParam","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.User","pt.iscte.hospital.services.RegistrationService","pt.iscte.hospital.services.user.UserService"]},"pt.iscte.hospital.services.invoice.InvoiceApi":{"qualifiedName":"pt.iscte.hospital.services.invoice.InvoiceApi","begin":1,"end":41,"isInterface":false,"annotations":["@Component","@Getter","@Setter","@ToString","@JsonIgnoreProperties(ignoreUnknown \u003d true)"],"variables":["String id","String name","String email","long nif","LocalDateTime dueDate","LocalDateTime issuedDate","LocalDateTime paidDate","double value","List\u003cInvoiceItem\u003e items","String status","String url"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"id","lineBegin":18,"lineEnd":18},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"name","lineBegin":19,"lineEnd":19},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"email","lineBegin":20,"lineEnd":20},{"annotations":[],"modifier":"private ","identifier":[],"type":"long","variable":"nif","lineBegin":21,"lineEnd":21},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalDateTime","variable":"dueDate","lineBegin":22,"lineEnd":22},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalDateTime","variable":"issuedDate","lineBegin":23,"lineEnd":23},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalDateTime","variable":"paidDate","lineBegin":24,"lineEnd":24},{"annotations":[],"modifier":"private ","identifier":[],"type":"double","variable":"value","lineBegin":25,"lineEnd":25},{"annotations":[],"modifier":"private ","identifier":["List","InvoiceItem"],"type":"List\u003cInvoiceItem\u003e","variable":"items","lineBegin":26,"lineEnd":26},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"status","lineBegin":27,"lineEnd":27},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"url","lineBegin":28,"lineEnd":28}],"dependencies":["pt.iscte.hospital.services.invoice.InvoiceItem"],"methods":{"getInvoiceState":{"name":"getInvoiceState","parametersDataType":[],"returnDataType":["int"]}},"myMethods":{"getInvoiceState":{"name":"getInvoiceState","lineBegin":34,"lineEnd":39,"annotations":[],"returnDataType":["int"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    if (status.equals(\"paid\")) {\n        return 1;\n    }\n    return 2;\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["com.fasterxml.jackson.annotation.JsonIgnoreProperties","lombok.Getter","lombok.Setter","lombok.ToString","org.springframework.stereotype.Component","java.time.LocalDateTime","java.util.List"]},"pt.iscte.hospital.configuration.SpringAsyncConfig":{"qualifiedName":"pt.iscte.hospital.configuration.SpringAsyncConfig","begin":1,"end":20,"isInterface":false,"annotations":["@Configuration","@EnableAsync"],"variables":[],"instance_variables":[],"dependencies":[],"methods":{"threadPoolTaskExecutor":{"name":"threadPoolTaskExecutor","parametersDataType":[],"returnDataType":["Executor"]}},"myMethods":{"threadPoolTaskExecutor":{"name":"threadPoolTaskExecutor","lineBegin":14,"lineEnd":17,"annotations":["@Bean(name \u003d \"threadPoolTaskExecutor\")"],"returnDataType":["Executor"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return new ThreadPoolTaskExecutor();\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":["AsyncConfigurer"],"extendedTypes":[],"imports":["org.springframework.context.annotation.Bean","org.springframework.context.annotation.Configuration","org.springframework.scheduling.annotation.AsyncConfigurer","org.springframework.scheduling.annotation.EnableAsync","org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","java.util.concurrent.Executor"]},"pt.iscte.hospital.controllers.PatientController":{"qualifiedName":"pt.iscte.hospital.controllers.PatientController","begin":1,"end":309,"isInterface":false,"annotations":["@Controller"],"variables":["AppointmentService appointmentService","SpecialityService specialityService","UserService userService","PatientService patientService","DoctorService doctorService","SlotService slotService","PatientWaitingAppointmentService patientWaitingAppointmentService","Common common","List\u003cSpeciality\u003e specialities","LocalDate todayDate","String chosenDay","int dayOfToday","int year","int monthOfTodayNr","List\u003cDay\u003e calendar","String strMonth","String nextMonth","String previousMonth","LocalDate todayDate","LocalDate chosenDate","int dayOfToday","int calYear","int calMonth","String strMonth","String nextMonthDate","String previousMonthDate","int previousArrowState","int nextArrowState","Doctor doctor","List\u003cSpeciality\u003e specialities","Speciality speciality","List\u003cDoctor\u003e doctors","List\u003cSlot\u003e slots","List\u003cDay\u003e calendar","boolean hasSelectDoctor","boolean hasSlotForDoctor","Appointment appointmentForCancel","User userLogged","LocalDateTime dataToday","Long userId","Patient patient","Doctor doctor","PatientWaitingAppointment patientWaitingAppointment","Slot slot","Patient patient","Appointment appointment","Slot slot","LocalDateTime dateTimeToday","List\u003cSlot\u003e result","LocalDateTime localDateTime","Slot slot"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"AppointmentService","variable":"appointmentService","lineBegin":35,"lineEnd":36},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"SpecialityService","variable":"specialityService","lineBegin":37,"lineEnd":38},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"UserService","variable":"userService","lineBegin":39,"lineEnd":40},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"PatientService","variable":"patientService","lineBegin":41,"lineEnd":42},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"DoctorService","variable":"doctorService","lineBegin":43,"lineEnd":44},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"SlotService","variable":"slotService","lineBegin":45,"lineEnd":46},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"PatientWaitingAppointmentService","variable":"patientWaitingAppointmentService","lineBegin":47,"lineEnd":48},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"Common","variable":"common","lineBegin":49,"lineEnd":50}],"dependencies":["pt.iscte.hospital.services.AppointmentService","pt.iscte.hospital.services.SpecialityService","pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.user.PatientService","pt.iscte.hospital.services.user.DoctorService","pt.iscte.hospital.services.SlotService","pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Appointment"],"methods":{"showMakeAppointment":{"name":"showMakeAppointment","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"askAppointmentPost":{"name":"askAppointmentPost","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"filterPastHour":{"name":"filterPastHour","parametersDataType":["Slot"],"returnDataType":["Slot"]},"cancelAppointment":{"name":"cancelAppointment","parametersDataType":["int","Appointment"],"returnDataType":["void"]},"askAppointment":{"name":"askAppointment","parametersDataType":["ModelMap"],"returnDataType":["String"]},"saveAppointment":{"name":"saveAppointment","parametersDataType":["String"],"returnDataType":["void"]},"showPatientMain":{"name":"showPatientMain","parametersDataType":["ModelMap"],"returnDataType":["String"]},"makeAppointmentService":{"name":"makeAppointmentService","parametersDataType":["ModelMap","String","String","String","String","String","String","Long"],"returnDataType":["String"]}},"myMethods":{"showMakeAppointment":{"name":"showMakeAppointment","lineBegin":63,"lineEnd":97,"annotations":["@GetMapping(value \u003d { \"/patient/make-appointment\", \"/patient/reschedule/{appointmentId}\" })"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[{"type":"List\u003cSpeciality\u003e","variable":"specialities","qualifedType":"pt.iscte.hospital.entities.Speciality"},{"type":"LocalDate","variable":"todayDate","qualifedType":""},{"type":"String","variable":"chosenDay","qualifedType":""},{"type":"int","variable":"dayOfToday","qualifedType":""},{"type":"int","variable":"year","qualifedType":""},{"type":"int","variable":"monthOfTodayNr","qualifedType":""},{"type":"List\u003cDay\u003e","variable":"calendar","qualifedType":"pt.iscte.hospital.objects.utils.Day"},{"type":"String","variable":"strMonth","qualifedType":""},{"type":"String","variable":"nextMonth","qualifedType":""},{"type":"String","variable":"previousMonth","qualifedType":""}],"body":"{\n    List\u003cSpeciality\u003e specialities \u003d specialityService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    LocalDate todayDate \u003d LocalDate.now();\n    String chosenDay \u003d todayDate.format(FORMATTER);\n    int dayOfToday \u003d todayDate.getDayOfMonth();\n    int year \u003d todayDate.getYear();\n    int monthOfTodayNr \u003d todayDate.getMonth().getValue();\n    List\u003cDay\u003e calendar \u003d Calendar.calendarList(year, monthOfTodayNr);\n    String strMonth \u003d Month.searchMonth(monthOfTodayNr);\n    String nextMonth \u003d todayDate.plusMonths(1).format(FORMATTER);\n    String previousMonth \u003d todayDate.minusMonths(1).format(FORMATTER);\n    modelMap.put(\"specialities\", specialities);\n    modelMap.put(\"calendarDays\", calendar);\n    modelMap.put(\"nextMonth\", nextMonth);\n    modelMap.put(\"previousMonth\", previousMonth);\n    modelMap.put(\"previousArrowState\", 0);\n    modelMap.put(\"nextArrowState\", 1);\n    modelMap.put(\"dayOfToday\", dayOfToday);\n    modelMap.put(\"year\", year);\n    modelMap.put(\"strMonth\", strMonth);\n    modelMap.put(\"chosenDay\", chosenDay);\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"appointmentId\", appointmentId);\n    if (appointmentId \u003d\u003d null) {\n        modelMap.put(\"isToBeReschedule\", false);\n    } else {\n        modelMap.put(\"isToBeReschedule\", true);\n    }\n    return \"patient/make-appointment\";\n}","methodInvocations":[{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"todayDate","methodName":"format","targetClassName":""},{"scopeName":"todayDate","methodName":"getDayOfMonth","targetClassName":""},{"scopeName":"todayDate","methodName":"getYear","targetClassName":""},{"scopeName":"todayDate","methodName":"getMonth","targetClassName":""},{"scopeName":"todayDate.getMonth()","methodName":"getValue","targetClassName":""},{"scopeName":"Calendar","methodName":"calendarList","targetClassName":"pt.iscte.hospital.objects.utils.Calendar"},{"scopeName":"todayDate","methodName":"plusMonths","targetClassName":""},{"scopeName":"todayDate.plusMonths(1)","methodName":"format","targetClassName":""},{"scopeName":"todayDate","methodName":"minusMonths","targetClassName":""},{"scopeName":"todayDate.minusMonths(1)","methodName":"format","targetClassName":""},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"askAppointmentPost":{"name":"askAppointmentPost","lineBegin":252,"lineEnd":267,"annotations":["@PostMapping(value \u003d \"/patient/waitingAppointment/ask\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"doctorId","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""},{"type":"LocalDateTime","variable":"dataToday","qualifedType":""},{"type":"Long","variable":"userId","qualifedType":""},{"type":"Patient","variable":"patient","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"PatientWaitingAppointment","variable":"patientWaitingAppointment","qualifedType":""}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    LocalDateTime dataToday \u003d LocalDateTime.now();\n    Long userId \u003d userLogged.getUserId();\n    Patient patient \u003d patientService.findByUserId(userId);\n    Doctor doctor \u003d doctorService.findByUserId(doctorId);\n    PatientWaitingAppointment patientWaitingAppointment \u003d new PatientWaitingAppointment(dataToday, doctor, patient);\n    patientWaitingAppointmentService.save(patientWaitingAppointment);\n    modelMap.put(\"message\", \"O seu pedido de consulta ficou registado.\");\n    modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"components/alert-message\";\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patientService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"doctorService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"filterPastHour":{"name":"filterPastHour","lineBegin":298,"lineEnd":308,"annotations":[],"returnDataType":["List\u003cSlot\u003e"],"identifier":["List","Slot"],"parametersDataType":[{"type":"List\u003cSlot\u003e","variable":"slotList","qualifedType":""}],"variables":[{"type":"LocalDateTime","variable":"dateTimeToday","qualifedType":""},{"type":"List\u003cSlot\u003e","variable":"result","qualifedType":"pt.iscte.hospital.entities.Slot"},{"type":"LocalDateTime","variable":"localDateTime","qualifedType":""},{"type":"Slot","variable":"slot","qualifedType":""}],"body":"{\n    LocalDateTime dateTimeToday \u003d LocalDateTime.now();\n    List\u003cSlot\u003e result \u003d new ArrayList\u003c\u003e();\n    for (Slot slot : slotList) {\n        LocalDateTime localDateTime \u003d LocalDateTime.of(slot.getDate(), slot.getTimeBegin());\n        if (localDateTime.isAfter(dateTimeToday)) {\n            result.add(slot);\n        }\n    }\n    return result;\n}","methodInvocations":[{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"localDateTime","methodName":"isAfter","targetClassName":""},{"scopeName":"result","methodName":"add","targetClassName":"pt.iscte.hospital.entities.Slot"}]},"cancelAppointment":{"name":"cancelAppointment","lineBegin":290,"lineEnd":296,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"int","variable":"stateNr","qualifedType":""},{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[{"type":"Slot","variable":"slot","qualifedType":""}],"body":"{\n    appointment.setAppointmentStatus(stateNr);\n    appointmentService.saveAppointment(appointment);\n    Slot slot \u003d appointment.getSlot();\n    slot.setAvailable(true);\n    slotService.saveSlot(slot);\n}","methodInvocations":[{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"}]},"askAppointment":{"name":"askAppointment","lineBegin":245,"lineEnd":250,"annotations":["@GetMapping(value \u003d \"/patient/waitingAppointment/ask\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[],"body":"{\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"components/alert-message\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"saveAppointment":{"name":"saveAppointment","lineBegin":271,"lineEnd":288,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"slotId","qualifedType":""}],"variables":[{"type":"Slot","variable":"slot","qualifedType":""},{"type":"Patient","variable":"patient","qualifedType":""},{"type":"Appointment","variable":"appointment","qualifedType":""}],"body":"{\n    // Encontrar slot por id\n    Slot slot \u003d slotService.findBySlotId(Long.parseLong(slotId));\n    // Marcar slot como marcada/indisponível\n    slot.setAvailable(false);\n    // Actualizar slot na base de dados\n    slotService.saveSlot(slot);\n    // Adicionar consulta à base de dados\n    Patient patient \u003d patientService.findByUsername(userService.currentUser().getUsername());\n    Appointment appointment \u003d new Appointment(patient, slot);\n    appointmentService.saveAppointment(appointment);\n    System.out.println(\"Sucesso: consulta marcada - \" + appointment + slot);\n}","methodInvocations":[{"scopeName":"slotService","methodName":"findBySlotId","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService.currentUser()","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patientService","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"}]},"showPatientMain":{"name":"showPatientMain","lineBegin":56,"lineEnd":60,"annotations":["@GetMapping(value \u003d { \"/patient/main\", \"/patient\" })"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[],"body":"{\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"patient/main\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"makeAppointmentService":{"name":"makeAppointmentService","lineBegin":100,"lineEnd":242,"annotations":["@PostMapping(value \u003d { \"/patient/make-appointment\", \"/patient/make-appointment/{saveOption}\", \"/patient/reschedule/{appointmentId}/{saveOption}\", \"/patient/reschedule/{appointmentId}\" })"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"doctorId","qualifedType":""},{"type":"String","variable":"slotId","qualifedType":""},{"type":"String","variable":"chosenDay","qualifedType":""},{"type":"String","variable":"arrowMonth","qualifedType":""},{"type":"String","variable":"saveOption","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[{"type":"LocalDate","variable":"todayDate","qualifedType":""},{"type":"LocalDate","variable":"chosenDate","qualifedType":""},{"type":"int","variable":"dayOfToday","qualifedType":""},{"type":"int","variable":"calYear","qualifedType":""},{"type":"int","variable":"calMonth","qualifedType":""},{"type":"String","variable":"strMonth","qualifedType":""},{"type":"String","variable":"nextMonthDate","qualifedType":""},{"type":"String","variable":"previousMonthDate","qualifedType":""},{"type":"int","variable":"previousArrowState","qualifedType":""},{"type":"int","variable":"nextArrowState","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"List\u003cSpeciality\u003e","variable":"specialities","qualifedType":"pt.iscte.hospital.entities.Speciality"},{"type":"Speciality","variable":"speciality","qualifedType":""},{"type":"List\u003cDoctor\u003e","variable":"doctors","qualifedType":"pt.iscte.hospital.entities.Doctor"},{"type":"List\u003cSlot\u003e","variable":"slots","qualifedType":"pt.iscte.hospital.entities.Slot"},{"type":"List\u003cDay\u003e","variable":"calendar","qualifedType":"pt.iscte.hospital.objects.utils.Day"},{"type":"boolean","variable":"hasSelectDoctor","qualifedType":""},{"type":"boolean","variable":"hasSlotForDoctor","qualifedType":""},{"type":"Appointment","variable":"appointmentForCancel","qualifedType":""}],"body":"{\n    // **********\n    LocalDate todayDate \u003d LocalDate.now();\n    LocalDate chosenDate;\n    int dayOfToday;\n    int calYear;\n    int calMonth;\n    String strMonth;\n    String nextMonthDate;\n    String previousMonthDate;\n    int previousArrowState;\n    int nextArrowState;\n    // Foi selecionado um mês\n    if (arrowMonth !\u003d null) {\n        chosenDate \u003d LocalDate.parse(arrowMonth, FORMATTER);\n        if (chosenDate.getMonthValue() !\u003d todayDate.getMonthValue()) {\n            chosenDay \u003d chosenDate.withDayOfMonth(1).format(FORMATTER);\n        } else {\n            chosenDay \u003d todayDate.format(FORMATTER);\n        }\n    // Foi selecionado um dia\n    } else if (chosenDay !\u003d null \u0026\u0026 arrowMonth \u003d\u003d null) {\n        chosenDate \u003d LocalDate.parse(chosenDay, FORMATTER);\n    // Não existe dia selecionado\n    } else {\n        chosenDate \u003d todayDate;\n        chosenDay \u003d todayDate.format(FORMATTER);\n    }\n    calYear \u003d chosenDate.getYear();\n    calMonth \u003d chosenDate.getMonthValue();\n    strMonth \u003d Month.searchMonth(chosenDate.getMonthValue());\n    nextMonthDate \u003d chosenDate.plusMonths(1).format(FORMATTER);\n    previousMonthDate \u003d chosenDate.minusMonths(1).format(FORMATTER);\n    // Lógica das setas + Condição para limitar a selecção de dias de calendário, dias anteriores ao dia actual\n    if (chosenDate.getMonthValue() \u003d\u003d todayDate.getMonthValue()) {\n        previousArrowState \u003d 0;\n        nextArrowState \u003d 1;\n        dayOfToday \u003d todayDate.getDayOfMonth();\n    } else {\n        previousArrowState \u003d 1;\n        // colocar a 1 se não existir limitação para mostrar meses\n        nextArrowState \u003d 0;\n        dayOfToday \u003d 0;\n    }\n    // **********\n    // Se campos vazios\n    Doctor doctor \u003d null;\n    if (doctorId \u003d\u003d null || doctorId.isEmpty()) {\n        doctorId \u003d \"\";\n    } else {\n        doctor \u003d doctorService.findByUserId(Long.parseLong(doctorId));\n    }\n    if (specialityName \u003d\u003d null || specialityName.isEmpty()) {\n        specialityName \u003d \"\";\n    }\n    if (saveOption \u003d\u003d null) {\n        saveOption \u003d \"\";\n    }\n    // envio de dados para a página\n    // alterar a página para receber dados\n    List\u003cSpeciality\u003e specialities \u003d specialityService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    Speciality speciality \u003d specialityService.findByName(specialityName);\n    List\u003cDoctor\u003e doctors \u003d doctorService.findAllBySpecialityOrderByNameAsc(speciality);\n    List\u003cSlot\u003e slots \u003d slotService.findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc(doctor, true, chosenDate);\n    slots \u003d filterPastHour(slots);\n    List\u003cDay\u003e calendar \u003d Calendar.calendarList(calYear, calMonth);\n    boolean hasSelectDoctor \u003d !doctorId.isEmpty();\n    if (!doctorId.isEmpty()) {\n        calendar \u003d slotService.calendarColor(calendar, doctor);\n    } else if (!specialityName.isEmpty()) {\n        calendar \u003d slotService.calendarColor(calendar, specialityName);\n    }\n    boolean hasSlotForDoctor \u003d slotService.hasDisponibilidadeNoMes(calendar, doctor);\n    modelMap.put(\"hasSlotForDoctor\", hasSlotForDoctor);\n    modelMap.put(\"hasSelectDoctor\", hasSelectDoctor);\n    // Marcar consulta\n    if (slotId !\u003d null \u0026\u0026 !slotId.isEmpty() \u0026\u0026 saveOption.equals(\"save\")) {\n        if (appointmentId \u003d\u003d null) {\n            saveAppointment(slotId);\n            modelMap.put(\"message\", \"A consulta foi marcada com sucesso.\");\n            modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n            modelMap.addAllAttributes(common.sideNavMap());\n        } else {\n            saveAppointment(slotId);\n            Appointment appointmentForCancel \u003d appointmentService.findByAppointmentId(appointmentId);\n            cancelAppointment(DESMARCADA_PELO_UTENTE.getStateNr(), appointmentForCancel);\n            modelMap.put(\"message\", \"A consulta foi reagendada com sucesso.\");\n            modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n            modelMap.addAllAttributes(common.sideNavMap());\n        }\n        return \"components/alert-message\";\n    }\n    modelMap.put(\"specialities\", specialities);\n    modelMap.put(\"doctors\", doctors);\n    modelMap.put(\"slots\", slots);\n    modelMap.put(\"search_speciality\", specialityName);\n    modelMap.put(\"search_doctor\", doctorId);\n    modelMap.put(\"search_slot\", slotId);\n    modelMap.put(\"calendarDays\", calendar);\n    modelMap.put(\"nextMonth\", nextMonthDate);\n    modelMap.put(\"previousMonth\", previousMonthDate);\n    modelMap.put(\"previousArrowState\", previousArrowState);\n    modelMap.put(\"nextArrowState\", nextArrowState);\n    modelMap.put(\"dayOfToday\", dayOfToday);\n    modelMap.put(\"year\", calYear);\n    modelMap.put(\"strMonth\", strMonth);\n    modelMap.put(\"chosenDay\", chosenDay);\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"appointmentId\", appointmentId);\n    if (appointmentId \u003d\u003d null) {\n        modelMap.put(\"isToBeReschedule\", false);\n    } else {\n        modelMap.put(\"isToBeReschedule\", true);\n    }\n    return (\"patient/make-appointment\");\n}","methodInvocations":[{"scopeName":"todayDate","methodName":"format","targetClassName":""},{"scopeName":"chosenDate","methodName":"getMonthValue","targetClassName":""},{"scopeName":"todayDate","methodName":"getMonthValue","targetClassName":""},{"scopeName":"todayDate","methodName":"format","targetClassName":""},{"scopeName":"chosenDate","methodName":"withDayOfMonth","targetClassName":""},{"scopeName":"chosenDate.withDayOfMonth(1)","methodName":"format","targetClassName":""},{"scopeName":"chosenDate","methodName":"getYear","targetClassName":""},{"scopeName":"chosenDate","methodName":"getMonthValue","targetClassName":""},{"scopeName":"chosenDate","methodName":"getMonthValue","targetClassName":""},{"scopeName":"chosenDate","methodName":"plusMonths","targetClassName":""},{"scopeName":"chosenDate.plusMonths(1)","methodName":"format","targetClassName":""},{"scopeName":"chosenDate","methodName":"minusMonths","targetClassName":""},{"scopeName":"chosenDate.minusMonths(1)","methodName":"format","targetClassName":""},{"scopeName":"chosenDate","methodName":"getMonthValue","targetClassName":""},{"scopeName":"todayDate","methodName":"getMonthValue","targetClassName":""},{"scopeName":"todayDate","methodName":"getDayOfMonth","targetClassName":""},{"scopeName":"doctorService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"specialityService","methodName":"findByName","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"doctorService","methodName":"findAllBySpecialityOrderByNameAsc","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"slotService","methodName":"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"Calendar","methodName":"calendarList","targetClassName":"pt.iscte.hospital.objects.utils.Calendar"},{"scopeName":"slotService","methodName":"calendarColor","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotService","methodName":"calendarColor","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotService","methodName":"hasDisponibilidadeNoMes","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]}},"methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"Calendar","methodName":"calendarList","targetClassName":"pt.iscte.hospital.objects.utils.Calendar"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"doctorService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"specialityService","methodName":"findByName","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"doctorService","methodName":"findAllBySpecialityOrderByNameAsc","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"slotService","methodName":"findAllByDoctorAndIsAvailableAndDateOrderByTimeBeginAsc","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"Calendar","methodName":"calendarList","targetClassName":"pt.iscte.hospital.objects.utils.Calendar"},{"scopeName":"slotService","methodName":"calendarColor","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotService","methodName":"calendarColor","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slotService","methodName":"hasDisponibilidadeNoMes","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patientService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"doctorService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"slotService","methodName":"findBySlotId","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService.currentUser()","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patientService","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.data.domain.Sort","org.springframework.stereotype.Controller","org.springframework.ui.ModelMap","org.springframework.web.bind.annotation.GetMapping","org.springframework.web.bind.annotation.PathVariable","org.springframework.web.bind.annotation.PostMapping","org.springframework.web.bind.annotation.RequestParam","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.objects.utils.AlertMessageImage","pt.iscte.hospital.objects.utils.Calendar","pt.iscte.hospital.objects.utils.Day","pt.iscte.hospital.objects.utils.Month","pt.iscte.hospital.services","pt.iscte.hospital.services.user.DoctorService","pt.iscte.hospital.services.user.PatientService","pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService","java.time.LocalDate","java.time.LocalDateTime","java.util.ArrayList","java.util.List","pt.iscte.hospital.entities.states.AppointmentState","pt.iscte.hospital.objects.utils.Calendar.FORMATTER"]},"pt.iscte.hospital.threads.MakeAppointment":{"qualifiedName":"pt.iscte.hospital.threads.MakeAppointment","begin":1,"end":135,"isInterface":false,"annotations":["@Component"],"variables":["Long WAITING_PERIOD_HOURS","Long WAITING_PERIOD_FOR_NEXT_DAY_HOURS","String URL_CONFIRMA_SIM","String URL_CONFIRMA_NAO","PatientWaitingAppointmentService patientWaitingAppointmentService","SlotService slotService","MessageService messageService","LocalDateTime todayDateTime","List\u003cPatientWaitingAppointment\u003e listaDeEspera","Doctor doctor","List\u003cSlot\u003e slots","LocalDate slotDate","LocalTime slotTime","LocalDateTime slotDateTime","Message message","Slot slot","PatientWaitingAppointment patientWaiting","List\u003cPatientWaitingAppointment\u003e listaDeEspera","LocalDateTime todayDateTime","Slot slot","PatientWaitingAppointment patientWaitingAppointment","Long patientWaiting_id","Doctor doctor","Patient patient","String artigo","String drName","String especialidade","String data","String horas","String messageStr"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"Long","variable":"WAITING_PERIOD_HOURS","lineBegin":21,"lineEnd":21},{"annotations":[],"modifier":"private ","identifier":[],"type":"Long","variable":"WAITING_PERIOD_FOR_NEXT_DAY_HOURS","lineBegin":22,"lineEnd":22},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"URL_CONFIRMA_SIM","lineBegin":23,"lineEnd":23},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"URL_CONFIRMA_NAO","lineBegin":24,"lineEnd":24},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"PatientWaitingAppointmentService","variable":"patientWaitingAppointmentService","lineBegin":26,"lineEnd":27},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"SlotService","variable":"slotService","lineBegin":29,"lineEnd":30},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"MessageService","variable":"messageService","lineBegin":31,"lineEnd":32}],"dependencies":["pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService","pt.iscte.hospital.services.SlotService","pt.iscte.hospital.services.MessageService","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"],"methods":{"marcarConsultasEmEspera":{"name":"marcarConsultasEmEspera","parametersDataType":[],"returnDataType":["void"]},"verificarRespostas":{"name":"verificarRespostas","parametersDataType":[],"returnDataType":["void"]},"mensagemConfirmacao":{"name":"mensagemConfirmacao","parametersDataType":["PatientWaitingAppointment","LocalDateTime"],"returnDataType":["Message"]}},"myMethods":{"marcarConsultasEmEspera":{"name":"marcarConsultasEmEspera","lineBegin":35,"lineEnd":76,"annotations":["@Scheduled(fixedRate \u003d 60000)"],"returnDataType":["void"],"identifier":[],"parametersDataType":[],"variables":[{"type":"LocalDateTime","variable":"todayDateTime","qualifedType":""},{"type":"List\u003cPatientWaitingAppointment\u003e","variable":"listaDeEspera","qualifedType":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"List\u003cSlot\u003e","variable":"slots","qualifedType":"pt.iscte.hospital.entities.Slot"},{"type":"LocalDate","variable":"slotDate","qualifedType":""},{"type":"LocalTime","variable":"slotTime","qualifedType":""},{"type":"LocalDateTime","variable":"slotDateTime","qualifedType":""},{"type":"Message","variable":"message","qualifedType":""},{"type":"Slot","variable":"slot","qualifedType":""},{"type":"PatientWaitingAppointment","variable":"patientWaiting","qualifedType":""}],"body":"{\n    System.out.println(\"Iniciado sistema de marcação de consultas em lista de espera.\");\n    LocalDateTime todayDateTime \u003d LocalDateTime.now();\n    // Verifica se à consultas em espera\n    List\u003cPatientWaitingAppointment\u003e listaDeEspera \u003d patientWaitingAppointmentService.findAllByClosedOrderByDate(false);\n    // Para cada elemento em espera verifica se à vaga\n    for (PatientWaitingAppointment patientWaiting : listaDeEspera) {\n        Doctor doctor \u003d patientWaiting.getDoctor();\n        // Verifica lista de slot disponíveis\n        List\u003cSlot\u003e slots \u003d slotService.findAllByDoctorAndIsAvailableOrderByTimeBeginAsc(doctor, true);\n        for (Slot slot : slots) {\n            LocalDate slotDate \u003d slot.getDate();\n            LocalTime slotTime \u003d slot.getTimeBegin();\n            LocalDateTime slotDateTime \u003d LocalDateTime.of(slotDate, slotTime);\n            if (slotDateTime.isAfter(todayDateTime.plusHours(WAITING_PERIOD_FOR_NEXT_DAY_HOURS))) {\n                slot.setAvailable(false);\n                slotService.saveSlot(slot);\n                patientWaiting.setClosed(true);\n                patientWaiting.setSlot(slot);\n                if (slotDateTime.isBefore(todayDateTime.plusHours(24L))) {\n                    patientWaiting.setLimitDateToReply(todayDateTime.plusHours(WAITING_PERIOD_FOR_NEXT_DAY_HOURS));\n                } else {\n                    patientWaiting.setLimitDateToReply(todayDateTime.plusHours(WAITING_PERIOD_HOURS));\n                }\n                patientWaitingAppointmentService.save(patientWaiting);\n                Message message \u003d mensagemConfirmacao(patientWaiting, slotDateTime);\n                messageService.save(message);\n                System.out.println(\"Consulta marcada!\");\n                break;\n            }\n        }\n    }\n}","methodInvocations":[{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByClosedOrderByDate","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaiting","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"slotService","methodName":"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"todayDateTime","methodName":"plusHours","targetClassName":""},{"scopeName":"slotDateTime","methodName":"isAfter","targetClassName":""},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"patientWaiting","methodName":"setClosed","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaiting","methodName":"setSlot","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"todayDateTime","methodName":"plusHours","targetClassName":""},{"scopeName":"slotDateTime","methodName":"isBefore","targetClassName":""},{"scopeName":"todayDateTime","methodName":"plusHours","targetClassName":""},{"scopeName":"patientWaiting","methodName":"setLimitDateToReply","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"todayDateTime","methodName":"plusHours","targetClassName":""},{"scopeName":"patientWaiting","methodName":"setLimitDateToReply","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"messageService","methodName":"save","targetClassName":"pt.iscte.hospital.services.MessageService"}]},"verificarRespostas":{"name":"verificarRespostas","lineBegin":79,"lineEnd":99,"annotations":["@Scheduled(fixedRate \u003d 60000)"],"returnDataType":["void"],"identifier":[],"parametersDataType":[],"variables":[{"type":"List\u003cPatientWaitingAppointment\u003e","variable":"listaDeEspera","qualifedType":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"type":"LocalDateTime","variable":"todayDateTime","qualifedType":""},{"type":"Slot","variable":"slot","qualifedType":""},{"type":"PatientWaitingAppointment","variable":"patientWaitingAppointment","qualifedType":""}],"body":"{\n    System.out.println(\"Verifica se utentes responderam às vagas propostas.\");\n    List\u003cPatientWaitingAppointment\u003e listaDeEspera \u003d patientWaitingAppointmentService.findAllByClosedAndRepliedToOffer(true, false);\n    LocalDateTime todayDateTime \u003d LocalDateTime.now();\n    for (PatientWaitingAppointment patientWaitingAppointment : listaDeEspera) {\n        if (patientWaitingAppointment.getLimitDateToReply().isBefore(todayDateTime)) {\n            Slot slot \u003d patientWaitingAppointment.getSlot();\n            slot.setAvailable(true);\n            slotService.saveSlot(slot);\n            patientWaitingAppointment.setRepliedToOffer(true);\n            patientWaitingAppointment.setSlotAccepted(false);\n            patientWaitingAppointmentService.save(patientWaitingAppointment);\n            System.out.println(\"Processo de atribuição de vaga fechado.\");\n        }\n    }\n}","methodInvocations":[{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByClosedAndRepliedToOffer","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointment","methodName":"getLimitDateToReply","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"patientWaitingAppointment","methodName":"setRepliedToOffer","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment","methodName":"setSlotAccepted","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"}]},"mensagemConfirmacao":{"name":"mensagemConfirmacao","lineBegin":102,"lineEnd":134,"annotations":[],"returnDataType":["Message"],"identifier":[],"parametersDataType":[{"type":"PatientWaitingAppointment","variable":"patientWaiting","qualifedType":""},{"type":"LocalDateTime","variable":"dateTime","qualifedType":""}],"variables":[{"type":"Long","variable":"patientWaiting_id","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"Patient","variable":"patient","qualifedType":""},{"type":"String","variable":"artigo","qualifedType":""},{"type":"String","variable":"drName","qualifedType":""},{"type":"String","variable":"especialidade","qualifedType":""},{"type":"String","variable":"data","qualifedType":""},{"type":"String","variable":"horas","qualifedType":""},{"type":"String","variable":"messageStr","qualifedType":""}],"body":"{\n    Long patientWaiting_id \u003d patientWaiting.getPatientWaitingAppointmentId();\n    Doctor doctor \u003d patientWaiting.getDoctor();\n    Patient patient \u003d patientWaiting.getPatient();\n    String artigo \u003d \"\";\n    if (doctor.getSex().equalsIgnoreCase(\"masculino\")) {\n        artigo \u003d \"o\";\n    } else {\n        artigo \u003d \"a\";\n    }\n    String drName \u003d doctor.getTitleAndName();\n    String especialidade \u003d doctor.getSpeciality().getName();\n    String data \u003d dateTime.format(Calendar.FORMATTER);\n    String horas \u003d dateTime.format(Calendar.TIME_FORMATTER);\n    String messageStr \u003d String.format(\"Por favor confirme se deseja a sua consulta com %s %s, %s, para a data %s às %s horas. \" + \"Confirma: \u003ca class\u003d\\\"btn-msg btn-msg-green\\\" href\u003d\\\"%s\\\"\u003eSim\u003c/a\u003e  \" + \"  \u003ca \u003ca class\u003d\\\"btn-msg btn-msg-blue\\\"href\u003d\\\"%s\\\"\u003eNão\u003c/a\u003e\", artigo, drName, especialidade, data, horas, String.format(URL_CONFIRMA_SIM, patientWaiting_id), String.format(URL_CONFIRMA_NAO, patientWaiting_id));\n    return new Message(\"Marcação de consulta\", messageStr, patient);\n}","methodInvocations":[{"scopeName":"patientWaiting","methodName":"getPatientWaitingAppointmentId","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaiting","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaiting","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"doctor","methodName":"getSex","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getSex()","methodName":"equalsIgnoreCase","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor","methodName":"getTitleAndName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getSpeciality()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Doctor"}]}},"methodInvocations":[{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByClosedOrderByDate","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaiting","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"slotService","methodName":"findAllByDoctorAndIsAvailableOrderByTimeBeginAsc","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"patientWaiting","methodName":"setClosed","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaiting","methodName":"setSlot","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaiting","methodName":"setLimitDateToReply","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaiting","methodName":"setLimitDateToReply","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"messageService","methodName":"save","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByClosedAndRepliedToOffer","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointment","methodName":"getLimitDateToReply","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"slot","methodName":"setAvailable","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotService","methodName":"saveSlot","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"patientWaitingAppointment","methodName":"setRepliedToOffer","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment","methodName":"setSlotAccepted","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaiting","methodName":"getPatientWaitingAppointmentId","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaiting","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaiting","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"doctor","methodName":"getSex","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getSex()","methodName":"equalsIgnoreCase","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor","methodName":"getTitleAndName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getSpeciality()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Doctor"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.scheduling.annotation.Scheduled","org.springframework.stereotype.Component","pt.iscte.hospital.entities","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.objects.utils.Calendar","pt.iscte.hospital.services.MessageService","pt.iscte.hospital.services.SlotService","pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService","java.time.LocalDate","java.time.LocalDateTime","java.time.LocalTime","java.util.List"]},"pt.iscte.hospital.services.SpecialityService":{"qualifiedName":"pt.iscte.hospital.services.SpecialityService","begin":1,"end":16,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Speciality"],"methods":{"addSpeciality":{"name":"addSpeciality","parametersDataType":["Speciality"],"returnDataType":["void"]},"findByName":{"name":"findByName","parametersDataType":["String"],"returnDataType":["Speciality"]},"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["Speciality"]}},"myMethods":{"addSpeciality":{"name":"addSpeciality","lineBegin":9,"lineEnd":9,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Speciality","variable":"speciality","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByName":{"name":"findByName","lineBegin":11,"lineEnd":11,"annotations":[],"returnDataType":["Speciality"],"identifier":[],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAll":{"name":"findAll","lineBegin":15,"lineEnd":15,"annotations":[],"returnDataType":["List\u003cSpeciality\u003e"],"identifier":["List","Speciality"],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.data.domain.Sort","pt.iscte.hospital.entities.Speciality","java.util.List"]},"pt.iscte.hospital.exceptions.ImageTypeException":{"qualifiedName":"pt.iscte.hospital.exceptions.ImageTypeException","begin":1,"end":4,"isInterface":false,"annotations":[],"variables":[],"instance_variables":[],"dependencies":[],"methods":{},"myMethods":{},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["Throwable"],"imports":[]},"pt.iscte.hospital.services.user.DoctorServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.user.DoctorServiceImpl","begin":1,"end":207,"isInterface":false,"annotations":["@Service"],"variables":["DoctorRepository doctorRepository","SpecialityRepository specialityRepository","AppointmentRepository appointmentRepository","PatientWaitingAppointmentRepository patientWaitingAppointmentRepository","DoctorWaitingPatientRepository doctorWaitingPatientRepository","InvoiceService invoiceService","MessageService messageService","DoctorWaitingPatient doctorWaitingPatient","LocalDateTime dataToday","Doctor doctor","Patient patient","PatientWaitingAppointment patientWaitingAppointment","Message message","Speciality speciality","Speciality speciality","List\u003cDoctor\u003e doctors","Speciality speciality","List\u003cDoctor\u003e doctors","List\u003cDoctor\u003e result","Doctor doctor","Doctor doctor","Patient patient","Slot slot","String artigo","String drName","String especialidade","String data","String horas","String messageStr"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"DoctorRepository","variable":"doctorRepository","lineBegin":27,"lineEnd":27},{"annotations":[],"modifier":"private ","identifier":[],"type":"SpecialityRepository","variable":"specialityRepository","lineBegin":28,"lineEnd":28},{"annotations":[],"modifier":"private ","identifier":[],"type":"AppointmentRepository","variable":"appointmentRepository","lineBegin":29,"lineEnd":29},{"annotations":[],"modifier":"private ","identifier":[],"type":"PatientWaitingAppointmentRepository","variable":"patientWaitingAppointmentRepository","lineBegin":30,"lineEnd":30},{"annotations":[],"modifier":"private ","identifier":[],"type":"DoctorWaitingPatientRepository","variable":"doctorWaitingPatientRepository","lineBegin":31,"lineEnd":31},{"annotations":[],"modifier":"private ","identifier":[],"type":"InvoiceService","variable":"invoiceService","lineBegin":32,"lineEnd":32},{"annotations":[],"modifier":"private ","identifier":[],"type":"MessageService","variable":"messageService","lineBegin":33,"lineEnd":33}],"dependencies":["pt.iscte.hospital.repositories.user.DoctorRepository","pt.iscte.hospital.repositories.SpecialityRepository","pt.iscte.hospital.repositories.AppointmentRepository","pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository","pt.iscte.hospital.repositories.waiting.DoctorWaitingPatientRepository","pt.iscte.hospital.services.invoice.InvoiceService","pt.iscte.hospital.services.MessageService","pt.iscte.hospital.entities.waiting.DoctorWaitingPatient","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor"],"methods":{"desmarcarConsultaByDoctor":{"name":"desmarcarConsultaByDoctor","parametersDataType":["Appointment"],"returnDataType":["void"]},"findAllByFirstAndLastNameAndSpeciality":{"name":"findAllByFirstAndLastNameAndSpeciality","parametersDataType":["String","String"],"returnDataType":["Doctor"]},"marcarFalta":{"name":"marcarFalta","parametersDataType":["Appointment"],"returnDataType":["void"]},"findAllByNameContainingIgnoreCase":{"name":"findAllByNameContainingIgnoreCase","parametersDataType":["String"],"returnDataType":["Doctor"]},"removerFalta":{"name":"removerFalta","parametersDataType":["Appointment"],"returnDataType":["void"]},"findAllBySpecialityOrderByNameAsc":{"name":"findAllBySpecialityOrderByNameAsc","parametersDataType":["Speciality"],"returnDataType":["Doctor"]},"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["Doctor"]},"findAllBySpeciality":{"name":"findAllBySpeciality","parametersDataType":["String"],"returnDataType":["Doctor"]},"startAppointment":{"name":"startAppointment","parametersDataType":["Appointment"],"returnDataType":["void"]},"findAllByFirstAndLastName":{"name":"findAllByFirstAndLastName","parametersDataType":["String"],"returnDataType":["Doctor"]},"mensagemCancelarConsultaListaEspera":{"name":"mensagemCancelarConsultaListaEspera","parametersDataType":["Appointment"],"returnDataType":["Message"]},"filterByFirstAndLastName":{"name":"filterByFirstAndLastName","parametersDataType":["String","Doctor"],"returnDataType":["Doctor"]},"chamarUtente":{"name":"chamarUtente","parametersDataType":["Appointment"],"returnDataType":["void"]},"endAppointment":{"name":"endAppointment","parametersDataType":["Appointment"],"returnDataType":["void"]},"findByUserId":{"name":"findByUserId","parametersDataType":["Long"],"returnDataType":["Doctor"]},"findAllByNameContainingIgnoreCaseAndSpeciality":{"name":"findAllByNameContainingIgnoreCaseAndSpeciality","parametersDataType":["String","String"],"returnDataType":["Doctor"]}},"myMethods":{"desmarcarConsultaByDoctor":{"name":"desmarcarConsultaByDoctor","lineBegin":97,"lineEnd":114,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[{"type":"LocalDateTime","variable":"dataToday","qualifedType":""},{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"Patient","variable":"patient","qualifedType":""},{"type":"PatientWaitingAppointment","variable":"patientWaitingAppointment","qualifedType":""},{"type":"Message","variable":"message","qualifedType":""}],"body":"{\n    LocalDateTime dataToday \u003d LocalDateTime.now();\n    Doctor doctor \u003d appointment.getDoctor();\n    Patient patient \u003d appointment.getPatient();\n    appointment.setAppointmentStatus(AppointmentState.DESMARCADA_PELO_MEDICO.getStateNr());\n    appointmentRepository.save(appointment);\n    // Enviar utente para lista de espera de consulta\n    PatientWaitingAppointment patientWaitingAppointment \u003d new PatientWaitingAppointment(dataToday, doctor, patient);\n    patientWaitingAppointmentRepository.save(patientWaitingAppointment);\n    // Enviar mensagem ao utente que a consulta foi cancelada e que este foi colocado em lista de espera\n    Message message \u003d mensagemCancelarConsultaListaEspera(appointment);\n    messageService.save(message);\n}","methodInvocations":[{"scopeName":"appointment","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"patientWaitingAppointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"},{"scopeName":"messageService","methodName":"save","targetClassName":"pt.iscte.hospital.services.MessageService"}]},"findAllByFirstAndLastNameAndSpeciality":{"name":"findAllByFirstAndLastNameAndSpeciality","lineBegin":159,"lineEnd":164,"annotations":["@Override"],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[{"type":"Speciality","variable":"speciality","qualifedType":""},{"type":"List\u003cDoctor\u003e","variable":"doctors","qualifedType":"pt.iscte.hospital.entities.Doctor"}],"body":"{\n    Speciality speciality \u003d specialityRepository.findByName(specialityName);\n    List\u003cDoctor\u003e doctors \u003d doctorRepository.findAllByNameContainingIgnoreCaseAndSpeciality(name, speciality);\n    return filterByFirstAndLastName(name, doctors);\n}","methodInvocations":[{"scopeName":"specialityRepository","methodName":"findByName","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"},{"scopeName":"doctorRepository","methodName":"findAllByNameContainingIgnoreCaseAndSpeciality","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"}]},"marcarFalta":{"name":"marcarFalta","lineBegin":84,"lineEnd":88,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[],"body":"{\n    appointment.setAppointmentStatus(AppointmentState.NAO_REALIZADA.getStateNr());\n    appointmentRepository.save(appointment);\n}","methodInvocations":[{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllByNameContainingIgnoreCase":{"name":"findAllByNameContainingIgnoreCase","lineBegin":142,"lineEnd":145,"annotations":["@Override"],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"{\n    return doctorRepository.findAllByNameContainingIgnoreCase(name);\n}","methodInvocations":[{"scopeName":"doctorRepository","methodName":"findAllByNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"}]},"removerFalta":{"name":"removerFalta","lineBegin":90,"lineEnd":95,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[],"body":"{\n    appointment.setAppointmentStatus(AppointmentState.EM_CURSO.getStateNr());\n    appointment.setTimeBegin(LocalTime.now());\n    appointmentRepository.save(appointment);\n}","methodInvocations":[{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setTimeBegin","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllBySpecialityOrderByNameAsc":{"name":"findAllBySpecialityOrderByNameAsc","lineBegin":137,"lineEnd":140,"annotations":["@Override"],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"Speciality","variable":"speciality","qualifedType":""}],"variables":[],"body":"{\n    return doctorRepository.findAllBySpecialityOrderByNameAsc(speciality);\n}","methodInvocations":[{"scopeName":"doctorRepository","methodName":"findAllBySpecialityOrderByNameAsc","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"}]},"findAll":{"name":"findAll","lineBegin":126,"lineEnd":129,"annotations":["@Override"],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[],"variables":[],"body":"{\n    return doctorRepository.findAll();\n}","methodInvocations":[{"scopeName":"doctorRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"}]},"findAllBySpeciality":{"name":"findAllBySpeciality","lineBegin":131,"lineEnd":135,"annotations":["@Override"],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[{"type":"Speciality","variable":"speciality","qualifedType":""}],"body":"{\n    Speciality speciality \u003d specialityRepository.findByName(specialityName);\n    return doctorRepository.findAllBySpeciality(speciality);\n}","methodInvocations":[{"scopeName":"specialityRepository","methodName":"findByName","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"},{"scopeName":"doctorRepository","methodName":"findAllBySpeciality","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"}]},"startAppointment":{"name":"startAppointment","lineBegin":67,"lineEnd":73,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[],"body":"{\n    appointment.setAppointmentStatus(AppointmentState.EM_CURSO.getStateNr());\n    appointment.setDate(LocalDate.now());\n    appointment.setTimeBegin(LocalTime.now());\n    appointmentRepository.save(appointment);\n}","methodInvocations":[{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setDate","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setTimeBegin","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllByFirstAndLastName":{"name":"findAllByFirstAndLastName","lineBegin":153,"lineEnd":157,"annotations":["@Override"],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[{"type":"List\u003cDoctor\u003e","variable":"doctors","qualifedType":"pt.iscte.hospital.entities.Doctor"}],"body":"{\n    List\u003cDoctor\u003e doctors \u003d doctorRepository.findAll();\n    return filterByFirstAndLastName(name, doctors);\n}","methodInvocations":[{"scopeName":"doctorRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"}]},"mensagemCancelarConsultaListaEspera":{"name":"mensagemCancelarConsultaListaEspera","lineBegin":176,"lineEnd":205,"annotations":[],"returnDataType":["Message"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[{"type":"Doctor","variable":"doctor","qualifedType":""},{"type":"Patient","variable":"patient","qualifedType":""},{"type":"Slot","variable":"slot","qualifedType":""},{"type":"String","variable":"artigo","qualifedType":""},{"type":"String","variable":"drName","qualifedType":""},{"type":"String","variable":"especialidade","qualifedType":""},{"type":"String","variable":"data","qualifedType":""},{"type":"String","variable":"horas","qualifedType":""},{"type":"String","variable":"messageStr","qualifedType":""}],"body":"{\n    Doctor doctor \u003d appointment.getDoctor();\n    Patient patient \u003d appointment.getPatient();\n    Slot slot \u003d appointment.getSlot();\n    String artigo \u003d \"\";\n    if (doctor.getSex().equalsIgnoreCase(\"masculino\")) {\n        artigo \u003d \"o\";\n    } else {\n        artigo \u003d \"a\";\n    }\n    String drName \u003d doctor.getTitleAndName() + \" \" + doctor.getFirstAndLastName();\n    String especialidade \u003d doctor.getSpeciality().getName();\n    String data \u003d slot.getDate().format(Calendar.FORMATTER);\n    String horas \u003d slot.getTimeBegin().format(Calendar.TIME_FORMATTER);\n    String messageStr \u003d String.format(\"A sua consulta com %s %s, %s, para dia data %s às %s horas foi desmarcada. \" + \"Encontra-se neste momento em lista de espera\", artigo, drName, especialidade, data, horas);\n    return new Message(\"Desmarcação de consulta\", messageStr, patient);\n}","methodInvocations":[{"scopeName":"appointment","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"doctor","methodName":"getSex","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getSex()","methodName":"equalsIgnoreCase","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor","methodName":"getTitleAndName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getSpeciality()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot.getDate()","methodName":"format","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot.getTimeBegin()","methodName":"format","targetClassName":"pt.iscte.hospital.entities.Slot"}]},"filterByFirstAndLastName":{"name":"filterByFirstAndLastName","lineBegin":166,"lineEnd":174,"annotations":[],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""},{"type":"List\u003cDoctor\u003e","variable":"doctors","qualifedType":""}],"variables":[{"type":"List\u003cDoctor\u003e","variable":"result","qualifedType":"pt.iscte.hospital.entities.Doctor"},{"type":"Doctor","variable":"doctor","qualifedType":""}],"body":"{\n    List\u003cDoctor\u003e result \u003d new ArrayList\u003c\u003e();\n    for (Doctor doctor : doctors) {\n        if (doctor.getFirstAndLastName().toLowerCase().contains(name.toLowerCase())) {\n            result.add(doctor);\n        }\n    }\n    return result;\n}","methodInvocations":[{"scopeName":"doctor","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getFirstAndLastName()","methodName":"toLowerCase","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getFirstAndLastName().toLowerCase()","methodName":"contains","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"result","methodName":"add","targetClassName":"pt.iscte.hospital.entities.Doctor"}]},"chamarUtente":{"name":"chamarUtente","lineBegin":53,"lineEnd":65,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[{"type":"DoctorWaitingPatient","variable":"doctorWaitingPatient","qualifedType":""}],"body":"{\n    // Coloca ou actualiza chamada na base de dados\n    DoctorWaitingPatient doctorWaitingPatient \u003d appointment.getDoctorWaitingPatient();\n    if (doctorWaitingPatient \u003d\u003d null) {\n        doctorWaitingPatient \u003d new DoctorWaitingPatient(appointment);\n        appointment.setDoctorWaitingPatient(doctorWaitingPatient);\n    }\n    doctorWaitingPatient.setTimeLatestCall(LocalTime.now());\n    doctorWaitingPatientRepository.save(doctorWaitingPatient);\n}","methodInvocations":[{"scopeName":"appointment","methodName":"getDoctorWaitingPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setDoctorWaitingPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"doctorWaitingPatient","methodName":"setTimeLatestCall","targetClassName":"pt.iscte.hospital.entities.waiting.DoctorWaitingPatient"},{"scopeName":"doctorWaitingPatientRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.waiting.DoctorWaitingPatientRepository"}]},"endAppointment":{"name":"endAppointment","lineBegin":75,"lineEnd":82,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[],"body":"{\n    appointment.setAppointmentStatus(AppointmentState.REALIZADA.getStateNr());\n    appointment.setTimeEnd(LocalTime.now());\n    appointmentRepository.save(appointment);\n    invoiceService.createInvoice(appointment);\n}","methodInvocations":[{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setTimeEnd","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"invoiceService","methodName":"createInvoice","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceService"}]},"findByUserId":{"name":"findByUserId","lineBegin":116,"lineEnd":119,"annotations":["@Override"],"returnDataType":["Doctor"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"doctorId","qualifedType":""}],"variables":[],"body":"{\n    return doctorRepository.findByUserId(doctorId);\n}","methodInvocations":[{"scopeName":"doctorRepository","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"}]},"findAllByNameContainingIgnoreCaseAndSpeciality":{"name":"findAllByNameContainingIgnoreCaseAndSpeciality","lineBegin":147,"lineEnd":151,"annotations":["@Override"],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[{"type":"Speciality","variable":"speciality","qualifedType":""}],"body":"{\n    Speciality speciality \u003d specialityRepository.findByName(specialityName);\n    return doctorRepository.findAllByNameContainingIgnoreCaseAndSpeciality(name, speciality);\n}","methodInvocations":[{"scopeName":"specialityRepository","methodName":"findByName","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"},{"scopeName":"doctorRepository","methodName":"findAllByNameContainingIgnoreCaseAndSpeciality","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"}]}},"methodInvocations":[{"scopeName":"appointment","methodName":"getDoctorWaitingPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setDoctorWaitingPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"doctorWaitingPatient","methodName":"setTimeLatestCall","targetClassName":"pt.iscte.hospital.entities.waiting.DoctorWaitingPatient"},{"scopeName":"doctorWaitingPatientRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.waiting.DoctorWaitingPatientRepository"},{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setDate","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setTimeBegin","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setTimeEnd","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"invoiceService","methodName":"createInvoice","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceService"},{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setTimeBegin","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointment","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"patientWaitingAppointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository"},{"scopeName":"messageService","methodName":"save","targetClassName":"pt.iscte.hospital.services.MessageService"},{"scopeName":"doctorRepository","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"},{"scopeName":"doctorRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"},{"scopeName":"doctorRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"},{"scopeName":"specialityRepository","methodName":"findByName","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"},{"scopeName":"doctorRepository","methodName":"findAllBySpeciality","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"},{"scopeName":"doctorRepository","methodName":"findAllBySpecialityOrderByNameAsc","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"},{"scopeName":"doctorRepository","methodName":"findAllByNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"},{"scopeName":"specialityRepository","methodName":"findByName","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"},{"scopeName":"doctorRepository","methodName":"findAllByNameContainingIgnoreCaseAndSpeciality","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"},{"scopeName":"doctorRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"},{"scopeName":"specialityRepository","methodName":"findByName","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"},{"scopeName":"doctorRepository","methodName":"findAllByNameContainingIgnoreCaseAndSpeciality","targetClassName":"pt.iscte.hospital.repositories.user.DoctorRepository"},{"scopeName":"doctor","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getFirstAndLastName()","methodName":"toLowerCase","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getFirstAndLastName().toLowerCase()","methodName":"contains","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"doctor","methodName":"getSex","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getSex()","methodName":"equalsIgnoreCase","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor","methodName":"getTitleAndName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"doctor.getSpeciality()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot.getDate()","methodName":"format","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot.getTimeBegin()","methodName":"format","targetClassName":"pt.iscte.hospital.entities.Slot"}],"implementedTypes":["pt.iscte.hospital.services.user.DoctorService","DoctorService"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.data.domain.Sort","org.springframework.stereotype.Service","pt.iscte.hospital.entities","pt.iscte.hospital.entities.states.AppointmentState","pt.iscte.hospital.entities.waiting.DoctorWaitingPatient","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.objects.utils.Calendar","pt.iscte.hospital.repositories.AppointmentRepository","pt.iscte.hospital.repositories.user.DoctorRepository","pt.iscte.hospital.repositories.SpecialityRepository","pt.iscte.hospital.repositories.waiting.DoctorWaitingPatientRepository","pt.iscte.hospital.repositories.waiting.PatientWaitingAppointmentRepository","pt.iscte.hospital.services.MessageService","pt.iscte.hospital.services.invoice.InvoiceService","java.time.LocalDate","java.time.LocalDateTime","java.time.LocalTime","java.util.ArrayList","java.util.List"]},"pt.iscte.hospital.services.AppointmentServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.AppointmentServiceImpl","begin":1,"end":244,"isInterface":false,"annotations":["@Service"],"variables":["AppointmentRepository appointmentRepository"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private","identifier":[],"type":"AppointmentRepository","variable":"appointmentRepository","lineBegin":15,"lineEnd":16}],"dependencies":["pt.iscte.hospital.repositories.AppointmentRepository","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Invoice"],"methods":{"findAllByPatientAndAppointmentStatus":{"name":"findAllByPatientAndAppointmentStatus","parametersDataType":["Patient","Integer"],"returnDataType":["Appointment"]},"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc":{"name":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc","parametersDataType":["Long","LocalDate","int","boolean"],"returnDataType":["Appointment"]},"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase":{"name":"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase","parametersDataType":["LocalDate","Integer","String","String","String"],"returnDataType":["Appointment"]},"findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","parametersDataType":["Long","Integer","LocalDate","String","String"],"returnDataType":["Appointment"]},"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["Appointment"]},"findAllBySlotDoctorUserId":{"name":"findAllBySlotDoctorUserId","parametersDataType":["Long"],"returnDataType":["Appointment"]},"countBySlotDateAndAppointmentStatusAndHasChecked":{"name":"countBySlotDateAndAppointmentStatusAndHasChecked","parametersDataType":["LocalDate","int","boolean"],"returnDataType":["long"]},"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus":{"name":"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus","parametersDataType":["Long","Long","int"],"returnDataType":["long"]},"findAllBySlotDateAndAppointmentStatus":{"name":"findAllBySlotDateAndAppointmentStatus","parametersDataType":["LocalDate","Integer"],"returnDataType":["Appointment"]},"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc":{"name":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc","parametersDataType":["Long","LocalDate","int"],"returnDataType":["Appointment"]},"findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId":{"name":"findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId","parametersDataType":["String","Long"],"returnDataType":["Appointment"]},"findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","parametersDataType":["String","String","String"],"returnDataType":["Appointment"]},"findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked":{"name":"findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked","parametersDataType":["Long","LocalDate","Integer","boolean"],"returnDataType":["Appointment"]},"findAllBySlotDoctorUserIdAndAppointmentStatus":{"name":"findAllBySlotDoctorUserIdAndAppointmentStatus","parametersDataType":["Long","int"],"returnDataType":["Appointment"]},"findAllByAppointmentStatus":{"name":"findAllByAppointmentStatus","parametersDataType":["Integer"],"returnDataType":["Appointment"]},"findAllByPatientUserIdAndSlotDateAndAppointmentStatus":{"name":"findAllByPatientUserIdAndSlotDateAndAppointmentStatus","parametersDataType":["Long","LocalDate","Integer"],"returnDataType":["Appointment"]},"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked":{"name":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked","parametersDataType":["long","LocalDate","int","boolean"],"returnDataType":["long"]},"findByAppointmentId":{"name":"findByAppointmentId","parametersDataType":["Long"],"returnDataType":["Appointment"]},"findAllByPatientUserId":{"name":"findAllByPatientUserId","parametersDataType":["Long"],"returnDataType":["Appointment"]},"findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId":{"name":"findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId","parametersDataType":["LocalDate","String","Long"],"returnDataType":["Appointment"]},"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus":{"name":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus","parametersDataType":["long","LocalDate","int"],"returnDataType":["long"]},"findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","parametersDataType":["LocalDate","String","String","String"],"returnDataType":["Appointment"]},"findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","parametersDataType":["Long","Integer","String","String"],"returnDataType":["Appointment"]},"saveAppointment":{"name":"saveAppointment","parametersDataType":["Appointment"],"returnDataType":["void"]},"findAllByAppointmentStatusAndInvoice":{"name":"findAllByAppointmentStatusAndInvoice","parametersDataType":["int","Invoice"],"returnDataType":["Appointment"]},"countBySlotDateAndAppointmentStatus":{"name":"countBySlotDateAndAppointmentStatus","parametersDataType":["LocalDate","int"],"returnDataType":["long"]}},"myMethods":{"findAllByPatientAndAppointmentStatus":{"name":"findAllByPatientAndAppointmentStatus","lineBegin":40,"lineEnd":43,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Patient","variable":"patient","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllByPatientAndAppointmentStatus(patient, appointmentStatus);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllByPatientAndAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc":{"name":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc","lineBegin":155,"lineEnd":166,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""},{"type":"boolean","variable":"hasChecked","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc(userId, date, appointmentState, hasChecked);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase":{"name":"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase","lineBegin":139,"lineEnd":152,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase(date, appointmentStatus, specialityName, doctorName, patientName);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","lineBegin":45,"lineEnd":56,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase(userId, appointmentStatus, date, doctorName, specialityName);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAll":{"name":"findAll","lineBegin":95,"lineEnd":98,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[],"variables":[],"body":"{\n    return appointmentRepository.findAll();\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllBySlotDoctorUserId":{"name":"findAllBySlotDoctorUserId","lineBegin":100,"lineEnd":103,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllBySlotDoctorUserId(userId);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllBySlotDoctorUserId","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"countBySlotDateAndAppointmentStatusAndHasChecked":{"name":"countBySlotDateAndAppointmentStatusAndHasChecked","lineBegin":193,"lineEnd":202,"annotations":["@Override"],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""},{"type":"boolean","variable":"hasChecked","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.countBySlotDateAndAppointmentStatusAndHasChecked(date, appointmentState, hasChecked);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"countBySlotDateAndAppointmentStatusAndHasChecked","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus":{"name":"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus","lineBegin":205,"lineEnd":214,"annotations":["@Override"],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"doctorId","qualifedType":""},{"type":"Long","variable":"patientId","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus(doctorId, patientId, appointmentState);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllBySlotDateAndAppointmentStatus":{"name":"findAllBySlotDateAndAppointmentStatus","lineBegin":89,"lineEnd":93,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllBySlotDateAndAppointmentStatus(date, appointmentStatus);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllBySlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc":{"name":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc","lineBegin":168,"lineEnd":177,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc(userId, date, appointmentState);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId":{"name":"findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId","lineBegin":105,"lineEnd":108,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"String","variable":"patientName","qualifedType":""},{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId(patientName, userId);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","lineBegin":130,"lineEnd":137,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase(doctorName, patientName, specialityName);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked":{"name":"findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked","lineBegin":69,"lineEnd":78,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""},{"type":"boolean","variable":"hasChecked","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked(userId, date, appointmentStatus, hasChecked);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllBySlotDoctorUserIdAndAppointmentStatus":{"name":"findAllBySlotDoctorUserIdAndAppointmentStatus","lineBegin":178,"lineEnd":181,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"doctorId","qualifedType":""},{"type":"int","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllBySlotDoctorUserIdAndAppointmentStatus(doctorId, appointmentStatus);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllBySlotDoctorUserIdAndAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllByAppointmentStatus":{"name":"findAllByAppointmentStatus","lineBegin":30,"lineEnd":33,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Integer","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllByAppointmentStatus(appointmentStatus);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllByAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllByPatientUserIdAndSlotDateAndAppointmentStatus":{"name":"findAllByPatientUserIdAndSlotDateAndAppointmentStatus","lineBegin":80,"lineEnd":87,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllByPatientUserIdAndSlotDateAndAppointmentStatus(userId, date, appointmentStatus);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllByPatientUserIdAndSlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked":{"name":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked","lineBegin":227,"lineEnd":237,"annotations":[],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"long","variable":"doctorId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""},{"type":"boolean","variable":"hasChecked","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked(doctorId, date, appointmentState, hasChecked);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findByAppointmentId":{"name":"findByAppointmentId","lineBegin":25,"lineEnd":28,"annotations":["@Override"],"returnDataType":["Appointment"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findByAppointmentId(appointmentId);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllByPatientUserId":{"name":"findAllByPatientUserId","lineBegin":35,"lineEnd":38,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllByPatientUserId(userId);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllByPatientUserId","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId":{"name":"findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId","lineBegin":110,"lineEnd":117,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""},{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId(date, patientName, userId);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus":{"name":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus","lineBegin":217,"lineEnd":225,"annotations":[],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"long","variable":"doctorId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus(doctorId, date, appointmentState);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","lineBegin":119,"lineEnd":128,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase(date, doctorName, patientName, specialityName);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","lineBegin":58,"lineEnd":67,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase(userId, appointmentStatus, doctorName, specialityName);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"saveAppointment":{"name":"saveAppointment","lineBegin":20,"lineEnd":23,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[],"body":"{\n    appointmentRepository.save(appointment);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"findAllByAppointmentStatusAndInvoice":{"name":"findAllByAppointmentStatusAndInvoice","lineBegin":240,"lineEnd":243,"annotations":["@Override"],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"int","variable":"appointmentStatus","qualifedType":""},{"type":"Invoice","variable":"invoice","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.findAllByAppointmentStatusAndInvoice(appointmentStatus, invoice);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllByAppointmentStatusAndInvoice","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"countBySlotDateAndAppointmentStatus":{"name":"countBySlotDateAndAppointmentStatus","lineBegin":184,"lineEnd":191,"annotations":["@Override"],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""}],"variables":[],"body":"{\n    return appointmentRepository.countBySlotDateAndAppointmentStatus(date, appointmentState);\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"countBySlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]}},"methodInvocations":[{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllByAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllByPatientUserId","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllByPatientAndAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllByPatientUserIdAndSlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllBySlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllBySlotDoctorUserId","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllBySlotDoctorUserIdAndAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"countBySlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"countBySlotDateAndAppointmentStatusAndHasChecked","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllByAppointmentStatusAndInvoice","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}],"implementedTypes":["pt.iscte.hospital.services.AppointmentService","AppointmentService"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Service","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Invoice","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.repositories.AppointmentRepository","java.time.LocalDate","java.util.List"]},"pt.iscte.hospital.entities.Employee":{"qualifiedName":"pt.iscte.hospital.entities.Employee","begin":1,"end":52,"isInterface":false,"annotations":["@Entity","@PrimaryKeyJoinColumn(name \u003d \"employee_id\")"],"variables":["List\u003cGrantedAuthority\u003e roles"],"instance_variables":[],"dependencies":[],"methods":{"toString":{"name":"toString","parametersDataType":[],"returnDataType":["String"]},"getAuthorities":{"name":"getAuthorities","parametersDataType":[],"returnDataType":["GrantedAuthority"]}},"myMethods":{"toString":{"name":"toString","lineBegin":46,"lineEnd":51,"annotations":["@Override"],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return \"Employee{\" + super.toString() + \u0027}\u0027;\n}","methodInvocations":[{"scopeName":"super","methodName":"toString","targetClassName":"pt.iscte.hospital.entities.User"}]},"getAuthorities":{"name":"getAuthorities","lineBegin":38,"lineEnd":43,"annotations":["@Override"],"returnDataType":["List\u003cGrantedAuthority\u003e"],"identifier":["List","GrantedAuthority"],"parametersDataType":[],"variables":[],"body":"{\n    List\u003cGrantedAuthority\u003e roles \u003d new ArrayList\u003c\u003e();\n    roles.add(new SimpleGrantedAuthority(Role.ROLE_EMPLOYEE.name()));\n    return roles;\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"super","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"super","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"super","methodName":"toString","targetClassName":"pt.iscte.hospital.entities.User"}],"implementedTypes":[],"extendedTypes":["User","pt.iscte.hospital.entities.User"],"imports":["org.springframework.security.core.GrantedAuthority","org.springframework.security.core.authority.SimpleGrantedAuthority","pt.iscte.hospital.security.Role","javax.persistence","java.time.LocalDate","java.util.ArrayList","java.util.List"]},"pt.iscte.hospital.services.validation.SlotValidationService":{"qualifiedName":"pt.iscte.hospital.services.validation.SlotValidationService","begin":1,"end":12,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.services.validation.SlotValidationService","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.services.validation.SlotValidationService","pt.iscte.hospital.services.validation.SlotValidationService"],"methods":{"setSlot":{"name":"setSlot","parametersDataType":["Slot"],"returnDataType":["SlotValidationService"]},"isValid":{"name":"isValid","parametersDataType":[],"returnDataType":["boolean"]},"clear":{"name":"clear","parametersDataType":[],"returnDataType":["SlotValidationService"]},"validSlot":{"name":"validSlot","parametersDataType":[],"returnDataType":["SlotValidationService"]},"getErrorModelMap":{"name":"getErrorModelMap","parametersDataType":[],"returnDataType":["ModelMap"]}},"myMethods":{"setSlot":{"name":"setSlot","lineBegin":7,"lineEnd":7,"annotations":[],"returnDataType":["SlotValidationService"],"identifier":[],"parametersDataType":[{"type":"Slot","variable":"slot","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"isValid":{"name":"isValid","lineBegin":9,"lineEnd":9,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"clear":{"name":"clear","lineBegin":11,"lineEnd":11,"annotations":[],"returnDataType":["SlotValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validSlot":{"name":"validSlot","lineBegin":8,"lineEnd":8,"annotations":[],"returnDataType":["SlotValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"getErrorModelMap":{"name":"getErrorModelMap","lineBegin":10,"lineEnd":10,"annotations":[],"returnDataType":["ModelMap"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.ui.ModelMap","pt.iscte.hospital.entities.Slot"]},"pt.iscte.hospital.services.ImageUploadService":{"qualifiedName":"pt.iscte.hospital.services.ImageUploadService","begin":1,"end":36,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":[],"methods":{"getFileExtension":{"name":"getFileExtension","parametersDataType":["String"],"returnDataType":["String"]},"getImageMaxSize":{"name":"getImageMaxSize","parametersDataType":[],"returnDataType":["long"]},"uploadImage":{"name":"uploadImage","parametersDataType":["MultipartFile","String"],"returnDataType":["String"]}},"myMethods":{"getFileExtension":{"name":"getFileExtension","lineBegin":35,"lineEnd":35,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"String","variable":"imageType","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"getImageMaxSize":{"name":"getImageMaxSize","lineBegin":26,"lineEnd":26,"annotations":[],"returnDataType":["long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"uploadImage":{"name":"uploadImage","lineBegin":20,"lineEnd":21,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"MultipartFile","variable":"imageFile","qualifedType":""},{"type":"String","variable":"username","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.web.multipart.MultipartFile","pt.iscte.hospital.exceptions.ImageSizeException","pt.iscte.hospital.exceptions.ImageTypeException","java.io.IOException"]},"pt.iscte.hospital.services.validation.SlotValidationServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.validation.SlotValidationServiceImpl","begin":1,"end":56,"isInterface":false,"annotations":["@Service"],"variables":["SlotRepository slotRepository","Slot slot","boolean isValid","ModelMap errorModelMap","Slot extraSlot"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private","identifier":[],"type":"SlotRepository","variable":"slotRepository","lineBegin":13,"lineEnd":14},{"annotations":[],"modifier":"private ","identifier":[],"type":"Slot","variable":"slot","lineBegin":16,"lineEnd":16},{"annotations":[],"modifier":"private ","identifier":[],"type":"boolean","variable":"isValid","lineBegin":17,"lineEnd":17},{"annotations":[],"modifier":"private ","identifier":[],"type":"ModelMap","variable":"errorModelMap","lineBegin":18,"lineEnd":18}],"dependencies":["pt.iscte.hospital.repositories.SlotRepository","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.services.validation.SlotValidationService","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.services.validation.SlotValidationService","pt.iscte.hospital.services.validation.SlotValidationService"],"methods":{"setSlot":{"name":"setSlot","parametersDataType":["Slot"],"returnDataType":["SlotValidationService"]},"isValid":{"name":"isValid","parametersDataType":[],"returnDataType":["boolean"]},"clear":{"name":"clear","parametersDataType":[],"returnDataType":["SlotValidationService"]},"validSlot":{"name":"validSlot","parametersDataType":[],"returnDataType":["SlotValidationService"]},"getErrorModelMap":{"name":"getErrorModelMap","parametersDataType":[],"returnDataType":["ModelMap"]}},"myMethods":{"setSlot":{"name":"setSlot","lineBegin":24,"lineEnd":28,"annotations":["@Override"],"returnDataType":["SlotValidationService"],"identifier":[],"parametersDataType":[{"type":"Slot","variable":"slot","qualifedType":""}],"variables":[],"body":"{\n    this.slot \u003d slot;\n    return this;\n}","methodInvocations":[]},"isValid":{"name":"isValid","lineBegin":39,"lineEnd":42,"annotations":["@Override"],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return isValid;\n}","methodInvocations":[]},"clear":{"name":"clear","lineBegin":49,"lineEnd":55,"annotations":["@Override"],"returnDataType":["SlotValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    errorModelMap \u003d new ModelMap();\n    slot \u003d null;\n    isValid \u003d true;\n    return this;\n}","methodInvocations":[]},"validSlot":{"name":"validSlot","lineBegin":29,"lineEnd":37,"annotations":["@Override"],"returnDataType":["SlotValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"Slot","variable":"extraSlot","qualifedType":""}],"body":"{\n    Slot extraSlot \u003d slotRepository.findByDoctorAndDateAndTimeBegin(slot.getDoctor(), slot.getDate(), slot.getTimeBegin());\n    if (extraSlot !\u003d null) {\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgSlot\", ErrorMessage.SLOT_DUPLICATED.getErrorMsg());\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"slot","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotRepository","methodName":"findByDoctorAndDateAndTimeBegin","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}]},"getErrorModelMap":{"name":"getErrorModelMap","lineBegin":44,"lineEnd":47,"annotations":["@Override"],"returnDataType":["ModelMap"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return errorModelMap;\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"slot","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slotRepository","methodName":"findByDoctorAndDateAndTimeBegin","targetClassName":"pt.iscte.hospital.repositories.SlotRepository"}],"implementedTypes":["SlotValidationService","pt.iscte.hospital.services.validation.SlotValidationService"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Service","org.springframework.ui.ModelMap","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.repositories.SlotRepository","pt.iscte.hospital.services.ErrorMessage"]},"pt.iscte.hospital.entities.Invoice":{"qualifiedName":"pt.iscte.hospital.entities.Invoice","begin":1,"end":113,"isInterface":false,"annotations":["@Entity","@Getter","@Setter","@ToString"],"variables":["long NR_DAYS_TO_PAY_INVOICE","Long invoiceId","String invoiceApiId","Appointment appointment","LocalDateTime dueDate","LocalDateTime issuedDate","LocalDateTime paidDate","double value","int invoiceState"],"instance_variables":[{"annotations":[],"modifier":"public ","identifier":[],"type":"long","variable":"NR_DAYS_TO_PAY_INVOICE","lineBegin":20,"lineEnd":20},{"annotations":["@Id","@GeneratedValue(strategy \u003d GenerationType.IDENTITY)"],"modifier":"private ","identifier":[],"type":"Long","variable":"invoiceId","lineBegin":22,"lineEnd":24},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"invoiceApiId","lineBegin":26,"lineEnd":26},{"annotations":["@OneToOne","@JoinColumn(name \u003d \"appointment_id\")"],"modifier":"private ","identifier":[],"type":"Appointment","variable":"appointment","lineBegin":28,"lineEnd":30},{"annotations":["@DateTimeFormat(iso \u003d DateTimeFormat.ISO.DATE)"],"modifier":"private ","identifier":[],"type":"LocalDateTime","variable":"dueDate","lineBegin":32,"lineEnd":33},{"annotations":["@DateTimeFormat(iso \u003d DateTimeFormat.ISO.DATE)"],"modifier":"private ","identifier":[],"type":"LocalDateTime","variable":"issuedDate","lineBegin":34,"lineEnd":35},{"annotations":["@DateTimeFormat(iso \u003d DateTimeFormat.ISO.DATE)"],"modifier":"private ","identifier":[],"type":"LocalDateTime","variable":"paidDate","lineBegin":36,"lineEnd":37},{"annotations":[],"modifier":"private ","identifier":[],"type":"double","variable":"value","lineBegin":39,"lineEnd":39},{"annotations":[],"modifier":"private ","identifier":[],"type":"int","variable":"invoiceState","lineBegin":40,"lineEnd":40}],"dependencies":["pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment"],"methods":{"getAppointment":{"name":"getAppointment","parametersDataType":[],"returnDataType":["Appointment"]},"getShortId":{"name":"getShortId","parametersDataType":[],"returnDataType":["String"]},"getDueDateStr":{"name":"getDueDateStr","parametersDataType":[],"returnDataType":["String"]},"getInvoiceId":{"name":"getInvoiceId","parametersDataType":[],"returnDataType":["Long"]},"getIssuedDateStr":{"name":"getIssuedDateStr","parametersDataType":[],"returnDataType":["String"]},"getInvoiceStateStr":{"name":"getInvoiceStateStr","parametersDataType":[],"returnDataType":["String"]},"setInvoiceState":{"name":"setInvoiceState","parametersDataType":["int"],"returnDataType":["void"]},"getValue":{"name":"getValue","parametersDataType":[],"returnDataType":["Double"]},"isPaid":{"name":"isPaid","parametersDataType":[],"returnDataType":["boolean"]},"setValue":{"name":"setValue","parametersDataType":["Double"],"returnDataType":["void"]},"getInvoiceState":{"name":"getInvoiceState","parametersDataType":[],"returnDataType":["int"]},"getInvoiceApiId":{"name":"getInvoiceApiId","parametersDataType":[],"returnDataType":["String"]},"getPaidDateStr":{"name":"getPaidDateStr","parametersDataType":[],"returnDataType":["String"]}},"myMethods":{"getAppointment":{"name":"getAppointment","lineBegin":65,"lineEnd":67,"annotations":[],"returnDataType":["Appointment"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return appointment;\n}","methodInvocations":[]},"getShortId":{"name":"getShortId","lineBegin":88,"lineEnd":90,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return invoiceApiId.split(\"-\")[0];\n}","methodInvocations":[]},"getDueDateStr":{"name":"getDueDateStr","lineBegin":100,"lineEnd":102,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return dueDate.format(Calendar.FORMATTER);\n}","methodInvocations":[]},"getInvoiceId":{"name":"getInvoiceId","lineBegin":81,"lineEnd":83,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return invoiceId;\n}","methodInvocations":[]},"getIssuedDateStr":{"name":"getIssuedDateStr","lineBegin":103,"lineEnd":105,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return issuedDate.format(Calendar.FORMATTER);\n}","methodInvocations":[]},"getInvoiceStateStr":{"name":"getInvoiceStateStr","lineBegin":92,"lineEnd":94,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return InvoiceState.searchState(invoiceState);\n}","methodInvocations":[]},"setInvoiceState":{"name":"setInvoiceState","lineBegin":96,"lineEnd":98,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"int","variable":"invoiceState","qualifedType":""}],"variables":[],"body":"{\n    this.invoiceState \u003d invoiceState;\n}","methodInvocations":[]},"getValue":{"name":"getValue","lineBegin":69,"lineEnd":71,"annotations":[],"returnDataType":["Double"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return value;\n}","methodInvocations":[]},"isPaid":{"name":"isPaid","lineBegin":110,"lineEnd":112,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return invoiceState \u003d\u003d InvoiceState.PAGA.getStateNr();\n}","methodInvocations":[]},"setValue":{"name":"setValue","lineBegin":73,"lineEnd":75,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Double","variable":"value","qualifedType":""}],"variables":[],"body":"{\n    this.value \u003d value;\n}","methodInvocations":[]},"getInvoiceState":{"name":"getInvoiceState","lineBegin":77,"lineEnd":79,"annotations":[],"returnDataType":["int"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return invoiceState;\n}","methodInvocations":[]},"getInvoiceApiId":{"name":"getInvoiceApiId","lineBegin":85,"lineEnd":86,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return invoiceApiId;\n}","methodInvocations":[]},"getPaidDateStr":{"name":"getPaidDateStr","lineBegin":106,"lineEnd":108,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return paidDate.format(Calendar.FORMATTER);\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"invoiceApi","methodName":"getId","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceApi"},{"scopeName":"invoiceApi","methodName":"getIssuedDate","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceApi"},{"scopeName":"invoiceApi","methodName":"getDueDate","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceApi"},{"scopeName":"invoiceApi","methodName":"getValue","targetClassName":"pt.iscte.hospital.services.invoice.InvoiceApi"}],"implementedTypes":[],"extendedTypes":[],"imports":["lombok.Getter","lombok.Setter","lombok.ToString","org.springframework.format.annotation.DateTimeFormat","pt.iscte.hospital.entities.states.InvoiceState","pt.iscte.hospital.objects.utils.Calendar","pt.iscte.hospital.services.invoice.InvoiceApi","javax.persistence","java.time.LocalDateTime"]},"pt.iscte.hospital.services.waiting.DoctorWaitingPatientService":{"qualifiedName":"pt.iscte.hospital.services.waiting.DoctorWaitingPatientService","begin":1,"end":10,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.waiting.DoctorWaitingPatient"],"methods":{"findAllByDate":{"name":"findAllByDate","parametersDataType":["LocalDate"],"returnDataType":["DoctorWaitingPatient"]}},"myMethods":{"findAllByDate":{"name":"findAllByDate","lineBegin":9,"lineEnd":9,"annotations":[],"returnDataType":["List\u003cDoctorWaitingPatient\u003e"],"identifier":["List","DoctorWaitingPatient"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["pt.iscte.hospital.entities.waiting.DoctorWaitingPatient","java.time.LocalDate","java.util.List"]},"pt.iscte.hospital.repositories.NationalityRepository":{"qualifiedName":"pt.iscte.hospital.repositories.NationalityRepository","begin":1,"end":10,"isInterface":true,"annotations":["@Repository"],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Nationality"],"methods":{"findByName":{"name":"findByName","parametersDataType":["String"],"returnDataType":["Nationality"]}},"myMethods":{"findByName":{"name":"findByName","lineBegin":9,"lineEnd":9,"annotations":[],"returnDataType":["Nationality"],"identifier":[],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["JpaRepository\u003cNationality, Long\u003e"],"imports":["org.springframework.data.jpa.repository.JpaRepository","org.springframework.stereotype.Repository","pt.iscte.hospital.entities.Nationality"]},"pt.iscte.hospital.services.user.PatientService":{"qualifiedName":"pt.iscte.hospital.services.user.PatientService","begin":1,"end":17,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient"],"methods":{"findByUsername":{"name":"findByUsername","parametersDataType":["String"],"returnDataType":["Patient"]},"findAllByNameContainingIgnoreCase":{"name":"findAllByNameContainingIgnoreCase","parametersDataType":["String"],"returnDataType":["Patient"]},"findByUserId":{"name":"findByUserId","parametersDataType":["Long"],"returnDataType":["Patient"]},"findAll":{"name":"findAll","parametersDataType":["Sort"],"returnDataType":["Patient"]},"findAllByFirstAndLastName":{"name":"findAllByFirstAndLastName","parametersDataType":["String"],"returnDataType":["Patient"]}},"myMethods":{"findByUsername":{"name":"findByUsername","lineBegin":10,"lineEnd":10,"annotations":[],"returnDataType":["Patient"],"identifier":[],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByNameContainingIgnoreCase":{"name":"findAllByNameContainingIgnoreCase","lineBegin":14,"lineEnd":14,"annotations":[],"returnDataType":["List\u003cPatient\u003e"],"identifier":["List","Patient"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByUserId":{"name":"findByUserId","lineBegin":12,"lineEnd":12,"annotations":[],"returnDataType":["Patient"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"patientId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAll":{"name":"findAll","lineBegin":8,"lineEnd":8,"annotations":[],"returnDataType":["List\u003cPatient\u003e"],"identifier":["List","Patient"],"parametersDataType":[{"type":"Sort","variable":"sort","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByFirstAndLastName":{"name":"findAllByFirstAndLastName","lineBegin":16,"lineEnd":16,"annotations":[],"returnDataType":["List\u003cPatient\u003e"],"identifier":["List","Patient"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.data.domain.Sort","pt.iscte.hospital.entities.Patient","java.util.List"]},"pt.iscte.hospital.services.user.UserServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.user.UserServiceImpl","begin":1,"end":106,"isInterface":false,"annotations":["@Service"],"variables":["IAuthenticationFacade authenticationFacade","UserRepository userRepository","String username","User user","BCryptPasswordEncoder encoder","User userLogged","User user","Role role","Role role","User user"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"IAuthenticationFacade","variable":"authenticationFacade","lineBegin":17,"lineEnd":18},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"UserRepository","variable":"userRepository","lineBegin":20,"lineEnd":21}],"dependencies":["pt.iscte.hospital.security.IAuthenticationFacade","pt.iscte.hospital.repositories.user.UserRepository","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User"],"methods":{"findUser":{"name":"findUser","parametersDataType":["String"],"returnDataType":["User"]},"getUserRole":{"name":"getUserRole","parametersDataType":["User"],"returnDataType":["Role"]},"currentUser":{"name":"currentUser","parametersDataType":[],"returnDataType":["User"]},"validateUser":{"name":"validateUser","parametersDataType":["String","String"],"returnDataType":["boolean"]},"getUserMainPage":{"name":"getUserMainPage","parametersDataType":["User"],"returnDataType":["String"]},"findByUsername":{"name":"findByUsername","parametersDataType":["String"],"returnDataType":["User"]},"addUser":{"name":"addUser","parametersDataType":["User"],"returnDataType":["void"]},"findByUserId":{"name":"findByUserId","parametersDataType":["Long"],"returnDataType":["User"]},"getAuthorities":{"name":"getAuthorities","parametersDataType":["String"],"returnDataType":["GrantedAuthority"]},"validateUserMail":{"name":"validateUserMail","parametersDataType":["String","String"],"returnDataType":["boolean"]}},"myMethods":{"findUser":{"name":"findUser","lineBegin":57,"lineEnd":60,"annotations":["@Override"],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""}],"variables":[],"body":"{\n    return userRepository.findByUsername(username);\n}","methodInvocations":[{"scopeName":"userRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"}]},"getUserRole":{"name":"getUserRole","lineBegin":79,"lineEnd":83,"annotations":["@Override"],"returnDataType":["Role"],"identifier":[],"parametersDataType":[{"type":"User","variable":"user","qualifedType":""}],"variables":[{"type":"Role","variable":"role","qualifedType":""}],"body":"{\n    Role role \u003d Enum.valueOf(Role.class, user.getAuthorities().get(0).getAuthority());\n    return role;\n}","methodInvocations":[{"scopeName":"user","methodName":"getAuthorities","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getAuthorities()","methodName":"get","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getAuthorities().get(0)","methodName":"getAuthority","targetClassName":"pt.iscte.hospital.entities.User"}]},"currentUser":{"name":"currentUser","lineBegin":27,"lineEnd":34,"annotations":["@Override"],"returnDataType":["User"],"identifier":[],"parametersDataType":[],"variables":[{"type":"String","variable":"username","qualifedType":""},{"type":"User","variable":"user","qualifedType":""}],"body":"{\n    String username \u003d authenticationFacade.getAuthentication().getName();\n    User user \u003d userRepository.findByUsername(username);\n    return user;\n}","methodInvocations":[{"scopeName":"authenticationFacade","methodName":"getAuthentication","targetClassName":"pt.iscte.hospital.security.IAuthenticationFacade"},{"scopeName":"authenticationFacade.getAuthentication()","methodName":"getName","targetClassName":"pt.iscte.hospital.security.IAuthenticationFacade"},{"scopeName":"userRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"}]},"validateUser":{"name":"validateUser","lineBegin":40,"lineEnd":50,"annotations":["@Override"],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""},{"type":"String","variable":"password","qualifedType":""}],"variables":[{"type":"BCryptPasswordEncoder","variable":"encoder","qualifedType":""},{"type":"User","variable":"userLogged","qualifedType":""}],"body":"{\n    BCryptPasswordEncoder encoder \u003d new BCryptPasswordEncoder();\n    User userLogged \u003d userRepository.findByUsername(username);\n    if (userLogged !\u003d null) {\n        if (encoder.matches(password, userLogged.getPassword())) {\n            return true;\n        }\n    }\n    return false;\n}","methodInvocations":[{"scopeName":"userRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"userLogged","methodName":"getPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"encoder","methodName":"matches","targetClassName":""}]},"getUserMainPage":{"name":"getUserMainPage","lineBegin":85,"lineEnd":92,"annotations":["@Override"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"User","variable":"user","qualifedType":""}],"variables":[{"type":"Role","variable":"role","qualifedType":""}],"body":"{\n    if (user \u003d\u003d null) {\n        return \"public/main\";\n    }\n    Role role \u003d getUserRole(user);\n    return role.getMainPage();\n}","methodInvocations":[]},"findByUsername":{"name":"findByUsername","lineBegin":69,"lineEnd":72,"annotations":["@Override"],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""}],"variables":[],"body":"{\n    return userRepository.findByUsername(username);\n}","methodInvocations":[{"scopeName":"userRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"}]},"addUser":{"name":"addUser","lineBegin":52,"lineEnd":55,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"User","variable":"user","qualifedType":""}],"variables":[],"body":"{\n    userRepository.save(user);\n}","methodInvocations":[{"scopeName":"userRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"}]},"findByUserId":{"name":"findByUserId","lineBegin":74,"lineEnd":77,"annotations":["@Override"],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"{\n    return userRepository.findByUserId(userId);\n}","methodInvocations":[{"scopeName":"userRepository","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"}]},"getAuthorities":{"name":"getAuthorities","lineBegin":62,"lineEnd":67,"annotations":["@Override"],"returnDataType":["List\u003cGrantedAuthority\u003e"],"identifier":["List","GrantedAuthority"],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""}],"variables":[{"type":"User","variable":"user","qualifedType":""}],"body":"{\n    User user \u003d userRepository.findByUsername(username);\n    return user.getAuthorities();\n}","methodInvocations":[{"scopeName":"userRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"user","methodName":"getAuthorities","targetClassName":"pt.iscte.hospital.entities.User"}]},"validateUserMail":{"name":"validateUserMail","lineBegin":94,"lineEnd":103,"annotations":["@Override"],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""},{"type":"String","variable":"email","qualifedType":""}],"variables":[{"type":"User","variable":"user","qualifedType":""}],"body":"{\n    User user \u003d userRepository.findByUsername(username);\n    if (user !\u003d null) {\n        if (username.equals(user.getUsername()) \u0026\u0026 email.equals(user.getEmail())) {\n            return true;\n        }\n    }\n    return false;\n}","methodInvocations":[{"scopeName":"userRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"user","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getEmail","targetClassName":"pt.iscte.hospital.entities.User"}]}},"methodInvocations":[{"scopeName":"authenticationFacade","methodName":"getAuthentication","targetClassName":"pt.iscte.hospital.security.IAuthenticationFacade"},{"scopeName":"authenticationFacade.getAuthentication()","methodName":"getName","targetClassName":"pt.iscte.hospital.security.IAuthenticationFacade"},{"scopeName":"userRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"userRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"userLogged","methodName":"getPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"userRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"userRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"user","methodName":"getAuthorities","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"userRepository","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"user","methodName":"getAuthorities","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getAuthorities()","methodName":"get","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user.getAuthorities().get(0)","methodName":"getAuthority","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"userRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.UserRepository"},{"scopeName":"user","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"getEmail","targetClassName":"pt.iscte.hospital.entities.User"}],"implementedTypes":["pt.iscte.hospital.services.user.UserService","UserService"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.security.core.GrantedAuthority","org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder","org.springframework.stereotype.Service","pt.iscte.hospital.entities","pt.iscte.hospital.repositories.user.UserRepository","pt.iscte.hospital.security.IAuthenticationFacade","pt.iscte.hospital.security.Role","java.util.List"]},"pt.iscte.hospital.controllers.utils.MyErrorController":{"qualifiedName":"pt.iscte.hospital.controllers.utils.MyErrorController","begin":1,"end":32,"isInterface":false,"annotations":["@Controller"],"variables":["Common common"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"Common","variable":"common","lineBegin":13,"lineEnd":14}],"dependencies":["pt.iscte.hospital.controllers.utils.Common"],"methods":{"handleError":{"name":"handleError","parametersDataType":["ModelMap"],"returnDataType":["String"]},"getErrorPath":{"name":"getErrorPath","parametersDataType":[],"returnDataType":["String"]}},"myMethods":{"handleError":{"name":"handleError","lineBegin":18,"lineEnd":25,"annotations":["@GetMapping(\"/error\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[],"body":"{\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"imageURL\", AlertMessageImage.FAILURE.getImageURL());\n    return \"components/error\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"getErrorPath":{"name":"getErrorPath","lineBegin":27,"lineEnd":30,"annotations":["@Override"],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return null;\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}],"implementedTypes":["ErrorController"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.boot.web.servlet.error.ErrorController","org.springframework.stereotype.Controller","org.springframework.ui.ModelMap","org.springframework.web.bind.annotation.GetMapping","pt.iscte.hospital.objects.utils.AlertMessageImage"]},"pt.iscte.hospital.threads.CloseAppointment":{"qualifiedName":"pt.iscte.hospital.threads.CloseAppointment","begin":1,"end":82,"isInterface":false,"annotations":["@Component"],"variables":["long MAX_HOURS","long TOLERANCIA_MINUTES","AppointmentRepository appointmentRepository","LocalDateTime todayDateTime","List\u003cAppointment\u003e appointments","DoctorWaitingPatient doctorWaitingPatient","LocalDate firstCallDate","LocalTime firstCallTime","LocalDateTime timeLimit","Appointment appointment","LocalDateTime todayDate","LocalDateTime appointmentDateLimit","List\u003cAppointment\u003e appointments","LocalDate appDate","LocalTime appTime","LocalDateTime appointmentDate","Appointment appointment"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"long","variable":"MAX_HOURS","lineBegin":21,"lineEnd":21},{"annotations":[],"modifier":"private ","identifier":[],"type":"long","variable":"TOLERANCIA_MINUTES","lineBegin":22,"lineEnd":22},{"annotations":[],"modifier":"private ","identifier":[],"type":"AppointmentRepository","variable":"appointmentRepository","lineBegin":24,"lineEnd":24}],"dependencies":["pt.iscte.hospital.repositories.AppointmentRepository","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.waiting.DoctorWaitingPatient","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment"],"methods":{"fecharConsultasAntigas":{"name":"fecharConsultasAntigas","parametersDataType":[],"returnDataType":["void"]},"changeAppointmentsState":{"name":"changeAppointmentsState","parametersDataType":["int","int"],"returnDataType":["void"]},"marcarAtrasos":{"name":"marcarAtrasos","parametersDataType":[],"returnDataType":["void"]}},"myMethods":{"fecharConsultasAntigas":{"name":"fecharConsultasAntigas","lineBegin":32,"lineEnd":37,"annotations":["@Scheduled(fixedRate \u003d 60000)"],"returnDataType":["void"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    changeAppointmentsState(MARCADA.getStateNr(), NAO_REALIZADA.getStateNr());\n    changeAppointmentsState(EM_CURSO.getStateNr(), REALIZADA.getStateNr());\n    System.out.println(\"Limpeza do estado das consultas\");\n}","methodInvocations":[]},"changeAppointmentsState":{"name":"changeAppointmentsState","lineBegin":63,"lineEnd":81,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"int","variable":"initialState","qualifedType":""},{"type":"int","variable":"finalState","qualifedType":""}],"variables":[{"type":"LocalDateTime","variable":"todayDate","qualifedType":""},{"type":"LocalDateTime","variable":"appointmentDateLimit","qualifedType":""},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"LocalDate","variable":"appDate","qualifedType":""},{"type":"LocalTime","variable":"appTime","qualifedType":""},{"type":"LocalDateTime","variable":"appointmentDate","qualifedType":""},{"type":"Appointment","variable":"appointment","qualifedType":""}],"body":"{\n    LocalDateTime todayDate \u003d LocalDateTime.now();\n    LocalDateTime appointmentDateLimit \u003d todayDate.minusHours(MAX_HOURS);\n    List\u003cAppointment\u003e appointments \u003d appointmentRepository.findAllByAppointmentStatus(initialState);\n    for (Appointment appointment : appointments) {\n        LocalDate appDate \u003d appointment.getSlot().getDate();\n        LocalTime appTime \u003d appointment.getSlot().getTimeBegin();\n        LocalDateTime appointmentDate \u003d LocalDateTime.of(appDate, appTime);\n        if (appointmentDate.isBefore(appointmentDateLimit)) {\n            appointment.setAppointmentStatus(finalState);\n            appointmentRepository.save(appointment);\n            System.out.println(appointment);\n        }\n    }\n}","methodInvocations":[{"scopeName":"todayDate","methodName":"minusHours","targetClassName":""},{"scopeName":"appointmentRepository","methodName":"findAllByAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointmentDate","methodName":"isBefore","targetClassName":""},{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]},"marcarAtrasos":{"name":"marcarAtrasos","lineBegin":40,"lineEnd":61,"annotations":["@Scheduled(fixedRate \u003d 60000)"],"returnDataType":["void"],"identifier":[],"parametersDataType":[],"variables":[{"type":"LocalDateTime","variable":"todayDateTime","qualifedType":""},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"DoctorWaitingPatient","variable":"doctorWaitingPatient","qualifedType":""},{"type":"LocalDate","variable":"firstCallDate","qualifedType":""},{"type":"LocalTime","variable":"firstCallTime","qualifedType":""},{"type":"LocalDateTime","variable":"timeLimit","qualifedType":""},{"type":"Appointment","variable":"appointment","qualifedType":""}],"body":"{\n    LocalDateTime todayDateTime \u003d LocalDateTime.now();\n    List\u003cAppointment\u003e appointments \u003d appointmentRepository.findAllByAppointmentStatus(MARCADA.getStateNr());\n    for (Appointment appointment : appointments) {\n        DoctorWaitingPatient doctorWaitingPatient \u003d appointment.getDoctorWaitingPatient();\n        if (doctorWaitingPatient !\u003d null) {\n            LocalDate firstCallDate \u003d doctorWaitingPatient.getDate();\n            LocalTime firstCallTime \u003d doctorWaitingPatient.getTimeFirstCall();\n            LocalDateTime timeLimit \u003d LocalDateTime.of(firstCallDate, firstCallTime).plusMinutes(TOLERANCIA_MINUTES);\n            if (todayDateTime.isAfter(timeLimit)) {\n                appointment.setAppointmentStatus(NAO_REALIZADA.getStateNr());\n                appointmentRepository.save(appointment);\n                System.out.println(\"Registado atraso: \" + appointment);\n            }\n        }\n    }\n}","methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllByAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointment","methodName":"getDoctorWaitingPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"doctorWaitingPatient","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.waiting.DoctorWaitingPatient"},{"scopeName":"doctorWaitingPatient","methodName":"getTimeFirstCall","targetClassName":"pt.iscte.hospital.entities.waiting.DoctorWaitingPatient"},{"scopeName":"todayDateTime","methodName":"isAfter","targetClassName":""},{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}]}},"methodInvocations":[{"scopeName":"appointmentRepository","methodName":"findAllByAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointment","methodName":"getDoctorWaitingPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"doctorWaitingPatient","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.waiting.DoctorWaitingPatient"},{"scopeName":"doctorWaitingPatient","methodName":"getTimeFirstCall","targetClassName":"pt.iscte.hospital.entities.waiting.DoctorWaitingPatient"},{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointmentRepository","methodName":"findAllByAppointmentStatus","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment","methodName":"setAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.AppointmentRepository"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.scheduling.annotation.Scheduled","org.springframework.stereotype.Component","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.waiting.DoctorWaitingPatient","pt.iscte.hospital.repositories.AppointmentRepository","java.time.LocalDate","java.time.LocalDateTime","java.time.LocalTime","java.util.List","pt.iscte.hospital.entities.states.AppointmentState"]},"pt.iscte.hospital.objects.utils.TimeInterval":{"qualifiedName":"pt.iscte.hospital.objects.utils.TimeInterval","begin":1,"end":36,"isInterface":false,"annotations":[],"variables":["LocalTime timeBegin","LocalTime timeEnd"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalTime","variable":"timeBegin","lineBegin":7,"lineEnd":7},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalTime","variable":"timeEnd","lineBegin":8,"lineEnd":8}],"dependencies":[],"methods":{"getTimeEnd":{"name":"getTimeEnd","parametersDataType":[],"returnDataType":["LocalTime"]},"toString":{"name":"toString","parametersDataType":[],"returnDataType":["String"]},"getTimeBegin":{"name":"getTimeBegin","parametersDataType":[],"returnDataType":["LocalTime"]}},"myMethods":{"getTimeEnd":{"name":"getTimeEnd","lineBegin":25,"lineEnd":27,"annotations":[],"returnDataType":["LocalTime"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return timeEnd;\n}","methodInvocations":[]},"toString":{"name":"toString","lineBegin":29,"lineEnd":35,"annotations":["@Override"],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return \"TimeInterval{\" + \"timeBegin\u003d\" + timeBegin + \", timeEnd\u003d\" + timeEnd + \u0027}\u0027;\n}","methodInvocations":[]},"getTimeBegin":{"name":"getTimeBegin","lineBegin":21,"lineEnd":23,"annotations":[],"returnDataType":["LocalTime"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return timeBegin;\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["java.time.LocalTime"]},"pt.iscte.hospital.services.MessageService":{"qualifiedName":"pt.iscte.hospital.services.MessageService","begin":1,"end":39,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Message"],"methods":{"findAllByUserUserIdOrderByDateDesc":{"name":"findAllByUserUserIdOrderByDateDesc","parametersDataType":["Long"],"returnDataType":["Message"]},"findAllByUserUserIdAndReadMsgOrderByDateDesc":{"name":"findAllByUserUserIdAndReadMsgOrderByDateDesc","parametersDataType":["Long","boolean"],"returnDataType":["Message"]},"findAllByUserUserIdAndDateOrderByDateDesc":{"name":"findAllByUserUserIdAndDateOrderByDateDesc","parametersDataType":["Long","LocalDate"],"returnDataType":["Message"]},"hasUnreadMessages":{"name":"hasUnreadMessages","parametersDataType":["Long"],"returnDataType":["boolean"]},"save":{"name":"save","parametersDataType":["Message"],"returnDataType":["void"]},"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc":{"name":"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc","parametersDataType":["Long","LocalDate","boolean"],"returnDataType":["Message"]},"createMessage":{"name":"createMessage","parametersDataType":["String","String","User"],"returnDataType":["void"]},"deleteMessageById":{"name":"deleteMessageById","parametersDataType":["Long"],"returnDataType":["void"]},"markMessageHasReadById":{"name":"markMessageHasReadById","parametersDataType":["Long"],"returnDataType":["void"]},"delete":{"name":"delete","parametersDataType":["Message"],"returnDataType":["void"]},"countAllByUserUserIdAndReadMsg":{"name":"countAllByUserUserIdAndReadMsg","parametersDataType":["Long","boolean"],"returnDataType":["Long"]}},"myMethods":{"findAllByUserUserIdOrderByDateDesc":{"name":"findAllByUserUserIdOrderByDateDesc","lineBegin":10,"lineEnd":10,"annotations":[],"returnDataType":["List\u003cMessage\u003e"],"identifier":["List","Message"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByUserUserIdAndReadMsgOrderByDateDesc":{"name":"findAllByUserUserIdAndReadMsgOrderByDateDesc","lineBegin":21,"lineEnd":23,"annotations":[],"returnDataType":["List\u003cMessage\u003e"],"identifier":["List","Message"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"boolean","variable":"hasRead","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByUserUserIdAndDateOrderByDateDesc":{"name":"findAllByUserUserIdAndDateOrderByDateDesc","lineBegin":12,"lineEnd":14,"annotations":[],"returnDataType":["List\u003cMessage\u003e"],"identifier":["List","Message"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"hasUnreadMessages":{"name":"hasUnreadMessages","lineBegin":33,"lineEnd":33,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"save":{"name":"save","lineBegin":35,"lineEnd":35,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Message","variable":"message","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc":{"name":"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc","lineBegin":16,"lineEnd":19,"annotations":[],"returnDataType":["List\u003cMessage\u003e"],"identifier":["List","Message"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"boolean","variable":"hasRead","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"createMessage":{"name":"createMessage","lineBegin":27,"lineEnd":27,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"subject","qualifedType":""},{"type":"String","variable":"message","qualifedType":""},{"type":"User","variable":"userReceiver","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"deleteMessageById":{"name":"deleteMessageById","lineBegin":29,"lineEnd":29,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"msgId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"markMessageHasReadById":{"name":"markMessageHasReadById","lineBegin":31,"lineEnd":31,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"msgId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"delete":{"name":"delete","lineBegin":37,"lineEnd":37,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Message","variable":"message","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countAllByUserUserIdAndReadMsg":{"name":"countAllByUserUserIdAndReadMsg","lineBegin":25,"lineEnd":25,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"boolean","variable":"hasRead","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.User","java.time.LocalDate","java.util.List"]},"pt.iscte.hospital.objects.utils.HospitalFormatter":{"qualifiedName":"pt.iscte.hospital.objects.utils.HospitalFormatter","begin":1,"end":16,"isInterface":false,"annotations":[],"variables":["String PHONE","DecimalFormatSymbols formatSymbols","DecimalFormat formatter"],"instance_variables":[{"annotations":[],"modifier":"public ","identifier":[],"type":"String","variable":"PHONE","lineBegin":7,"lineEnd":7}],"dependencies":[],"methods":{"formatValue":{"name":"formatValue","parametersDataType":["Number","String"],"returnDataType":["String"]}},"myMethods":{"formatValue":{"name":"formatValue","lineBegin":9,"lineEnd":15,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"Number","variable":"value","qualifedType":""},{"type":"String","variable":"formatString","qualifedType":""}],"variables":[{"type":"DecimalFormatSymbols","variable":"formatSymbols","qualifedType":""},{"type":"DecimalFormat","variable":"formatter","qualifedType":""}],"body":"{\n    DecimalFormatSymbols formatSymbols \u003d new DecimalFormatSymbols();\n    formatSymbols.setDecimalSeparator(\u0027.\u0027);\n    formatSymbols.setGroupingSeparator(\u0027 \u0027);\n    DecimalFormat formatter \u003d new DecimalFormat(formatString, formatSymbols);\n    return formatter.format(value);\n}","methodInvocations":[{"scopeName":"formatSymbols","methodName":"setDecimalSeparator","targetClassName":""},{"scopeName":"formatSymbols","methodName":"setGroupingSeparator","targetClassName":""},{"scopeName":"formatter","methodName":"format","targetClassName":""}]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["java.text.DecimalFormat","java.text.DecimalFormatSymbols"]},"pt.iscte.hospital.controllers.DoctorReceptionistController":{"qualifiedName":"pt.iscte.hospital.controllers.DoctorReceptionistController","begin":1,"end":61,"isInterface":false,"annotations":["@Controller"],"variables":["PatientService patientService","Common common","List\u003cPatient\u003e patients","Patient patient","List\u003cPatient\u003e patients"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"PatientService","variable":"patientService","lineBegin":20,"lineEnd":20},{"annotations":[],"modifier":"private ","identifier":[],"type":"Common","variable":"common","lineBegin":21,"lineEnd":21}],"dependencies":["pt.iscte.hospital.services.user.PatientService","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient"],"methods":{"searchDoctors":{"name":"searchDoctors","parametersDataType":["String","ModelMap"],"returnDataType":["String"]},"showPatientProfile":{"name":"showPatientProfile","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"showPatientList":{"name":"showPatientList","parametersDataType":["ModelMap"],"returnDataType":["String"]}},"myMethods":{"searchDoctors":{"name":"searchDoctors","lineBegin":47,"lineEnd":60,"annotations":["@PostMapping(value \u003d \"/search-patients\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""},{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"List\u003cPatient\u003e","variable":"patients","qualifedType":"pt.iscte.hospital.entities.Patient"}],"body":"{\n    List\u003cPatient\u003e patients;\n    if (name \u003d\u003d null || name.isEmpty()) {\n        name \u003d \"\";\n    }\n    patients \u003d patientService.findAllByFirstAndLastName(name);\n    modelMap.put(\"search_name\", name);\n    modelMap.put(\"patients\", patients);\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"doctor-receptionist/patient-list\";\n}","methodInvocations":[{"scopeName":"patientService","methodName":"findAllByFirstAndLastName","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"showPatientProfile":{"name":"showPatientProfile","lineBegin":38,"lineEnd":45,"annotations":["@GetMapping(value \u003d \"/doctor-receptionist/patient-profile/{patientId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"patientId","qualifedType":""}],"variables":[{"type":"Patient","variable":"patient","qualifedType":""}],"body":"{\n    Patient patient \u003d patientService.findByUserId(patientId);\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"patient\", patient);\n    return \"doctor-receptionist/patient-profile\";\n}","methodInvocations":[{"scopeName":"patientService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"showPatientList":{"name":"showPatientList","lineBegin":29,"lineEnd":36,"annotations":["@GetMapping(value \u003d \"/doctor-receptionist/patient-list\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"List\u003cPatient\u003e","variable":"patients","qualifedType":"pt.iscte.hospital.entities.Patient"}],"body":"{\n    List\u003cPatient\u003e patients \u003d patientService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    modelMap.put(\"patients\", patients);\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"doctor-receptionist/patient-list\";\n}","methodInvocations":[{"scopeName":"patientService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]}},"methodInvocations":[{"scopeName":"patientService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"patientService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"patientService","methodName":"findAllByFirstAndLastName","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.data.domain.Sort","org.springframework.stereotype.Controller","org.springframework.ui.ModelMap","org.springframework.web.bind.annotation.GetMapping","org.springframework.web.bind.annotation.PathVariable","org.springframework.web.bind.annotation.PostMapping","org.springframework.web.bind.annotation.RequestParam","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.services.user.PatientService","java.util.List"]},"pt.iscte.hospital.repositories.AppointmentRepository":{"qualifiedName":"pt.iscte.hospital.repositories.AppointmentRepository","begin":1,"end":137,"isInterface":true,"annotations":["@Repository"],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Invoice"],"methods":{"findAllByPatientAndAppointmentStatus":{"name":"findAllByPatientAndAppointmentStatus","parametersDataType":["Patient","Integer"],"returnDataType":["Appointment"]},"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc":{"name":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc","parametersDataType":["Long","LocalDate","int","boolean"],"returnDataType":["Appointment"]},"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase":{"name":"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase","parametersDataType":["LocalDate","Integer","String","String","String"],"returnDataType":["Appointment"]},"findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","parametersDataType":["Long","Integer","LocalDate","String","String"],"returnDataType":["Appointment"]},"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["Appointment"]},"findAllBySlotDoctorUserId":{"name":"findAllBySlotDoctorUserId","parametersDataType":["Long"],"returnDataType":["Appointment"]},"countBySlotDateAndAppointmentStatusAndHasChecked":{"name":"countBySlotDateAndAppointmentStatusAndHasChecked","parametersDataType":["LocalDate","int","boolean"],"returnDataType":["long"]},"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus":{"name":"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus","parametersDataType":["Long","Long","int"],"returnDataType":["long"]},"findAllBySlotDateAndAppointmentStatus":{"name":"findAllBySlotDateAndAppointmentStatus","parametersDataType":["LocalDate","Integer"],"returnDataType":["Appointment"]},"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc":{"name":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc","parametersDataType":["Long","LocalDate","int"],"returnDataType":["Appointment"]},"findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId":{"name":"findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId","parametersDataType":["String","Long"],"returnDataType":["Appointment"]},"findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","parametersDataType":["String","String","String"],"returnDataType":["Appointment"]},"findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked":{"name":"findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked","parametersDataType":["Long","LocalDate","Integer","boolean"],"returnDataType":["Appointment"]},"findAllBySlotDoctorUserIdAndAppointmentStatus":{"name":"findAllBySlotDoctorUserIdAndAppointmentStatus","parametersDataType":["Long","int"],"returnDataType":["Appointment"]},"findAllByAppointmentStatus":{"name":"findAllByAppointmentStatus","parametersDataType":["Integer"],"returnDataType":["Appointment"]},"findAllByPatientUserIdAndSlotDateAndAppointmentStatus":{"name":"findAllByPatientUserIdAndSlotDateAndAppointmentStatus","parametersDataType":["Long","LocalDate","Integer"],"returnDataType":["Appointment"]},"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked":{"name":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked","parametersDataType":["long","LocalDate","int","boolean"],"returnDataType":["long"]},"findByAppointmentId":{"name":"findByAppointmentId","parametersDataType":["Long"],"returnDataType":["Appointment"]},"findAllByPatientUserId":{"name":"findAllByPatientUserId","parametersDataType":["Long"],"returnDataType":["Appointment"]},"findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId":{"name":"findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId","parametersDataType":["LocalDate","String","Long"],"returnDataType":["Appointment"]},"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus":{"name":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus","parametersDataType":["long","LocalDate","int"],"returnDataType":["long"]},"findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","parametersDataType":["LocalDate","String","String","String"],"returnDataType":["Appointment"]},"findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","parametersDataType":["Long","Integer","String","String"],"returnDataType":["Appointment"]},"findAllByAppointmentStatusAndInvoice":{"name":"findAllByAppointmentStatusAndInvoice","parametersDataType":["int","Invoice"],"returnDataType":["Appointment"]},"countBySlotDateAndAppointmentStatus":{"name":"countBySlotDateAndAppointmentStatus","parametersDataType":["LocalDate","int"],"returnDataType":["long"]}},"myMethods":{"findAllByPatientAndAppointmentStatus":{"name":"findAllByPatientAndAppointmentStatus","lineBegin":22,"lineEnd":24,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Patient","variable":"patient","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc":{"name":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc","lineBegin":91,"lineEnd":95,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""},{"type":"boolean","variable":"hasChecked","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase":{"name":"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase","lineBegin":82,"lineEnd":87,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllByPatientUserIdAndAppointmentStatusAndSlotDateAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","lineBegin":26,"lineEnd":31,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAll":{"name":"findAll","lineBegin":52,"lineEnd":52,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDoctorUserId":{"name":"findAllBySlotDoctorUserId","lineBegin":55,"lineEnd":55,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countBySlotDateAndAppointmentStatusAndHasChecked":{"name":"countBySlotDateAndAppointmentStatusAndHasChecked","lineBegin":110,"lineEnd":113,"annotations":[],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""},{"type":"boolean","variable":"hasChecked","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus":{"name":"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus","lineBegin":116,"lineEnd":120,"annotations":[],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"doctorId","qualifedType":""},{"type":"Long","variable":"patientId","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDateAndAppointmentStatus":{"name":"findAllBySlotDateAndAppointmentStatus","lineBegin":50,"lineEnd":50,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc":{"name":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc","lineBegin":97,"lineEnd":101,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId":{"name":"findAllByPatientNameContainingIgnoreCaseAndSlotDoctorUserId","lineBegin":57,"lineEnd":59,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"String","variable":"patientName","qualifedType":""},{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllBySlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","lineBegin":77,"lineEnd":80,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked":{"name":"findAllByPatientUserIdAndSlotDateAndAppointmentStatusAndHasChecked","lineBegin":39,"lineEnd":43,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""},{"type":"boolean","variable":"hasCheckedIn","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDoctorUserIdAndAppointmentStatus":{"name":"findAllBySlotDoctorUserIdAndAppointmentStatus","lineBegin":66,"lineEnd":68,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"doctorId","qualifedType":""},{"type":"int","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByAppointmentStatus":{"name":"findAllByAppointmentStatus","lineBegin":16,"lineEnd":16,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Integer","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByPatientUserIdAndSlotDateAndAppointmentStatus":{"name":"findAllByPatientUserIdAndSlotDateAndAppointmentStatus","lineBegin":45,"lineEnd":48,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked":{"name":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked","lineBegin":128,"lineEnd":132,"annotations":[],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"long","variable":"doctorId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""},{"type":"boolean","variable":"hasChecked","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByAppointmentId":{"name":"findByAppointmentId","lineBegin":14,"lineEnd":14,"annotations":[],"returnDataType":["Appointment"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByPatientUserId":{"name":"findAllByPatientUserId","lineBegin":19,"lineEnd":20,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId":{"name":"findAllBySlotDateAndPatientNameContainingIgnoreCaseAndSlotDoctorUserId","lineBegin":61,"lineEnd":64,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""},{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus":{"name":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus","lineBegin":123,"lineEnd":126,"annotations":[],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"long","variable":"doctorId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllBySlotDateAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","lineBegin":71,"lineEnd":75,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase":{"name":"findAllByPatientUserIdAndAppointmentStatusAndSlotDoctorNameContainingIgnoreCaseAndSlotDoctorSpecialityNameContainingIgnoreCase","lineBegin":33,"lineEnd":37,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"Integer","variable":"appointmentStatus","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByAppointmentStatusAndInvoice":{"name":"findAllByAppointmentStatusAndInvoice","lineBegin":135,"lineEnd":135,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"int","variable":"appointmentStatus","qualifedType":""},{"type":"Invoice","variable":"invoice","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countBySlotDateAndAppointmentStatus":{"name":"countBySlotDateAndAppointmentStatus","lineBegin":104,"lineEnd":106,"annotations":[],"returnDataType":["long"],"identifier":[],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"int","variable":"appointmentState","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["JpaRepository\u003cAppointment, Long\u003e"],"imports":["org.springframework.data.jpa.repository.JpaRepository","org.springframework.stereotype.Repository","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Invoice","pt.iscte.hospital.entities.Patient","java.time.LocalDate","java.util.List"]},"pt.iscte.hospital.entities.Slot":{"qualifiedName":"pt.iscte.hospital.entities.Slot","begin":1,"end":148,"isInterface":false,"annotations":["@Entity"],"variables":["Long slotId","LocalDate date","LocalTime timeBegin","LocalTime timeEnd","Set\u003cAppointment\u003e appointments","Doctor doctor","Set\u003cPatientWaitingAppointment\u003e patientWaitingAppointments","boolean isAvailable"],"instance_variables":[{"annotations":["@Id","@GeneratedValue(strategy \u003d GenerationType.IDENTITY)","@Column(name \u003d \"slot_id\")"],"modifier":"private ","identifier":[],"type":"Long","variable":"slotId","lineBegin":16,"lineEnd":19},{"annotations":["@DateTimeFormat(iso \u003d DateTimeFormat.ISO.DATE)"],"modifier":"private ","identifier":[],"type":"LocalDate","variable":"date","lineBegin":21,"lineEnd":22},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalTime","variable":"timeBegin","lineBegin":23,"lineEnd":23},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalTime","variable":"timeEnd","lineBegin":24,"lineEnd":24},{"annotations":["@OneToMany(mappedBy \u003d \"slot\")"],"modifier":"private ","identifier":["Set","Appointment"],"type":"Set\u003cAppointment\u003e","variable":"appointments","lineBegin":27,"lineEnd":28},{"annotations":["@ManyToOne","@JoinColumn(name \u003d \"doctor_id\")"],"modifier":"private ","identifier":[],"type":"Doctor","variable":"doctor","lineBegin":30,"lineEnd":32},{"annotations":["@OneToMany(mappedBy \u003d \"slot\")"],"modifier":"private ","identifier":["Set","PatientWaitingAppointment"],"type":"Set\u003cPatientWaitingAppointment\u003e","variable":"patientWaitingAppointments","lineBegin":34,"lineEnd":35},{"annotations":[],"modifier":"private ","identifier":[],"type":"boolean","variable":"isAvailable","lineBegin":37,"lineEnd":37}],"dependencies":["pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor"],"methods":{"setTimeEnd":{"name":"setTimeEnd","parametersDataType":["LocalTime"],"returnDataType":["void"]},"isAvailable":{"name":"isAvailable","parametersDataType":[],"returnDataType":["boolean"]},"getTimeEnd":{"name":"getTimeEnd","parametersDataType":[],"returnDataType":["LocalTime"]},"setAvailable":{"name":"setAvailable","parametersDataType":["boolean"],"returnDataType":["void"]},"setTimeBegin":{"name":"setTimeBegin","parametersDataType":["LocalTime"],"returnDataType":["void"]},"compareTo":{"name":"compareTo","parametersDataType":["Slot"],"returnDataType":["int"]},"getTimeBeginStr":{"name":"getTimeBeginStr","parametersDataType":[],"returnDataType":["String"]},"getTimeEndStr":{"name":"getTimeEndStr","parametersDataType":[],"returnDataType":["String"]},"getDoctor":{"name":"getDoctor","parametersDataType":[],"returnDataType":["Doctor"]},"setSlotId":{"name":"setSlotId","parametersDataType":["Long"],"returnDataType":["void"]},"getSlotId":{"name":"getSlotId","parametersDataType":[],"returnDataType":["Long"]},"getDateStr":{"name":"getDateStr","parametersDataType":[],"returnDataType":["String"]},"setDate":{"name":"setDate","parametersDataType":["LocalDate"],"returnDataType":["void"]},"getDate":{"name":"getDate","parametersDataType":[],"returnDataType":["LocalDate"]},"setDoctor":{"name":"setDoctor","parametersDataType":["Doctor"],"returnDataType":["void"]},"toString":{"name":"toString","parametersDataType":[],"returnDataType":["String"]},"getTimeBegin":{"name":"getTimeBegin","parametersDataType":[],"returnDataType":["LocalTime"]}},"myMethods":{"setTimeEnd":{"name":"setTimeEnd","lineBegin":100,"lineEnd":102,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"LocalTime","variable":"timeEnd","qualifedType":""}],"variables":[],"body":"{\n    this.timeEnd \u003d timeEnd;\n}","methodInvocations":[]},"isAvailable":{"name":"isAvailable","lineBegin":112,"lineEnd":114,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return isAvailable;\n}","methodInvocations":[]},"getTimeEnd":{"name":"getTimeEnd","lineBegin":92,"lineEnd":94,"annotations":[],"returnDataType":["LocalTime"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return timeEnd;\n}","methodInvocations":[]},"setAvailable":{"name":"setAvailable","lineBegin":116,"lineEnd":118,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"boolean","variable":"available","qualifedType":""}],"variables":[],"body":"{\n    isAvailable \u003d available;\n}","methodInvocations":[]},"setTimeBegin":{"name":"setTimeBegin","lineBegin":88,"lineEnd":90,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"LocalTime","variable":"timeBegin","qualifedType":""}],"variables":[],"body":"{\n    this.timeBegin \u003d timeBegin;\n}","methodInvocations":[]},"compareTo":{"name":"compareTo","lineBegin":131,"lineEnd":147,"annotations":["@Override"],"returnDataType":["int"],"identifier":[],"parametersDataType":[{"type":"Slot","variable":"o","qualifedType":""}],"variables":[],"body":"{\n    if (this.date.isBefore(o.date)) {\n        return -1;\n    } else if (this.date.isAfter(o.date)) {\n        return 1;\n    } else {\n        // Same date\n        if (this.timeBegin.isBefore(o.timeBegin)) {\n            return -1;\n        } else if (this.timeBegin.isAfter(o.timeBegin)) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n}","methodInvocations":[]},"getTimeBeginStr":{"name":"getTimeBeginStr","lineBegin":84,"lineEnd":86,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return timeBegin.format(TIME_FORMATTER);\n}","methodInvocations":[]},"getTimeEndStr":{"name":"getTimeEndStr","lineBegin":96,"lineEnd":98,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return timeEnd.format(TIME_FORMATTER);\n}","methodInvocations":[]},"getDoctor":{"name":"getDoctor","lineBegin":104,"lineEnd":106,"annotations":[],"returnDataType":["Doctor"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return doctor;\n}","methodInvocations":[]},"setSlotId":{"name":"setSlotId","lineBegin":64,"lineEnd":66,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"slotId","qualifedType":""}],"variables":[],"body":"{\n    this.slotId \u003d slotId;\n}","methodInvocations":[]},"getSlotId":{"name":"getSlotId","lineBegin":60,"lineEnd":62,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return slotId;\n}","methodInvocations":[]},"getDateStr":{"name":"getDateStr","lineBegin":72,"lineEnd":74,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return date.format(FORMATTER);\n}","methodInvocations":[]},"setDate":{"name":"setDate","lineBegin":76,"lineEnd":78,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"{\n    this.date \u003d date;\n}","methodInvocations":[]},"getDate":{"name":"getDate","lineBegin":68,"lineEnd":70,"annotations":[],"returnDataType":["LocalDate"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return date;\n}","methodInvocations":[]},"setDoctor":{"name":"setDoctor","lineBegin":108,"lineEnd":110,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Doctor","variable":"doctor","qualifedType":""}],"variables":[],"body":"{\n    this.doctor \u003d doctor;\n}","methodInvocations":[]},"toString":{"name":"toString","lineBegin":120,"lineEnd":129,"annotations":["@Override"],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return \"Slot{\" + \"slotId\u003d\" + slotId + \", date\u003d\" + date + \", timeBegin\u003d\" + timeBegin + \", timeEnd\u003d\" + timeEnd + \", doctor\u003d \" + doctor.getFirstAndLastName() + \u0027}\u0027;\n}","methodInvocations":[{"scopeName":"doctor","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Doctor"}]},"getTimeBegin":{"name":"getTimeBegin","lineBegin":80,"lineEnd":82,"annotations":[],"returnDataType":["LocalTime"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return timeBegin;\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"slot","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeBegin","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"slot","methodName":"getTimeEnd","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"doctor","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Doctor"}],"implementedTypes":["Comparable\u003cSlot\u003e"],"extendedTypes":[],"imports":["org.springframework.format.annotation.DateTimeFormat","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","javax.persistence","java.time.LocalDate","java.time.LocalTime","java.util.Set","pt.iscte.hospital.objects.utils.Calendar"]},"pt.iscte.hospital.entities.UnitResponsible":{"qualifiedName":"pt.iscte.hospital.entities.UnitResponsible","begin":1,"end":45,"isInterface":false,"annotations":["@Entity","@PrimaryKeyJoinColumn(name \u003d \"unit_responsible_id\")"],"variables":["List\u003cGrantedAuthority\u003e roles"],"instance_variables":[],"dependencies":[],"methods":{"getAuthorities":{"name":"getAuthorities","parametersDataType":[],"returnDataType":["GrantedAuthority"]}},"myMethods":{"getAuthorities":{"name":"getAuthorities","lineBegin":38,"lineEnd":43,"annotations":["@Override"],"returnDataType":["List\u003cGrantedAuthority\u003e"],"identifier":["List","GrantedAuthority"],"parametersDataType":[],"variables":[],"body":"{\n    List\u003cGrantedAuthority\u003e roles \u003d new ArrayList\u003c\u003e();\n    roles.add(new SimpleGrantedAuthority(Role.ROLE_UNIT_RESPONSIBLE.name()));\n    return roles;\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"super","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.Employee"},{"scopeName":"super","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.Employee"}],"implementedTypes":[],"extendedTypes":["Employee","pt.iscte.hospital.entities.Employee"],"imports":["org.springframework.security.core.GrantedAuthority","org.springframework.security.core.authority.SimpleGrantedAuthority","pt.iscte.hospital.security.Role","javax.persistence","java.time.LocalDate","java.util.ArrayList","java.util.List"]},"pt.iscte.hospital.controllers.user.AppointmentListController":{"qualifiedName":"pt.iscte.hospital.controllers.user.AppointmentListController","begin":1,"end":533,"isInterface":false,"annotations":["@Controller"],"variables":["String PATIENT_CURRENT_TYPE_URL","String PATIENT_PAST_TYPE_URL","String DOCTOR_TYPE_URL","String RECEPTIONIST_TYPE_URL","String USER_TYPE_URL","AppointmentService appointmentService","SpecialityService specialityService","UserService userService","PatientService patientService","Common common","User userLogged","List\u003cAppointmentState\u003e appointmentStatesAll","List\u003cInvoiceState\u003e invoiceStates","List\u003cAppointment\u003e appointments","List\u003cAppointmentState\u003e appointmentStates","Patient patient","AppointmentState appointmentState","User userLogged","List\u003cAppointmentState\u003e appointmentStatesAll","List\u003cInvoiceState\u003e invoiceStates","List\u003cAppointment\u003e appointments","List\u003cAppointmentState\u003e appointmentStates","Patient patient","AppointmentState appointmentState","User userLogged","Long userId","List\u003cAppointment\u003e appointments","List\u003cAppointmentState\u003e appointmentStatesAll","List\u003cAppointmentState\u003e appointmentStates","AppointmentState appointmentState","List\u003cAppointmentState\u003e appointmentStatesAll","List\u003cInvoiceState\u003e invoiceStates","List\u003cAppointment\u003e appointments","List\u003cAppointmentState\u003e appointmentStates","AppointmentState appointmentState","User userLogged","List\u003cAppointmentState\u003e appointmentStatesAll","List\u003cInvoiceState\u003e invoiceStates","Long userId","Integer appointmentStateNr","Integer invoiceStateNr","List\u003cAppointment\u003e appointmentListBeforeFilter","List\u003cAppointment\u003e appointments","User userLogged","List\u003cAppointmentState\u003e appointmentStatesAll","List\u003cInvoiceState\u003e invoiceStates","Long userId","Integer appointmentStateNr","Integer invoiceStateNr","List\u003cAppointment\u003e appointmentListBeforeFilter","List\u003cAppointment\u003e appointments","User userLogged","List\u003cAppointmentState\u003e appointmentStatesAll","Long userId","Integer appointmentStateNr","List\u003cAppointment\u003e appointmentListBeforeFilter","List\u003cAppointment\u003e appointments","List\u003cAppointmentState\u003e appointmentStatesAll","List\u003cInvoiceState\u003e invoiceStates","Integer appointmentStateNr","Integer invoiceStateNr","List\u003cAppointment\u003e appointmentListBeforeFilter","List\u003cAppointment\u003e appointments","ModelMap modelMap","List\u003cSpeciality\u003e specialities","List\u003cAppointment\u003e result","Set\u003cAppointment\u003e tempList","Appointment appointment","Set\u003cAppointment\u003e tempList","String[] patientNamesSearch","Appointment appointment","String nameSearch","Set\u003cAppointment\u003e tempList","Appointment appointment","Set\u003cAppointment\u003e tempList","String[] doctorNamesSearch","Appointment appointment","String nameSearch","List\u003cInteger\u003e appointmentStateNrs","Set\u003cAppointment\u003e tempList","Appointment appointment","List\u003cAppointment\u003e result","List\u003cAppointment\u003e tempList","Appointment appointment","Integer appointmentStateNr"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"PATIENT_CURRENT_TYPE_URL","lineBegin":27,"lineEnd":27},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"PATIENT_PAST_TYPE_URL","lineBegin":28,"lineEnd":28},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"DOCTOR_TYPE_URL","lineBegin":29,"lineEnd":29},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"RECEPTIONIST_TYPE_URL","lineBegin":30,"lineEnd":30},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"USER_TYPE_URL","lineBegin":31,"lineEnd":31},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"AppointmentService","variable":"appointmentService","lineBegin":34,"lineEnd":35},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"SpecialityService","variable":"specialityService","lineBegin":36,"lineEnd":37},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"UserService","variable":"userService","lineBegin":38,"lineEnd":39},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"PatientService","variable":"patientService","lineBegin":40,"lineEnd":41},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"Common","variable":"common","lineBegin":42,"lineEnd":43}],"dependencies":["pt.iscte.hospital.services.AppointmentService","pt.iscte.hospital.services.SpecialityService","pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.user.PatientService","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment"],"methods":{"showAppointmentListPatientCurrentPost":{"name":"showAppointmentListPatientCurrentPost","parametersDataType":["ModelMap","LocalDate","String","String","String","String"],"returnDataType":["String"]},"filterAppointments":{"name":"filterAppointments","parametersDataType":["Appointment","LocalDate","String","String","String","Integer","Integer"],"returnDataType":["Appointment"]},"showAppointmentListReceptionistPost":{"name":"showAppointmentListReceptionistPost","parametersDataType":["ModelMap","LocalDate","String","String","String","String","String"],"returnDataType":["String"]},"showAppointmentListPatientPast":{"name":"showAppointmentListPatientPast","parametersDataType":["ModelMap"],"returnDataType":["String"]},"showAppointmentListDoctor":{"name":"showAppointmentListDoctor","parametersDataType":["ModelMap"],"returnDataType":["String"]},"showAppointmentListReceptionist":{"name":"showAppointmentListReceptionist","parametersDataType":["ModelMap"],"returnDataType":["String"]},"showAppointmentListPatientCurrent":{"name":"showAppointmentListPatientCurrent","parametersDataType":["ModelMap"],"returnDataType":["String"]},"appointmentListView":{"name":"appointmentListView","parametersDataType":["Appointment","String","LocalDate","String","String","String","String","String"],"returnDataType":["ModelMap"]},"showAppointmentListPatientPastPost":{"name":"showAppointmentListPatientPastPost","parametersDataType":["ModelMap","LocalDate","String","String","String","String"],"returnDataType":["String"]},"filterAppointmentsByState":{"name":"filterAppointmentsByState","parametersDataType":["Appointment","Integer"],"returnDataType":["Appointment"]},"showAppointmentListDoctorPost":{"name":"showAppointmentListDoctorPost","parametersDataType":["ModelMap","LocalDate","String","String","String"],"returnDataType":["String"]}},"myMethods":{"showAppointmentListPatientCurrentPost":{"name":"showAppointmentListPatientCurrentPost","lineBegin":175,"lineEnd":230,"annotations":["@PostMapping(value \u003d { \"/patient/appointment-list/current\" })"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"stateAppointment","qualifedType":""},{"type":"String","variable":"stateInvoice","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""},{"type":"List\u003cAppointmentState\u003e","variable":"appointmentStatesAll","qualifedType":"pt.iscte.hospital.entities.states.AppointmentState"},{"type":"List\u003cInvoiceState\u003e","variable":"invoiceStates","qualifedType":"pt.iscte.hospital.entities.states.InvoiceState"},{"type":"Long","variable":"userId","qualifedType":""},{"type":"Integer","variable":"appointmentStateNr","qualifedType":""},{"type":"Integer","variable":"invoiceStateNr","qualifedType":""},{"type":"List\u003cAppointment\u003e","variable":"appointmentListBeforeFilter","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    List\u003cAppointmentState\u003e appointmentStatesAll \u003d Arrays.asList(AppointmentState.values());\n    List\u003cInvoiceState\u003e invoiceStates \u003d Arrays.asList(InvoiceState.values());\n    Long userId \u003d userLogged.getUserId();\n    if (specialityName \u003d\u003d null) {\n        specialityName \u003d \"\";\n    }\n    Integer appointmentStateNr;\n    if (stateAppointment \u003d\u003d null) {\n        appointmentStateNr \u003d null;\n    } else {\n        appointmentStateNr \u003d Integer.parseInt(stateAppointment);\n    }\n    Integer invoiceStateNr;\n    if (stateInvoice \u003d\u003d null) {\n        invoiceStateNr \u003d null;\n    } else {\n        invoiceStateNr \u003d Integer.parseInt(stateInvoice);\n    }\n    List\u003cAppointment\u003e appointmentListBeforeFilter \u003d appointmentService.findAllByPatientUserId(userId);\n    List\u003cAppointment\u003e appointments \u003d filterAppointments(appointmentListBeforeFilter, date, null, specialityName, null, appointmentStateNr, invoiceStateNr);\n    appointments.sort(null);\n    modelMap.put(\"appointmentStates\", appointmentStatesAll);\n    modelMap.put(\"invoiceStates\", invoiceStates);\n    modelMap.addAllAttributes(appointmentListView(appointments, PATIENT_CURRENT_TYPE_URL, date, specialityName, doctorName, \"patient\", \"current\", null));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllByPatientUserId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointments","methodName":"sort","targetClassName":"pt.iscte.hospital.entities.Appointment"}]},"filterAppointments":{"name":"filterAppointments","lineBegin":418,"lineEnd":514,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"List\u003cAppointment\u003e","variable":"appointmentList","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"Integer","variable":"appointmentStateNr","qualifedType":""},{"type":"Integer","variable":"invoiceStateNr","qualifedType":""}],"variables":[{"type":"List\u003cAppointment\u003e","variable":"result","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"Set\u003cAppointment\u003e","variable":"tempList","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"Appointment","variable":"appointment","qualifedType":""},{"type":"Set\u003cAppointment\u003e","variable":"tempList","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"String[]","variable":"patientNamesSearch","qualifedType":""},{"type":"Appointment","variable":"appointment","qualifedType":""},{"type":"String","variable":"nameSearch","qualifedType":""},{"type":"Set\u003cAppointment\u003e","variable":"tempList","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"Appointment","variable":"appointment","qualifedType":""},{"type":"Set\u003cAppointment\u003e","variable":"tempList","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"String[]","variable":"doctorNamesSearch","qualifedType":""},{"type":"Appointment","variable":"appointment","qualifedType":""},{"type":"String","variable":"nameSearch","qualifedType":""},{"type":"Set\u003cAppointment\u003e","variable":"tempList","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"Appointment","variable":"appointment","qualifedType":""}],"body":"{\n    List\u003cAppointment\u003e result \u003d appointmentList;\n    // Filter by date\n    if (date !\u003d null) {\n        Set\u003cAppointment\u003e tempList \u003d new HashSet\u003c\u003e();\n        for (Appointment appointment : result) {\n            if (appointment.getSlot().getDate().equals(date)) {\n                tempList.add(appointment);\n            }\n        }\n        result.clear();\n        result.addAll(tempList);\n    }\n    // Filter by Patient Name\n    if (patientName !\u003d null \u0026\u0026 !patientName.isEmpty()) {\n        Set\u003cAppointment\u003e tempList \u003d new HashSet\u003c\u003e();\n        String[] patientNamesSearch \u003d patientName.split(\" \");\n        for (String nameSearch : patientNamesSearch) {\n            for (Appointment appointment : result) {\n                if (appointment.getPatient().getFirstAndLastName().toLowerCase().contains(nameSearch.toLowerCase())) {\n                    tempList.add(appointment);\n                }\n            }\n        }\n        result.clear();\n        result.addAll(tempList);\n    }\n    // Filter by Speciality\n    if (specialityName !\u003d null \u0026\u0026 !specialityName.isEmpty()) {\n        Set\u003cAppointment\u003e tempList \u003d new HashSet\u003c\u003e();\n        for (Appointment appointment : result) {\n            if (appointment.getSlot().getDoctor().getSpeciality().getName().equals(specialityName)) {\n                tempList.add(appointment);\n            }\n        }\n        result.clear();\n        result.addAll(tempList);\n    }\n    // Doctor Name\n    if (doctorName !\u003d null \u0026\u0026 !doctorName.isEmpty()) {\n        Set\u003cAppointment\u003e tempList \u003d new HashSet\u003c\u003e();\n        String[] doctorNamesSearch \u003d doctorName.split(\" \");\n        for (String nameSearch : doctorNamesSearch) {\n            for (Appointment appointment : result) {\n                if (appointment.getSlot().getDoctor().getFirstAndLastName().toLowerCase().contains(nameSearch.toLowerCase())) {\n                    tempList.add(appointment);\n                }\n            }\n        }\n        result.clear();\n        result.addAll(tempList);\n    }\n    // Estado da consulta\n    if (appointmentStateNr !\u003d null) {\n        List\u003cInteger\u003e appointmentStateNrs \u003d new ArrayList\u003c\u003e();\n        if (appointmentStateNr.equals(1001)) {\n            appointmentStateNrs \u003d Arrays.asList(DESMARCADA_PELO_UTENTE.getStateNr(), DESMARCADA_PELO_MEDICO.getStateNr(), NAO_REALIZADA.getStateNr());\n        } else if (appointmentStateNr.equals(1002)) {\n            appointmentStateNrs \u003d Arrays.asList(DESMARCADA_PELO_UTENTE.getStateNr(), DESMARCADA_PELO_MEDICO.getStateNr());\n        } else {\n            appointmentStateNrs.add(appointmentStateNr);\n        }\n        result \u003d filterAppointmentsByState(result, appointmentStateNrs);\n    }\n    // Estado da facturação\n    if (invoiceStateNr !\u003d null) {\n        Set\u003cAppointment\u003e tempList \u003d new HashSet\u003c\u003e();\n        for (Appointment appointment : result) {\n            if (appointment.getInvoice() !\u003d null \u0026\u0026 appointment.getInvoice().getInvoiceState() \u003d\u003d invoiceStateNr) {\n                tempList.add(appointment);\n            }\n        }\n        result.clear();\n        result.addAll(tempList);\n    }\n    return result;\n}","methodInvocations":[{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDate()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"tempList","methodName":"add","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"result","methodName":"clear","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"result","methodName":"addAll","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"nameSearch","methodName":"toLowerCase","targetClassName":""},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getPatient()","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointment.getPatient().getFirstAndLastName()","methodName":"toLowerCase","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointment.getPatient().getFirstAndLastName().toLowerCase()","methodName":"contains","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"tempList","methodName":"add","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"result","methodName":"clear","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"result","methodName":"addAll","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment.getSlot().getDoctor().getSpeciality()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment.getSlot().getDoctor().getSpeciality().getName()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"tempList","methodName":"add","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"result","methodName":"clear","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"result","methodName":"addAll","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"nameSearch","methodName":"toLowerCase","targetClassName":""},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment.getSlot().getDoctor().getFirstAndLastName()","methodName":"toLowerCase","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment.getSlot().getDoctor().getFirstAndLastName().toLowerCase()","methodName":"contains","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"tempList","methodName":"add","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"result","methodName":"clear","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"result","methodName":"addAll","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getInvoice","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getInvoice","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"tempList","methodName":"add","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"result","methodName":"clear","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"result","methodName":"addAll","targetClassName":"pt.iscte.hospital.entities.Appointment"}]},"showAppointmentListReceptionistPost":{"name":"showAppointmentListReceptionistPost","lineBegin":333,"lineEnd":388,"annotations":["@PostMapping(value \u003d { \"/receptionist/appointment-list/resume\" })"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""},{"type":"String","variable":"stateAppointment","qualifedType":""},{"type":"String","variable":"stateInvoice","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""}],"variables":[{"type":"List\u003cAppointmentState\u003e","variable":"appointmentStatesAll","qualifedType":"pt.iscte.hospital.entities.states.AppointmentState"},{"type":"List\u003cInvoiceState\u003e","variable":"invoiceStates","qualifedType":"pt.iscte.hospital.entities.states.InvoiceState"},{"type":"Integer","variable":"appointmentStateNr","qualifedType":""},{"type":"Integer","variable":"invoiceStateNr","qualifedType":""},{"type":"List\u003cAppointment\u003e","variable":"appointmentListBeforeFilter","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"}],"body":"{\n    List\u003cAppointmentState\u003e appointmentStatesAll \u003d Arrays.asList(AppointmentState.values());\n    List\u003cInvoiceState\u003e invoiceStates \u003d Arrays.asList(InvoiceState.values());\n    if (specialityName \u003d\u003d null) {\n        specialityName \u003d \"\";\n    }\n    Integer appointmentStateNr;\n    if (stateAppointment \u003d\u003d null) {\n        appointmentStateNr \u003d null;\n    } else {\n        appointmentStateNr \u003d Integer.parseInt(stateAppointment);\n    }\n    Integer invoiceStateNr;\n    if (stateInvoice \u003d\u003d null) {\n        invoiceStateNr \u003d null;\n    } else {\n        invoiceStateNr \u003d Integer.parseInt(stateInvoice);\n    }\n    List\u003cAppointment\u003e appointmentListBeforeFilter \u003d appointmentService.findAll();\n    List\u003cAppointment\u003e appointments \u003d filterAppointments(appointmentListBeforeFilter, date, patientName, specialityName, doctorName, appointmentStateNr, invoiceStateNr);\n    appointments.sort(null);\n    modelMap.put(\"appointmentStates\", appointmentStatesAll);\n    modelMap.put(\"invoiceStates\", invoiceStates);\n    modelMap.put(\"stateAppointment\", stateAppointment);\n    modelMap.addAllAttributes(appointmentListView(appointments, RECEPTIONIST_TYPE_URL, date, specialityName, doctorName, \"receptionist\", \"resume\", patientName));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"appointmentService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointments","methodName":"sort","targetClassName":"pt.iscte.hospital.entities.Appointment"}]},"showAppointmentListPatientPast":{"name":"showAppointmentListPatientPast","lineBegin":80,"lineEnd":111,"annotations":["@GetMapping(value \u003d { \"/patient/appointment-list/past\" })"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""},{"type":"List\u003cAppointmentState\u003e","variable":"appointmentStatesAll","qualifedType":"pt.iscte.hospital.entities.states.AppointmentState"},{"type":"List\u003cInvoiceState\u003e","variable":"invoiceStates","qualifedType":"pt.iscte.hospital.entities.states.InvoiceState"},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"List\u003cAppointmentState\u003e","variable":"appointmentStates","qualifedType":"pt.iscte.hospital.entities.states.AppointmentState"},{"type":"Patient","variable":"patient","qualifedType":""},{"type":"AppointmentState","variable":"appointmentState","qualifedType":""}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    List\u003cAppointmentState\u003e appointmentStatesAll \u003d Arrays.asList(AppointmentState.values());\n    List\u003cInvoiceState\u003e invoiceStates \u003d Arrays.asList(InvoiceState.values());\n    List\u003cAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();\n    List\u003cAppointmentState\u003e appointmentStates \u003d Arrays.asList(DESMARCADA_PELO_UTENTE, DESMARCADA_PELO_MEDICO, REALIZADA, NAO_REALIZADA);\n    Patient patient \u003d patientService.findByUserId(userLogged.getUserId());\n    for (AppointmentState appointmentState : appointmentStates) {\n        appointments.addAll(appointmentService.findAllByPatientAndAppointmentStatus(patient, appointmentState.getStateNr()));\n    }\n    appointments.sort(null);\n    modelMap.put(\"appointmentStates\", appointmentStatesAll);\n    modelMap.put(\"invoiceStates\", invoiceStates);\n    modelMap.addAllAttributes(appointmentListView(appointments, PATIENT_PAST_TYPE_URL, null, null, null, \"patient\", \"past\", null));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patientService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"appointmentService","methodName":"findAllByPatientAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointments","methodName":"addAll","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointments","methodName":"sort","targetClassName":"pt.iscte.hospital.entities.Appointment"}]},"showAppointmentListDoctor":{"name":"showAppointmentListDoctor","lineBegin":113,"lineEnd":140,"annotations":["@GetMapping(value \u003d { \"/doctor/appointment-list/resume\" })"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""},{"type":"Long","variable":"userId","qualifedType":""},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"List\u003cAppointmentState\u003e","variable":"appointmentStatesAll","qualifedType":"pt.iscte.hospital.entities.states.AppointmentState"},{"type":"List\u003cAppointmentState\u003e","variable":"appointmentStates","qualifedType":"pt.iscte.hospital.entities.states.AppointmentState"},{"type":"AppointmentState","variable":"appointmentState","qualifedType":""}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    Long userId \u003d userLogged.getUserId();\n    List\u003cAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();\n    List\u003cAppointmentState\u003e appointmentStatesAll \u003d Arrays.asList(AppointmentState.values());\n    List\u003cAppointmentState\u003e appointmentStates \u003d Arrays.asList(MARCADA, EM_CURSO, DESMARCADA_PELO_MEDICO, REALIZADA, NAO_REALIZADA);\n    for (AppointmentState appointmentState : appointmentStates) {\n        appointments.addAll(appointmentService.findAllBySlotDoctorUserIdAndAppointmentStatus(userId, appointmentState.getStateNr()));\n    }\n    appointments.sort(null);\n    modelMap.put(\"appointmentStates\", appointmentStatesAll);\n    modelMap.addAllAttributes(appointmentListView(appointments, DOCTOR_TYPE_URL, null, null, null, \"doctor\", \"resume\", null));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllBySlotDoctorUserIdAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointments","methodName":"addAll","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointments","methodName":"sort","targetClassName":"pt.iscte.hospital.entities.Appointment"}]},"showAppointmentListReceptionist":{"name":"showAppointmentListReceptionist","lineBegin":142,"lineEnd":170,"annotations":["@GetMapping(value \u003d { \"/receptionist/appointment-list/resume\" })"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"List\u003cAppointmentState\u003e","variable":"appointmentStatesAll","qualifedType":"pt.iscte.hospital.entities.states.AppointmentState"},{"type":"List\u003cInvoiceState\u003e","variable":"invoiceStates","qualifedType":"pt.iscte.hospital.entities.states.InvoiceState"},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"List\u003cAppointmentState\u003e","variable":"appointmentStates","qualifedType":"pt.iscte.hospital.entities.states.AppointmentState"},{"type":"AppointmentState","variable":"appointmentState","qualifedType":""}],"body":"{\n    List\u003cAppointmentState\u003e appointmentStatesAll \u003d Arrays.asList(AppointmentState.values());\n    List\u003cInvoiceState\u003e invoiceStates \u003d Arrays.asList(InvoiceState.values());\n    List\u003cAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();\n    List\u003cAppointmentState\u003e appointmentStates \u003d Arrays.asList(MARCADA, EM_CURSO, DESMARCADA_PELO_MEDICO, REALIZADA, NAO_REALIZADA);\n    for (AppointmentState appointmentState : appointmentStates) {\n        appointments.addAll(appointmentService.findAllByAppointmentStatus(appointmentState.getStateNr()));\n    }\n    appointments.sort(null);\n    modelMap.put(\"appointmentStates\", appointmentStatesAll);\n    modelMap.put(\"invoiceStates\", invoiceStates);\n    modelMap.addAllAttributes(appointmentListView(appointments, RECEPTIONIST_TYPE_URL, null, null, null, \"receptionist\", \"resume\", null));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"appointmentService","methodName":"findAllByAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointments","methodName":"addAll","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointments","methodName":"sort","targetClassName":"pt.iscte.hospital.entities.Appointment"}]},"showAppointmentListPatientCurrent":{"name":"showAppointmentListPatientCurrent","lineBegin":50,"lineEnd":78,"annotations":["@GetMapping(value \u003d { \"/patient/appointment-list/current\" })"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""},{"type":"List\u003cAppointmentState\u003e","variable":"appointmentStatesAll","qualifedType":"pt.iscte.hospital.entities.states.AppointmentState"},{"type":"List\u003cInvoiceState\u003e","variable":"invoiceStates","qualifedType":"pt.iscte.hospital.entities.states.InvoiceState"},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"List\u003cAppointmentState\u003e","variable":"appointmentStates","qualifedType":"pt.iscte.hospital.entities.states.AppointmentState"},{"type":"Patient","variable":"patient","qualifedType":""},{"type":"AppointmentState","variable":"appointmentState","qualifedType":""}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    List\u003cAppointmentState\u003e appointmentStatesAll \u003d Arrays.asList(AppointmentState.values());\n    List\u003cInvoiceState\u003e invoiceStates \u003d Arrays.asList(InvoiceState.values());\n    List\u003cAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();\n    List\u003cAppointmentState\u003e appointmentStates \u003d Arrays.asList(MARCADA);\n    Patient patient \u003d patientService.findByUserId(userLogged.getUserId());\n    for (AppointmentState appointmentState : appointmentStates) {\n        appointments.addAll(appointmentService.findAllByPatientAndAppointmentStatus(patient, appointmentState.getStateNr()));\n    }\n    appointments.sort(null);\n    modelMap.put(\"appointmentStates\", appointmentStatesAll);\n    modelMap.put(\"invoiceStates\", invoiceStates);\n    modelMap.addAllAttributes(appointmentListView(appointments, PATIENT_CURRENT_TYPE_URL, null, null, null, \"patient\", \"current\", null));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patientService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"appointmentService","methodName":"findAllByPatientAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointments","methodName":"addAll","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointments","methodName":"sort","targetClassName":"pt.iscte.hospital.entities.Appointment"}]},"appointmentListView":{"name":"appointmentListView","lineBegin":393,"lineEnd":416,"annotations":[],"returnDataType":["ModelMap"],"identifier":[],"parametersDataType":[{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":""},{"type":"String","variable":"userTypeURL","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"userType","qualifedType":""},{"type":"String","variable":"tempo","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""}],"variables":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"List\u003cSpeciality\u003e","variable":"specialities","qualifedType":"pt.iscte.hospital.entities.Speciality"}],"body":"{\n    ModelMap modelMap \u003d new ModelMap();\n    List\u003cSpeciality\u003e specialities \u003d specialityService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    modelMap.put(\"specialities\", specialities);\n    modelMap.put(\"appointments\", appointments);\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"userTypeURL\", userTypeURL);\n    modelMap.put(\"date\", date);\n    modelMap.put(\"specialityName\", specialityName);\n    modelMap.put(\"doctorName\", doctorName);\n    modelMap.put(\"userType\", userType);\n    modelMap.put(\"tempo\", tempo);\n    modelMap.put(\"patientName\", patientName);\n    return modelMap;\n}","methodInvocations":[{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"modelMap","methodName":"addAllAttributes","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""}]},"showAppointmentListPatientPastPost":{"name":"showAppointmentListPatientPastPost","lineBegin":232,"lineEnd":285,"annotations":["@PostMapping(value \u003d { \"/patient/appointment-list/past\" })"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"stateAppointment","qualifedType":""},{"type":"String","variable":"stateInvoice","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""},{"type":"List\u003cAppointmentState\u003e","variable":"appointmentStatesAll","qualifedType":"pt.iscte.hospital.entities.states.AppointmentState"},{"type":"List\u003cInvoiceState\u003e","variable":"invoiceStates","qualifedType":"pt.iscte.hospital.entities.states.InvoiceState"},{"type":"Long","variable":"userId","qualifedType":""},{"type":"Integer","variable":"appointmentStateNr","qualifedType":""},{"type":"Integer","variable":"invoiceStateNr","qualifedType":""},{"type":"List\u003cAppointment\u003e","variable":"appointmentListBeforeFilter","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    List\u003cAppointmentState\u003e appointmentStatesAll \u003d Arrays.asList(AppointmentState.values());\n    List\u003cInvoiceState\u003e invoiceStates \u003d Arrays.asList(InvoiceState.values());\n    if (specialityName \u003d\u003d null) {\n        specialityName \u003d \"\";\n    }\n    Long userId \u003d userLogged.getUserId();\n    Integer appointmentStateNr;\n    if (stateAppointment \u003d\u003d null) {\n        appointmentStateNr \u003d null;\n    } else {\n        appointmentStateNr \u003d Integer.parseInt(stateAppointment);\n    }\n    Integer invoiceStateNr;\n    if (stateInvoice \u003d\u003d null) {\n        invoiceStateNr \u003d null;\n    } else {\n        invoiceStateNr \u003d Integer.parseInt(stateInvoice);\n    }\n    List\u003cAppointment\u003e appointmentListBeforeFilter \u003d appointmentService.findAllByPatientUserId(userId);\n    List\u003cAppointment\u003e appointments \u003d filterAppointments(appointmentListBeforeFilter, date, null, specialityName, null, appointmentStateNr, invoiceStateNr);\n    appointments.sort(null);\n    modelMap.put(\"appointmentStates\", appointmentStatesAll);\n    modelMap.put(\"invoiceStates\", invoiceStates);\n    modelMap.addAllAttributes(appointmentListView(appointments, PATIENT_PAST_TYPE_URL, date, specialityName, doctorName, \"patient\", \"past\", null));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllByPatientUserId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointments","methodName":"sort","targetClassName":"pt.iscte.hospital.entities.Appointment"}]},"filterAppointmentsByState":{"name":"filterAppointmentsByState","lineBegin":516,"lineEnd":530,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[{"type":"List\u003cAppointment\u003e","variable":"appointmentList","qualifedType":""},{"type":"List\u003cInteger\u003e","variable":"appointmentStateNrs","qualifedType":""}],"variables":[{"type":"List\u003cAppointment\u003e","variable":"result","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"List\u003cAppointment\u003e","variable":"tempList","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"Appointment","variable":"appointment","qualifedType":""},{"type":"Integer","variable":"appointmentStateNr","qualifedType":""}],"body":"{\n    List\u003cAppointment\u003e result \u003d appointmentList;\n    List\u003cAppointment\u003e tempList \u003d new ArrayList\u003c\u003e();\n    for (Integer appointmentStateNr : appointmentStateNrs) {\n        for (Appointment appointment : result) {\n            if (appointment.getAppointmentStatus() \u003d\u003d appointmentStateNr) {\n                tempList.add(appointment);\n            }\n        }\n    }\n    result \u003d tempList;\n    return result;\n}","methodInvocations":[{"scopeName":"appointment","methodName":"getAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"tempList","methodName":"add","targetClassName":"pt.iscte.hospital.entities.Appointment"}]},"showAppointmentListDoctorPost":{"name":"showAppointmentListDoctorPost","lineBegin":287,"lineEnd":331,"annotations":["@PostMapping(value \u003d { \"/doctor/appointment-list/resume\" })"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"stateAppointment","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""},{"type":"List\u003cAppointmentState\u003e","variable":"appointmentStatesAll","qualifedType":"pt.iscte.hospital.entities.states.AppointmentState"},{"type":"Long","variable":"userId","qualifedType":""},{"type":"Integer","variable":"appointmentStateNr","qualifedType":""},{"type":"List\u003cAppointment\u003e","variable":"appointmentListBeforeFilter","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    List\u003cAppointmentState\u003e appointmentStatesAll \u003d Arrays.asList(AppointmentState.values());\n    if (specialityName \u003d\u003d null) {\n        specialityName \u003d \"\";\n    }\n    Long userId \u003d userLogged.getUserId();\n    Integer appointmentStateNr;\n    if (stateAppointment \u003d\u003d null) {\n        appointmentStateNr \u003d null;\n    } else {\n        appointmentStateNr \u003d Integer.parseInt(stateAppointment);\n    }\n    List\u003cAppointment\u003e appointmentListBeforeFilter \u003d appointmentService.findAllBySlotDoctorUserId(userId);\n    List\u003cAppointment\u003e appointments \u003d filterAppointments(appointmentListBeforeFilter, date, patientName, specialityName, null, appointmentStateNr, null);\n    appointments.sort(null);\n    modelMap.put(\"appointmentStates\", appointmentStatesAll);\n    modelMap.addAllAttributes(appointmentListView(appointments, DOCTOR_TYPE_URL, date, specialityName, null, \"doctor\", \"resume\", patientName));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllBySlotDoctorUserId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointments","methodName":"sort","targetClassName":"pt.iscte.hospital.entities.Appointment"}]}},"methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patientService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"appointmentService","methodName":"findAllByPatientAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patientService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"appointmentService","methodName":"findAllByPatientAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllBySlotDoctorUserIdAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"findAllByAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllByPatientUserId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllByPatientUserId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllBySlotDoctorUserId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDate","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDate()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getPatient()","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointment.getPatient().getFirstAndLastName()","methodName":"toLowerCase","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointment.getPatient().getFirstAndLastName().toLowerCase()","methodName":"contains","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment.getSlot().getDoctor().getSpeciality()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment.getSlot().getDoctor().getSpeciality().getName()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment.getSlot().getDoctor().getFirstAndLastName()","methodName":"toLowerCase","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment.getSlot().getDoctor().getFirstAndLastName().toLowerCase()","methodName":"contains","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"appointment","methodName":"getInvoice","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getInvoice","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment","methodName":"getAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.data.domain.Sort","org.springframework.format.annotation.DateTimeFormat","org.springframework.stereotype.Controller","org.springframework.ui.ModelMap","org.springframework.web.bind.annotation.GetMapping","org.springframework.web.bind.annotation.PostMapping","org.springframework.web.bind.annotation.RequestParam","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities","pt.iscte.hospital.entities.states.AppointmentState","pt.iscte.hospital.entities.states.InvoiceState","pt.iscte.hospital.services","pt.iscte.hospital.services.user.PatientService","pt.iscte.hospital.services.user.UserService","java.time.LocalDate","java.util","pt.iscte.hospital.entities.states.AppointmentState"]},"pt.iscte.hospital.services.invoice.InvoiceResponse":{"qualifiedName":"pt.iscte.hospital.services.invoice.InvoiceResponse","begin":1,"end":16,"isInterface":false,"annotations":["@Component","@Getter","@Setter","@ToString"],"variables":["String status","InvoiceApi invoice"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"status","lineBegin":11,"lineEnd":11},{"annotations":[],"modifier":"private ","identifier":[],"type":"InvoiceApi","variable":"invoice","lineBegin":12,"lineEnd":12}],"dependencies":["pt.iscte.hospital.services.invoice.InvoiceApi"],"methods":{},"myMethods":{},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["lombok.Getter","lombok.Setter","lombok.ToString","org.springframework.stereotype.Component"]},"pt.iscte.hospital.services.user.DoctorService":{"qualifiedName":"pt.iscte.hospital.services.user.DoctorService","begin":1,"end":27,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor"],"methods":{"desmarcarConsultaByDoctor":{"name":"desmarcarConsultaByDoctor","parametersDataType":["Appointment"],"returnDataType":["void"]},"findAllByFirstAndLastNameAndSpeciality":{"name":"findAllByFirstAndLastNameAndSpeciality","parametersDataType":["String","String"],"returnDataType":["Doctor"]},"marcarFalta":{"name":"marcarFalta","parametersDataType":["Appointment"],"returnDataType":["void"]},"findAllByNameContainingIgnoreCase":{"name":"findAllByNameContainingIgnoreCase","parametersDataType":["String"],"returnDataType":["Doctor"]},"removerFalta":{"name":"removerFalta","parametersDataType":["Appointment"],"returnDataType":["void"]},"findAllBySpecialityOrderByNameAsc":{"name":"findAllBySpecialityOrderByNameAsc","parametersDataType":["Speciality"],"returnDataType":["Doctor"]},"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["Doctor"]},"findAllBySpeciality":{"name":"findAllBySpeciality","parametersDataType":["String"],"returnDataType":["Doctor"]},"startAppointment":{"name":"startAppointment","parametersDataType":["Appointment"],"returnDataType":["void"]},"findAllByFirstAndLastName":{"name":"findAllByFirstAndLastName","parametersDataType":["String"],"returnDataType":["Doctor"]},"chamarUtente":{"name":"chamarUtente","parametersDataType":["Appointment"],"returnDataType":["void"]},"endAppointment":{"name":"endAppointment","parametersDataType":["Appointment"],"returnDataType":["void"]},"findByUserId":{"name":"findByUserId","parametersDataType":["Long"],"returnDataType":["Doctor"]},"findAllByNameContainingIgnoreCaseAndSpeciality":{"name":"findAllByNameContainingIgnoreCaseAndSpeciality","parametersDataType":["String","String"],"returnDataType":["Doctor"]}},"myMethods":{"desmarcarConsultaByDoctor":{"name":"desmarcarConsultaByDoctor","lineBegin":16,"lineEnd":16,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByFirstAndLastNameAndSpeciality":{"name":"findAllByFirstAndLastNameAndSpeciality","lineBegin":25,"lineEnd":25,"annotations":[],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"marcarFalta":{"name":"marcarFalta","lineBegin":14,"lineEnd":14,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByNameContainingIgnoreCase":{"name":"findAllByNameContainingIgnoreCase","lineBegin":22,"lineEnd":22,"annotations":[],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"removerFalta":{"name":"removerFalta","lineBegin":15,"lineEnd":15,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySpecialityOrderByNameAsc":{"name":"findAllBySpecialityOrderByNameAsc","lineBegin":21,"lineEnd":21,"annotations":[],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"Speciality","variable":"speciality","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAll":{"name":"findAll","lineBegin":19,"lineEnd":19,"annotations":[],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"findAllBySpeciality":{"name":"findAllBySpeciality","lineBegin":20,"lineEnd":20,"annotations":[],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"startAppointment":{"name":"startAppointment","lineBegin":12,"lineEnd":12,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByFirstAndLastName":{"name":"findAllByFirstAndLastName","lineBegin":24,"lineEnd":24,"annotations":[],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"chamarUtente":{"name":"chamarUtente","lineBegin":11,"lineEnd":11,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"endAppointment":{"name":"endAppointment","lineBegin":13,"lineEnd":13,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByUserId":{"name":"findByUserId","lineBegin":17,"lineEnd":17,"annotations":[],"returnDataType":["Doctor"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"doctorId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByNameContainingIgnoreCaseAndSpeciality":{"name":"findAllByNameContainingIgnoreCaseAndSpeciality","lineBegin":23,"lineEnd":23,"annotations":[],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.data.domain.Sort","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","java.util.List"]},"pt.iscte.hospital.entities.Message":{"qualifiedName":"pt.iscte.hospital.entities.Message","begin":1,"end":53,"isInterface":false,"annotations":["@Entity","@Getter","@Setter"],"variables":["Long messageId","String subject","String message","LocalDate date","LocalTime time","boolean readMsg","User user"],"instance_variables":[{"annotations":["@Id","@GeneratedValue(strategy \u003d GenerationType.IDENTITY)"],"modifier":"private ","identifier":[],"type":"Long","variable":"messageId","lineBegin":16,"lineEnd":18},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"subject","lineBegin":19,"lineEnd":19},{"annotations":["@Column(length \u003d 2000)"],"modifier":"private ","identifier":[],"type":"String","variable":"message","lineBegin":20,"lineEnd":21},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalDate","variable":"date","lineBegin":22,"lineEnd":22},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalTime","variable":"time","lineBegin":23,"lineEnd":23},{"annotations":[],"modifier":"private ","identifier":[],"type":"boolean","variable":"readMsg","lineBegin":24,"lineEnd":24},{"annotations":["@ManyToOne","@JoinColumn(name \u003d \"user_id\")"],"modifier":"private ","identifier":[],"type":"User","variable":"user","lineBegin":27,"lineEnd":29}],"dependencies":["pt.iscte.hospital.entities.User"],"methods":{"getDateStr":{"name":"getDateStr","parametersDataType":[],"returnDataType":["String"]}},"myMethods":{"getDateStr":{"name":"getDateStr","lineBegin":47,"lineEnd":52,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    if (date \u003d\u003d null) {\n        return \"\";\n    }\n    return date.format(Calendar.FORMATTER);\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["lombok.Getter","lombok.Setter","pt.iscte.hospital.objects.utils.Calendar","javax.persistence","java.time.LocalDate","java.time.LocalTime"]},"pt.iscte.hospital.entities.Appointment":{"qualifiedName":"pt.iscte.hospital.entities.Appointment","begin":1,"end":185,"isInterface":false,"annotations":["@Entity","@Getter","@Setter","@ToString"],"variables":["Long appointmentId","LocalDate date","LocalTime timeBegin","LocalTime timeEnd","LocalTime timeOfArrival","Boolean hasChecked","String notes","Patient patient","Invoice invoice","Slot slot","int appointmentStatus","DoctorWaitingPatient doctorWaitingPatient","int missedAppointmentNr"],"instance_variables":[{"annotations":["@Id","@GeneratedValue(strategy \u003d GenerationType.IDENTITY)","@Column(name \u003d \"appointment_id\")"],"modifier":"private ","identifier":[],"type":"Long","variable":"appointmentId","lineBegin":21,"lineEnd":24},{"annotations":["@DateTimeFormat(iso \u003d DateTimeFormat.ISO.DATE)"],"modifier":"private ","identifier":[],"type":"LocalDate","variable":"date","lineBegin":25,"lineEnd":26},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalTime","variable":"timeBegin","lineBegin":27,"lineEnd":27},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalTime","variable":"timeEnd","lineBegin":28,"lineEnd":28},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalTime","variable":"timeOfArrival","lineBegin":29,"lineEnd":29},{"annotations":[],"modifier":"private ","identifier":[],"type":"Boolean","variable":"hasChecked","lineBegin":30,"lineEnd":30},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"notes","lineBegin":31,"lineEnd":31},{"annotations":["@ManyToOne","@JoinColumn(name \u003d \"patient_id\")"],"modifier":"private ","identifier":[],"type":"Patient","variable":"patient","lineBegin":33,"lineEnd":35},{"annotations":["@OneToOne(mappedBy \u003d \"appointment\")"],"modifier":"private ","identifier":[],"type":"Invoice","variable":"invoice","lineBegin":37,"lineEnd":38},{"annotations":["@ManyToOne","@JoinColumn(name \u003d \"slot_id\")"],"modifier":"private ","identifier":[],"type":"Slot","variable":"slot","lineBegin":40,"lineEnd":42},{"annotations":[],"modifier":"private ","identifier":[],"type":"int","variable":"appointmentStatus","lineBegin":44,"lineEnd":44},{"annotations":["@OneToOne(mappedBy \u003d \"appointment\")"],"modifier":"private ","identifier":[],"type":"DoctorWaitingPatient","variable":"doctorWaitingPatient","lineBegin":46,"lineEnd":47}],"dependencies":["pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Invoice","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.waiting.DoctorWaitingPatient","pt.iscte.hospital.entities.waiting.DoctorWaitingPatient","pt.iscte.hospital.entities.waiting.DoctorWaitingPatient","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Slot","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Slot"],"methods":{"getHasChecked":{"name":"getHasChecked","parametersDataType":[],"returnDataType":["Boolean"]},"getAppointmentStatusStr":{"name":"getAppointmentStatusStr","parametersDataType":[],"returnDataType":["String"]},"setTimeOfArrival":{"name":"setTimeOfArrival","parametersDataType":["LocalTime"],"returnDataType":["void"]},"getDoctorWaitingPatient":{"name":"getDoctorWaitingPatient","parametersDataType":[],"returnDataType":["DoctorWaitingPatient"]},"setDoctorWaitingPatient":{"name":"setDoctorWaitingPatient","parametersDataType":["DoctorWaitingPatient"],"returnDataType":["void"]},"hasInvoice":{"name":"hasInvoice","parametersDataType":[],"returnDataType":["boolean"]},"setTimeBegin":{"name":"setTimeBegin","parametersDataType":["LocalTime"],"returnDataType":["void"]},"compareTo":{"name":"compareTo","parametersDataType":["Appointment"],"returnDataType":["int"]},"setAppointmentStatus":{"name":"setAppointmentStatus","parametersDataType":["int"],"returnDataType":["void"]},"setSlot":{"name":"setSlot","parametersDataType":["Slot"],"returnDataType":["void"]},"setPatient":{"name":"setPatient","parametersDataType":["Patient"],"returnDataType":["void"]},"setNotes":{"name":"setNotes","parametersDataType":["String"],"returnDataType":["void"]},"getDoctor":{"name":"getDoctor","parametersDataType":[],"returnDataType":["Doctor"]},"getNotes":{"name":"getNotes","parametersDataType":[],"returnDataType":["String"]},"foiRealizada":{"name":"foiRealizada","parametersDataType":[],"returnDataType":["boolean"]},"getDate":{"name":"getDate","parametersDataType":[],"returnDataType":["LocalDate"]},"getTimeBegin":{"name":"getTimeBegin","parametersDataType":[],"returnDataType":["LocalTime"]},"getTimeOfArrival":{"name":"getTimeOfArrival","parametersDataType":[],"returnDataType":["LocalTime"]},"setTimeEnd":{"name":"setTimeEnd","parametersDataType":["LocalTime"],"returnDataType":["void"]},"getTimeEnd":{"name":"getTimeEnd","parametersDataType":[],"returnDataType":["LocalTime"]},"getAppointmentId":{"name":"getAppointmentId","parametersDataType":[],"returnDataType":["Long"]},"setHasChecked":{"name":"setHasChecked","parametersDataType":["Boolean"],"returnDataType":["void"]},"getTimeOfArrivalStr":{"name":"getTimeOfArrivalStr","parametersDataType":[],"returnDataType":["String"]},"missedAppointment":{"name":"missedAppointment","parametersDataType":[],"returnDataType":["boolean"]},"getPatient":{"name":"getPatient","parametersDataType":[],"returnDataType":["Patient"]},"getAppointmentStatus":{"name":"getAppointmentStatus","parametersDataType":[],"returnDataType":["int"]},"getSlot":{"name":"getSlot","parametersDataType":[],"returnDataType":["Slot"]},"setDate":{"name":"setDate","parametersDataType":["LocalDate"],"returnDataType":["void"]}},"myMethods":{"getHasChecked":{"name":"getHasChecked","lineBegin":123,"lineEnd":125,"annotations":[],"returnDataType":["Boolean"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return hasChecked;\n}","methodInvocations":[]},"getAppointmentStatusStr":{"name":"getAppointmentStatusStr","lineBegin":151,"lineEnd":153,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return AppointmentState.searchState(appointmentStatus);\n}","methodInvocations":[]},"setTimeOfArrival":{"name":"setTimeOfArrival","lineBegin":119,"lineEnd":121,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"LocalTime","variable":"timeOfArrival","qualifedType":""}],"variables":[],"body":"{\n    this.timeOfArrival \u003d timeOfArrival;\n}","methodInvocations":[]},"getDoctorWaitingPatient":{"name":"getDoctorWaitingPatient","lineBegin":159,"lineEnd":161,"annotations":[],"returnDataType":["DoctorWaitingPatient"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return doctorWaitingPatient;\n}","methodInvocations":[]},"setDoctorWaitingPatient":{"name":"setDoctorWaitingPatient","lineBegin":163,"lineEnd":165,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"DoctorWaitingPatient","variable":"doctorWaitingPatient","qualifedType":""}],"variables":[],"body":"{\n    this.doctorWaitingPatient \u003d doctorWaitingPatient;\n}","methodInvocations":[]},"hasInvoice":{"name":"hasInvoice","lineBegin":172,"lineEnd":174,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return invoice !\u003d null;\n}","methodInvocations":[]},"setTimeBegin":{"name":"setTimeBegin","lineBegin":96,"lineEnd":98,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"LocalTime","variable":"timeBegin","qualifedType":""}],"variables":[],"body":"{\n    this.timeBegin \u003d timeBegin;\n}","methodInvocations":[]},"compareTo":{"name":"compareTo","lineBegin":181,"lineEnd":184,"annotations":["@Override"],"returnDataType":["int"],"identifier":[],"parametersDataType":[{"type":"Appointment","variable":"o","qualifedType":""}],"variables":[],"body":"{\n    return this.getSlot().compareTo(o.getSlot());\n}","methodInvocations":[{"scopeName":"o","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"this","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"this.getSlot()","methodName":"compareTo","targetClassName":"pt.iscte.hospital.entities.Slot"}]},"setAppointmentStatus":{"name":"setAppointmentStatus","lineBegin":155,"lineEnd":157,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"int","variable":"appointmentStatus","qualifedType":""}],"variables":[],"body":"{\n    this.appointmentStatus \u003d appointmentStatus;\n}","methodInvocations":[]},"setSlot":{"name":"setSlot","lineBegin":135,"lineEnd":137,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Slot","variable":"slot","qualifedType":""}],"variables":[],"body":"{\n    this.slot \u003d slot;\n}","methodInvocations":[]},"setPatient":{"name":"setPatient","lineBegin":80,"lineEnd":82,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Patient","variable":"patient","qualifedType":""}],"variables":[],"body":"{\n    this.patient \u003d patient;\n}","methodInvocations":[]},"setNotes":{"name":"setNotes","lineBegin":143,"lineEnd":145,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"notes","qualifedType":""}],"variables":[],"body":"{\n    this.notes \u003d notes;\n}","methodInvocations":[]},"getDoctor":{"name":"getDoctor","lineBegin":76,"lineEnd":78,"annotations":[],"returnDataType":["Doctor"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return this.slot.getDoctor();\n}","methodInvocations":[{"scopeName":"this.slot","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"}]},"getNotes":{"name":"getNotes","lineBegin":139,"lineEnd":141,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return notes;\n}","methodInvocations":[]},"foiRealizada":{"name":"foiRealizada","lineBegin":176,"lineEnd":178,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return appointmentStatus \u003d\u003d AppointmentState.REALIZADA.getStateNr();\n}","methodInvocations":[]},"getDate":{"name":"getDate","lineBegin":84,"lineEnd":86,"annotations":[],"returnDataType":["LocalDate"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return date;\n}","methodInvocations":[]},"getTimeBegin":{"name":"getTimeBegin","lineBegin":92,"lineEnd":94,"annotations":[],"returnDataType":["LocalTime"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return timeBegin;\n}","methodInvocations":[]},"getTimeOfArrival":{"name":"getTimeOfArrival","lineBegin":108,"lineEnd":110,"annotations":[],"returnDataType":["LocalTime"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return timeOfArrival;\n}","methodInvocations":[]},"setTimeEnd":{"name":"setTimeEnd","lineBegin":104,"lineEnd":106,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"LocalTime","variable":"timeEnd","qualifedType":""}],"variables":[],"body":"{\n    this.timeEnd \u003d timeEnd;\n}","methodInvocations":[]},"getTimeEnd":{"name":"getTimeEnd","lineBegin":100,"lineEnd":102,"annotations":[],"returnDataType":["LocalTime"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return timeEnd;\n}","methodInvocations":[]},"getAppointmentId":{"name":"getAppointmentId","lineBegin":68,"lineEnd":70,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return appointmentId;\n}","methodInvocations":[]},"setHasChecked":{"name":"setHasChecked","lineBegin":127,"lineEnd":129,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Boolean","variable":"hasChecked","qualifedType":""}],"variables":[],"body":"{\n    this.hasChecked \u003d hasChecked;\n}","methodInvocations":[]},"getTimeOfArrivalStr":{"name":"getTimeOfArrivalStr","lineBegin":112,"lineEnd":117,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    if (timeOfArrival \u003d\u003d null) {\n        return \"\";\n    }\n    return timeOfArrival.format(Calendar.TIME_FORMATTER);\n}","methodInvocations":[]},"missedAppointment":{"name":"missedAppointment","lineBegin":167,"lineEnd":170,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[],"variables":[{"type":"int","variable":"missedAppointmentNr","qualifedType":""}],"body":"{\n    int missedAppointmentNr \u003d AppointmentState.NAO_REALIZADA.getStateNr();\n    return appointmentStatus \u003d\u003d missedAppointmentNr;\n}","methodInvocations":[]},"getPatient":{"name":"getPatient","lineBegin":72,"lineEnd":74,"annotations":[],"returnDataType":["Patient"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return patient;\n}","methodInvocations":[]},"getAppointmentStatus":{"name":"getAppointmentStatus","lineBegin":147,"lineEnd":149,"annotations":[],"returnDataType":["int"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return appointmentStatus;\n}","methodInvocations":[]},"getSlot":{"name":"getSlot","lineBegin":131,"lineEnd":133,"annotations":[],"returnDataType":["Slot"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return slot;\n}","methodInvocations":[]},"setDate":{"name":"setDate","lineBegin":88,"lineEnd":90,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"{\n    this.date \u003d date;\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"this.slot","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"o","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"this","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"this.getSlot()","methodName":"compareTo","targetClassName":"pt.iscte.hospital.entities.Slot"}],"implementedTypes":["Comparable\u003cAppointment\u003e"],"extendedTypes":[],"imports":["lombok.Getter","lombok.Setter","lombok.ToString","org.springframework.format.annotation.DateTimeFormat","pt.iscte.hospital.entities.states.AppointmentState","pt.iscte.hospital.entities.waiting.DoctorWaitingPatient","pt.iscte.hospital.objects.utils.Calendar","javax.persistence","java.time.LocalDate","java.time.LocalTime"]},"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService":{"qualifiedName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService","begin":1,"end":24,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"],"methods":{"findAllByClosed":{"name":"findAllByClosed","parametersDataType":["boolean"],"returnDataType":["PatientWaitingAppointment"]},"findAllByClosedOrderByDate":{"name":"findAllByClosedOrderByDate","parametersDataType":["boolean"],"returnDataType":["PatientWaitingAppointment"]},"findAllByClosedAndRepliedToOffer":{"name":"findAllByClosedAndRepliedToOffer","parametersDataType":["boolean","boolean"],"returnDataType":["PatientWaitingAppointment"]},"findAllByPatientUserIdAndClosed":{"name":"findAllByPatientUserIdAndClosed","parametersDataType":["long","boolean"],"returnDataType":["PatientWaitingAppointment"]},"save":{"name":"save","parametersDataType":["PatientWaitingAppointment"],"returnDataType":["void"]},"saveWaitingListRequest":{"name":"saveWaitingListRequest","parametersDataType":["PatientWaitingAppointment"],"returnDataType":["void"]},"findByPatientWaitingAppointmentId":{"name":"findByPatientWaitingAppointmentId","parametersDataType":["Long"],"returnDataType":["PatientWaitingAppointment"]},"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["PatientWaitingAppointment"]}},"myMethods":{"findAllByClosed":{"name":"findAllByClosed","lineBegin":13,"lineEnd":13,"annotations":[],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[{"type":"boolean","variable":"closed","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByClosedOrderByDate":{"name":"findAllByClosedOrderByDate","lineBegin":21,"lineEnd":21,"annotations":[],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[{"type":"boolean","variable":"closed","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByClosedAndRepliedToOffer":{"name":"findAllByClosedAndRepliedToOffer","lineBegin":15,"lineEnd":15,"annotations":[],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[{"type":"boolean","variable":"closed","qualifedType":""},{"type":"boolean","variable":"repliedToOffer","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByPatientUserIdAndClosed":{"name":"findAllByPatientUserIdAndClosed","lineBegin":17,"lineEnd":17,"annotations":[],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[{"type":"long","variable":"userId","qualifedType":""},{"type":"boolean","variable":"closed","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"save":{"name":"save","lineBegin":19,"lineEnd":19,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"PatientWaitingAppointment","variable":"patientWaitingAppointment","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"saveWaitingListRequest":{"name":"saveWaitingListRequest","lineBegin":9,"lineEnd":9,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"PatientWaitingAppointment","variable":"patientWaitingAppointment","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByPatientWaitingAppointmentId":{"name":"findByPatientWaitingAppointmentId","lineBegin":23,"lineEnd":23,"annotations":[],"returnDataType":["PatientWaitingAppointment"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"patientWaitingAppointmentId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAll":{"name":"findAll","lineBegin":11,"lineEnd":11,"annotations":[],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","java.util.List"]},"pt.iscte.hospital.threads.CreateSlots":{"qualifiedName":"pt.iscte.hospital.threads.CreateSlots","begin":1,"end":92,"isInterface":false,"annotations":["@Component"],"variables":["SlotService slotService","DoctorService doctorService","LocalDate todayDate","LocalDate nextMonth","int duration","List\u003cTimeInterval\u003e timeIntervalList","List\u003cDayOfWeek\u003e weekDaysList","int year","int month","List\u003cDoctor\u003e doctors","LocalDate todayDate","int duration","List\u003cTimeInterval\u003e timeIntervalList","List\u003cDayOfWeek\u003e weekDaysList","int year","int month","List\u003cDoctor\u003e doctors"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"SlotService","variable":"slotService","lineBegin":19,"lineEnd":20},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"DoctorService","variable":"doctorService","lineBegin":21,"lineEnd":22}],"dependencies":["pt.iscte.hospital.services.SlotService","pt.iscte.hospital.services.user.DoctorService","pt.iscte.hospital.objects.utils.TimeInterval","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.objects.utils.TimeInterval","pt.iscte.hospital.entities.Doctor"],"methods":{"createSlotsBeginOfNextMonth":{"name":"createSlotsBeginOfNextMonth","parametersDataType":[],"returnDataType":["void"]},"createSlotsCurrentMonth":{"name":"createSlotsCurrentMonth","parametersDataType":[],"returnDataType":["void"]}},"myMethods":{"createSlotsBeginOfNextMonth":{"name":"createSlotsBeginOfNextMonth","lineBegin":24,"lineEnd":57,"annotations":["@Scheduled(fixedRate \u003d 60000000)","@Scheduled(cron \u003d \"0 0 0 1 1/1 *\")"],"returnDataType":["void"],"identifier":[],"parametersDataType":[],"variables":[{"type":"LocalDate","variable":"todayDate","qualifedType":""},{"type":"LocalDate","variable":"nextMonth","qualifedType":""},{"type":"int","variable":"duration","qualifedType":""},{"type":"List\u003cTimeInterval\u003e","variable":"timeIntervalList","qualifedType":"pt.iscte.hospital.objects.utils.TimeInterval"},{"type":"int","variable":"year","qualifedType":""},{"type":"int","variable":"month","qualifedType":""},{"type":"List\u003cDoctor\u003e","variable":"doctors","qualifedType":"pt.iscte.hospital.entities.Doctor"}],"body":"{\n    // For generating cron expressions: cronmaker.com\n    LocalDate todayDate \u003d LocalDate.now();\n    LocalDate nextMonth \u003d todayDate.plusMonths(1);\n    int duration \u003d 60 * 2;\n    List\u003cTimeInterval\u003e timeIntervalList \u003d new ArrayList\u003c\u003e();\n    List\u003cDayOfWeek\u003e weekDaysList \u003d new ArrayList\u003c\u003e();\n    int year \u003d nextMonth.getYear();\n    int month \u003d nextMonth.getMonthValue();\n    List\u003cDoctor\u003e doctors \u003d doctorService.findAll();\n    timeIntervalList.add(new TimeInterval(LocalTime.of(9, 0), LocalTime.of(12, 0)));\n    timeIntervalList.add(new TimeInterval(LocalTime.of(13, 0), LocalTime.of(17, 0)));\n    weekDaysList.add(DayOfWeek.MONDAY);\n    weekDaysList.add(DayOfWeek.TUESDAY);\n    weekDaysList.add(DayOfWeek.WEDNESDAY);\n    weekDaysList.add(DayOfWeek.THURSDAY);\n    weekDaysList.add(DayOfWeek.FRIDAY);\n    weekDaysList.add(DayOfWeek.SATURDAY);\n    weekDaysList.add(DayOfWeek.SUNDAY);\n    slotService.generateSlots(duration, timeIntervalList, weekDaysList, year, month, doctors);\n}","methodInvocations":[{"scopeName":"todayDate","methodName":"plusMonths","targetClassName":""},{"scopeName":"nextMonth","methodName":"getYear","targetClassName":""},{"scopeName":"nextMonth","methodName":"getMonthValue","targetClassName":""},{"scopeName":"doctorService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"timeIntervalList","methodName":"add","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"timeIntervalList","methodName":"add","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"slotService","methodName":"generateSlots","targetClassName":"pt.iscte.hospital.services.SlotService"}]},"createSlotsCurrentMonth":{"name":"createSlotsCurrentMonth","lineBegin":60,"lineEnd":91,"annotations":["@Scheduled(fixedRate \u003d 60000000)"],"returnDataType":["void"],"identifier":[],"parametersDataType":[],"variables":[{"type":"LocalDate","variable":"todayDate","qualifedType":""},{"type":"int","variable":"duration","qualifedType":""},{"type":"List\u003cTimeInterval\u003e","variable":"timeIntervalList","qualifedType":"pt.iscte.hospital.objects.utils.TimeInterval"},{"type":"int","variable":"year","qualifedType":""},{"type":"int","variable":"month","qualifedType":""},{"type":"List\u003cDoctor\u003e","variable":"doctors","qualifedType":"pt.iscte.hospital.entities.Doctor"}],"body":"{\n    // For generating cron expressions: cronmaker.com\n    LocalDate todayDate \u003d LocalDate.now();\n    int duration \u003d 60 * 2;\n    List\u003cTimeInterval\u003e timeIntervalList \u003d new ArrayList\u003c\u003e();\n    List\u003cDayOfWeek\u003e weekDaysList \u003d new ArrayList\u003c\u003e();\n    int year \u003d todayDate.getYear();\n    int month \u003d todayDate.getMonthValue();\n    List\u003cDoctor\u003e doctors \u003d doctorService.findAll();\n    timeIntervalList.add(new TimeInterval(LocalTime.of(9, 0), LocalTime.of(12, 0)));\n    timeIntervalList.add(new TimeInterval(LocalTime.of(13, 0), LocalTime.of(17, 0)));\n    weekDaysList.add(DayOfWeek.MONDAY);\n    weekDaysList.add(DayOfWeek.TUESDAY);\n    weekDaysList.add(DayOfWeek.WEDNESDAY);\n    weekDaysList.add(DayOfWeek.THURSDAY);\n    weekDaysList.add(DayOfWeek.FRIDAY);\n    weekDaysList.add(DayOfWeek.SATURDAY);\n    weekDaysList.add(DayOfWeek.SUNDAY);\n    slotService.generateSlots(duration, timeIntervalList, weekDaysList, year, month, doctors);\n}","methodInvocations":[{"scopeName":"todayDate","methodName":"getYear","targetClassName":""},{"scopeName":"todayDate","methodName":"getMonthValue","targetClassName":""},{"scopeName":"doctorService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"timeIntervalList","methodName":"add","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"timeIntervalList","methodName":"add","targetClassName":"pt.iscte.hospital.objects.utils.TimeInterval"},{"scopeName":"slotService","methodName":"generateSlots","targetClassName":"pt.iscte.hospital.services.SlotService"}]}},"methodInvocations":[{"scopeName":"doctorService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"slotService","methodName":"generateSlots","targetClassName":"pt.iscte.hospital.services.SlotService"},{"scopeName":"doctorService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"slotService","methodName":"generateSlots","targetClassName":"pt.iscte.hospital.services.SlotService"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.scheduling.annotation.Scheduled","org.springframework.stereotype.Component","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.objects.utils.TimeInterval","pt.iscte.hospital.services.SlotService","pt.iscte.hospital.services.user.DoctorService","java.time.DayOfWeek","java.time.LocalDate","java.time.LocalTime","java.util.ArrayList","java.util.List"]},"pt.iscte.hospital.repositories.MessageRepository":{"qualifiedName":"pt.iscte.hospital.repositories.MessageRepository","begin":1,"end":25,"isInterface":true,"annotations":["@Repository"],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message"],"methods":{"findAllByUserUserIdOrderByDateDesc":{"name":"findAllByUserUserIdOrderByDateDesc","parametersDataType":["Long"],"returnDataType":["Message"]},"findAllByUserUserIdAndReadMsgOrderByDateDesc":{"name":"findAllByUserUserIdAndReadMsgOrderByDateDesc","parametersDataType":["Long","boolean"],"returnDataType":["Message"]},"findAllByUserUserIdAndDateOrderByDateDesc":{"name":"findAllByUserUserIdAndDateOrderByDateDesc","parametersDataType":["Long","LocalDate"],"returnDataType":["Message"]},"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc":{"name":"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc","parametersDataType":["Long","LocalDate","boolean"],"returnDataType":["Message"]},"findByMessageId":{"name":"findByMessageId","parametersDataType":["Long"],"returnDataType":["Message"]},"countAllByUserUserIdAndReadMsg":{"name":"countAllByUserUserIdAndReadMsg","parametersDataType":["Long","boolean"],"returnDataType":["Long"]}},"myMethods":{"findAllByUserUserIdOrderByDateDesc":{"name":"findAllByUserUserIdOrderByDateDesc","lineBegin":12,"lineEnd":12,"annotations":[],"returnDataType":["List\u003cMessage\u003e"],"identifier":["List","Message"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByUserUserIdAndReadMsgOrderByDateDesc":{"name":"findAllByUserUserIdAndReadMsgOrderByDateDesc","lineBegin":20,"lineEnd":22,"annotations":[],"returnDataType":["List\u003cMessage\u003e"],"identifier":["List","Message"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"boolean","variable":"hasRead","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByUserUserIdAndDateOrderByDateDesc":{"name":"findAllByUserUserIdAndDateOrderByDateDesc","lineBegin":13,"lineEnd":15,"annotations":[],"returnDataType":["List\u003cMessage\u003e"],"identifier":["List","Message"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc":{"name":"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc","lineBegin":16,"lineEnd":19,"annotations":[],"returnDataType":["List\u003cMessage\u003e"],"identifier":["List","Message"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"boolean","variable":"hasRead","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByMessageId":{"name":"findByMessageId","lineBegin":24,"lineEnd":24,"annotations":[],"returnDataType":["Message"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"messageId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"countAllByUserUserIdAndReadMsg":{"name":"countAllByUserUserIdAndReadMsg","lineBegin":23,"lineEnd":23,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"boolean","variable":"hasRead","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["JpaRepository\u003cMessage, Long\u003e"],"imports":["org.springframework.data.jpa.repository.JpaRepository","org.springframework.stereotype.Repository","pt.iscte.hospital.entities.Message","java.time.LocalDate","java.util.List"]},"pt.iscte.hospital.services.MessageServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.MessageServiceImpl","begin":1,"end":89,"isInterface":false,"annotations":["@Service"],"variables":["MessageRepository messageRepository","Message msg","Message msg","Long count"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private","identifier":[],"type":"MessageRepository","variable":"messageRepository","lineBegin":14,"lineEnd":15}],"dependencies":["pt.iscte.hospital.repositories.MessageRepository","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Message"],"methods":{"findAllByUserUserIdOrderByDateDesc":{"name":"findAllByUserUserIdOrderByDateDesc","parametersDataType":["Long"],"returnDataType":["Message"]},"findAllByUserUserIdAndReadMsgOrderByDateDesc":{"name":"findAllByUserUserIdAndReadMsgOrderByDateDesc","parametersDataType":["Long","boolean"],"returnDataType":["Message"]},"findAllByUserUserIdAndDateOrderByDateDesc":{"name":"findAllByUserUserIdAndDateOrderByDateDesc","parametersDataType":["Long","LocalDate"],"returnDataType":["Message"]},"hasUnreadMessages":{"name":"hasUnreadMessages","parametersDataType":["Long"],"returnDataType":["boolean"]},"save":{"name":"save","parametersDataType":["Message"],"returnDataType":["void"]},"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc":{"name":"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc","parametersDataType":["Long","LocalDate","boolean"],"returnDataType":["Message"]},"createMessage":{"name":"createMessage","parametersDataType":["String","String","User"],"returnDataType":["void"]},"deleteMessageById":{"name":"deleteMessageById","parametersDataType":["Long"],"returnDataType":["void"]},"markMessageHasReadById":{"name":"markMessageHasReadById","parametersDataType":["Long"],"returnDataType":["void"]},"delete":{"name":"delete","parametersDataType":["Message"],"returnDataType":["void"]},"countAllByUserUserIdAndReadMsg":{"name":"countAllByUserUserIdAndReadMsg","parametersDataType":["Long","boolean"],"returnDataType":["Long"]}},"myMethods":{"findAllByUserUserIdOrderByDateDesc":{"name":"findAllByUserUserIdOrderByDateDesc","lineBegin":17,"lineEnd":20,"annotations":["@Override"],"returnDataType":["List\u003cMessage\u003e"],"identifier":["List","Message"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"{\n    return messageRepository.findAllByUserUserIdOrderByDateDesc(userId);\n}","methodInvocations":[{"scopeName":"messageRepository","methodName":"findAllByUserUserIdOrderByDateDesc","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"}]},"findAllByUserUserIdAndReadMsgOrderByDateDesc":{"name":"findAllByUserUserIdAndReadMsgOrderByDateDesc","lineBegin":38,"lineEnd":45,"annotations":["@Override"],"returnDataType":["List\u003cMessage\u003e"],"identifier":["List","Message"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"boolean","variable":"hasRead","qualifedType":""}],"variables":[],"body":"{\n    return messageRepository.findAllByUserUserIdAndReadMsgOrderByDateDesc(userId, hasRead);\n}","methodInvocations":[{"scopeName":"messageRepository","methodName":"findAllByUserUserIdAndReadMsgOrderByDateDesc","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"}]},"findAllByUserUserIdAndDateOrderByDateDesc":{"name":"findAllByUserUserIdAndDateOrderByDateDesc","lineBegin":22,"lineEnd":25,"annotations":["@Override"],"returnDataType":["List\u003cMessage\u003e"],"identifier":["List","Message"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"{\n    return messageRepository.findAllByUserUserIdAndDateOrderByDateDesc(userId, date);\n}","methodInvocations":[{"scopeName":"messageRepository","methodName":"findAllByUserUserIdAndDateOrderByDateDesc","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"}]},"hasUnreadMessages":{"name":"hasUnreadMessages","lineBegin":74,"lineEnd":78,"annotations":["@Override"],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[{"type":"Long","variable":"count","qualifedType":""}],"body":"{\n    Long count \u003d messageRepository.countAllByUserUserIdAndReadMsg(userId, false);\n    return count !\u003d 0;\n}","methodInvocations":[{"scopeName":"messageRepository","methodName":"countAllByUserUserIdAndReadMsg","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"}]},"save":{"name":"save","lineBegin":80,"lineEnd":83,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Message","variable":"message","qualifedType":""}],"variables":[],"body":"{\n    messageRepository.save(message);\n}","methodInvocations":[{"scopeName":"messageRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"}]},"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc":{"name":"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc","lineBegin":27,"lineEnd":36,"annotations":["@Override"],"returnDataType":["List\u003cMessage\u003e"],"identifier":["List","Message"],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"boolean","variable":"hasRead","qualifedType":""}],"variables":[],"body":"{\n    return messageRepository.findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc(userId, date, hasRead);\n}","methodInvocations":[{"scopeName":"messageRepository","methodName":"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"}]},"createMessage":{"name":"createMessage","lineBegin":56,"lineEnd":59,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"subject","qualifedType":""},{"type":"String","variable":"message","qualifedType":""},{"type":"User","variable":"userReceiver","qualifedType":""}],"variables":[],"body":"{\n    save(new Message(subject, message, userReceiver));\n}","methodInvocations":[]},"deleteMessageById":{"name":"deleteMessageById","lineBegin":61,"lineEnd":65,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"msgId","qualifedType":""}],"variables":[{"type":"Message","variable":"msg","qualifedType":""}],"body":"{\n    Message msg \u003d messageRepository.findByMessageId(msgId);\n    delete(msg);\n}","methodInvocations":[{"scopeName":"messageRepository","methodName":"findByMessageId","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"}]},"markMessageHasReadById":{"name":"markMessageHasReadById","lineBegin":67,"lineEnd":72,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"msgId","qualifedType":""}],"variables":[{"type":"Message","variable":"msg","qualifedType":""}],"body":"{\n    Message msg \u003d messageRepository.findByMessageId(msgId);\n    msg.setReadMsg(true);\n    save(msg);\n}","methodInvocations":[{"scopeName":"messageRepository","methodName":"findByMessageId","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"},{"scopeName":"msg","methodName":"setReadMsg","targetClassName":"pt.iscte.hospital.entities.Message"}]},"delete":{"name":"delete","lineBegin":85,"lineEnd":88,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Message","variable":"message","qualifedType":""}],"variables":[],"body":"{\n    messageRepository.delete(message);\n}","methodInvocations":[{"scopeName":"messageRepository","methodName":"delete","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"}]},"countAllByUserUserIdAndReadMsg":{"name":"countAllByUserUserIdAndReadMsg","lineBegin":47,"lineEnd":54,"annotations":["@Override"],"returnDataType":["Long"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""},{"type":"boolean","variable":"hasRead","qualifedType":""}],"variables":[],"body":"{\n    return messageRepository.countAllByUserUserIdAndReadMsg(userId, hasRead);\n}","methodInvocations":[{"scopeName":"messageRepository","methodName":"countAllByUserUserIdAndReadMsg","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"}]}},"methodInvocations":[{"scopeName":"messageRepository","methodName":"findAllByUserUserIdOrderByDateDesc","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"},{"scopeName":"messageRepository","methodName":"findAllByUserUserIdAndDateOrderByDateDesc","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"},{"scopeName":"messageRepository","methodName":"findAllByUserUserIdAndDateAndReadMsgOrderByDateDesc","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"},{"scopeName":"messageRepository","methodName":"findAllByUserUserIdAndReadMsgOrderByDateDesc","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"},{"scopeName":"messageRepository","methodName":"countAllByUserUserIdAndReadMsg","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"},{"scopeName":"messageRepository","methodName":"findByMessageId","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"},{"scopeName":"messageRepository","methodName":"findByMessageId","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"},{"scopeName":"msg","methodName":"setReadMsg","targetClassName":"pt.iscte.hospital.entities.Message"},{"scopeName":"messageRepository","methodName":"countAllByUserUserIdAndReadMsg","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"},{"scopeName":"messageRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"},{"scopeName":"messageRepository","methodName":"delete","targetClassName":"pt.iscte.hospital.repositories.MessageRepository"}],"implementedTypes":["pt.iscte.hospital.services.MessageService","MessageService"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Service","pt.iscte.hospital.entities.Message","pt.iscte.hospital.entities.User","pt.iscte.hospital.repositories.MessageRepository","java.time.LocalDate","java.util.List"]},"pt.iscte.hospital.repositories.user.DoctorRepository":{"qualifiedName":"pt.iscte.hospital.repositories.user.DoctorRepository","begin":1,"end":19,"isInterface":true,"annotations":["@Repository"],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality"],"methods":{"findAllByNameContainingIgnoreCase":{"name":"findAllByNameContainingIgnoreCase","parametersDataType":["String"],"returnDataType":["Doctor"]},"findByUserId":{"name":"findByUserId","parametersDataType":["Long"],"returnDataType":["Doctor"]},"findAllBySpecialityOrderByNameAsc":{"name":"findAllBySpecialityOrderByNameAsc","parametersDataType":["Speciality"],"returnDataType":["Doctor"]},"findAllByNameContainingIgnoreCaseAndSpeciality":{"name":"findAllByNameContainingIgnoreCaseAndSpeciality","parametersDataType":["String","Speciality"],"returnDataType":["Doctor"]},"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["Doctor"]},"findAllBySpeciality":{"name":"findAllBySpeciality","parametersDataType":["Speciality"],"returnDataType":["Doctor"]}},"myMethods":{"findAllByNameContainingIgnoreCase":{"name":"findAllByNameContainingIgnoreCase","lineBegin":17,"lineEnd":17,"annotations":[],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByUserId":{"name":"findByUserId","lineBegin":13,"lineEnd":13,"annotations":[],"returnDataType":["Doctor"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"doctorId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllBySpecialityOrderByNameAsc":{"name":"findAllBySpecialityOrderByNameAsc","lineBegin":16,"lineEnd":16,"annotations":[],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"Speciality","variable":"speciality","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByNameContainingIgnoreCaseAndSpeciality":{"name":"findAllByNameContainingIgnoreCaseAndSpeciality","lineBegin":18,"lineEnd":18,"annotations":[],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""},{"type":"Speciality","variable":"speciality","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAll":{"name":"findAll","lineBegin":14,"lineEnd":14,"annotations":[],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"findAllBySpeciality":{"name":"findAllBySpeciality","lineBegin":15,"lineEnd":15,"annotations":[],"returnDataType":["List\u003cDoctor\u003e"],"identifier":["List","Doctor"],"parametersDataType":[{"type":"Speciality","variable":"speciality","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["JpaRepository\u003cDoctor, Long\u003e"],"imports":["org.springframework.data.jpa.repository.JpaRepository","org.springframework.stereotype.Repository","pt.iscte.hospital.entities.Doctor","pt.iscte.hospital.entities.Speciality","javax.print.Doc","java.util.List"]},"pt.iscte.hospital.security.CustomAuthenticationProvider":{"qualifiedName":"pt.iscte.hospital.security.CustomAuthenticationProvider","begin":1,"end":50,"isInterface":false,"annotations":["@Component"],"variables":["UserService userService","PasswordEncoder passwordEncoder","String username","String password","List\u003cGrantedAuthority\u003e roles"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"UserService","variable":"userService","lineBegin":18,"lineEnd":19},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"PasswordEncoder","variable":"passwordEncoder","lineBegin":21,"lineEnd":22}],"dependencies":["pt.iscte.hospital.services.user.UserService"],"methods":{"authenticate":{"name":"authenticate","parametersDataType":["Authentication"],"returnDataType":["Authentication"]},"supports":{"name":"supports","parametersDataType":[],"returnDataType":["boolean"]}},"myMethods":{"authenticate":{"name":"authenticate","lineBegin":24,"lineEnd":44,"annotations":["@Override"],"returnDataType":["Authentication"],"identifier":[],"parametersDataType":[{"type":"Authentication","variable":"authentication","qualifedType":""}],"variables":[{"type":"String","variable":"username","qualifedType":""},{"type":"String","variable":"password","qualifedType":""}],"body":"{\n    String username \u003d authentication.getName();\n    String password \u003d authentication.getCredentials().toString();\n    if (userService.validateUser(username, password)) {\n        // use the credentials\n        // and authenticate against the third-party system\n        List\u003cGrantedAuthority\u003e roles \u003d userService.getAuthorities(username);\n        return new UsernamePasswordAuthenticationToken(username, password, // SimpleGrantedAuthority \"ROLE_\"\n        roles);\n    } else {\n        throw new BadCredentialsException(\"Invalid username/password\");\n    }\n}","methodInvocations":[{"scopeName":"userService","methodName":"validateUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService","methodName":"getAuthorities","targetClassName":"pt.iscte.hospital.services.user.UserService"}]},"supports":{"name":"supports","lineBegin":46,"lineEnd":49,"annotations":["@Override"],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[{"type":"Class\u003c?\u003e","variable":"authentication","qualifedType":""}],"variables":[],"body":"{\n    return authentication.equals(UsernamePasswordAuthenticationToken.class);\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"userService","methodName":"validateUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userService","methodName":"getAuthorities","targetClassName":"pt.iscte.hospital.services.user.UserService"}],"implementedTypes":["AuthenticationProvider"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.security.authentication.AuthenticationProvider","org.springframework.security.authentication.BadCredentialsException","org.springframework.security.authentication.UsernamePasswordAuthenticationToken","org.springframework.security.core.Authentication","org.springframework.security.core.AuthenticationException","org.springframework.security.core.GrantedAuthority","org.springframework.security.crypto.password.PasswordEncoder","org.springframework.stereotype.Component","pt.iscte.hospital.services.user.UserService","java.util.List"]},"pt.iscte.hospital.controllers.RESTControllers.MessageRestController":{"qualifiedName":"pt.iscte.hospital.controllers.RESTControllers.MessageRestController","begin":1,"end":24,"isInterface":false,"annotations":["@RestController"],"variables":["Common common","MessageService messageService","User currentUser"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"Common","variable":"common","lineBegin":13,"lineEnd":14},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"MessageService","variable":"messageService","lineBegin":15,"lineEnd":16}],"dependencies":["pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.services.MessageService","pt.iscte.hospital.entities.User"],"methods":{"hasUnreadMessages":{"name":"hasUnreadMessages","parametersDataType":[],"returnDataType":["boolean"]}},"myMethods":{"hasUnreadMessages":{"name":"hasUnreadMessages","lineBegin":18,"lineEnd":23,"annotations":["@GetMapping(value \u003d \"/user/messages/rest/has-unread-messages/\")"],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[],"variables":[{"type":"User","variable":"currentUser","qualifedType":""}],"body":"{\n    User currentUser \u003d common.currentUser();\n    return messageService.hasUnreadMessages(currentUser.getUserId());\n}","methodInvocations":[{"scopeName":"common","methodName":"currentUser","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"currentUser","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"messageService","methodName":"hasUnreadMessages","targetClassName":"pt.iscte.hospital.services.MessageService"}]}},"methodInvocations":[{"scopeName":"common","methodName":"currentUser","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"currentUser","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"messageService","methodName":"hasUnreadMessages","targetClassName":"pt.iscte.hospital.services.MessageService"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.web.bind.annotation.GetMapping","org.springframework.web.bind.annotation.RestController","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.User","pt.iscte.hospital.services.MessageService"]},"pt.iscte.hospital.services.invoice.InvoiceFilter":{"qualifiedName":"pt.iscte.hospital.services.invoice.InvoiceFilter","begin":1,"end":59,"isInterface":false,"annotations":["@Component","@Getter","@Setter","@ToString"],"variables":["Long nif","String status","LocalDate issuedBefore","LocalDate issuedAfter","LocalDate paidBefore","LocalDate paidAfter","LocalDate dueBefore","LocalDate dueAfter","String search","String filter"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"Long","variable":"nif","lineBegin":16,"lineEnd":16},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"status","lineBegin":17,"lineEnd":17},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalDate","variable":"issuedBefore","lineBegin":18,"lineEnd":18},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalDate","variable":"issuedAfter","lineBegin":19,"lineEnd":19},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalDate","variable":"paidBefore","lineBegin":20,"lineEnd":20},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalDate","variable":"paidAfter","lineBegin":21,"lineEnd":21},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalDate","variable":"dueBefore","lineBegin":22,"lineEnd":22},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalDate","variable":"dueAfter","lineBegin":23,"lineEnd":23},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"search","lineBegin":24,"lineEnd":24}],"dependencies":[],"methods":{"filtros":{"name":"filtros","parametersDataType":[],"returnDataType":["String"]}},"myMethods":{"filtros":{"name":"filtros","lineBegin":26,"lineEnd":57,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[{"type":"String","variable":"filter","qualifedType":""}],"body":"{\n    String filter \u003d \"?\";\n    if (nif !\u003d null) {\n        filter +\u003d \"nif\u003d\" + nif + \"\u0026\";\n    }\n    if (status !\u003d null) {\n        filter +\u003d \"status\u003d\" + status;\n    }\n    if (issuedBefore !\u003d null) {\n        filter +\u003d \"issuedBefore\u003d\" + issuedBefore.toString() + \"\u0026\";\n    }\n    if (issuedAfter !\u003d null) {\n        filter +\u003d \"issuedAfter\u003d\" + issuedAfter.toString() + \"\u0026\";\n    }\n    if (paidBefore !\u003d null) {\n        filter +\u003d \"paidBefore\u003d\" + paidBefore.toString() + \"\u0026\";\n    }\n    if (paidAfter !\u003d null) {\n        filter +\u003d \"paidAfter\u003d\" + paidAfter.toString() + \"\u0026\";\n    }\n    if (dueBefore !\u003d null) {\n        filter +\u003d \"dueBefore\u003d\" + dueBefore.toString() + \"\u0026\";\n    }\n    if (dueAfter !\u003d null) {\n        filter +\u003d \"dueAfter\u003d\" + dueAfter.toString() + \"\u0026\";\n    }\n    if (search !\u003d null) {\n        filter +\u003d \"search\u003d\" + search;\n    }\n    return filter;\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["lombok.Getter","lombok.Setter","lombok.ToString","org.springframework.stereotype.Component","java.time.LocalDate"]},"pt.iscte.hospital.security.AuthenticationFacade":{"qualifiedName":"pt.iscte.hospital.security.AuthenticationFacade","begin":1,"end":14,"isInterface":false,"annotations":["@Component"],"variables":[],"instance_variables":[],"dependencies":[],"methods":{"getAuthentication":{"name":"getAuthentication","parametersDataType":[],"returnDataType":["Authentication"]}},"myMethods":{"getAuthentication":{"name":"getAuthentication","lineBegin":10,"lineEnd":13,"annotations":["@Override"],"returnDataType":["Authentication"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return SecurityContextHolder.getContext().getAuthentication();\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":["pt.iscte.hospital.security.IAuthenticationFacade","IAuthenticationFacade"],"extendedTypes":[],"imports":["org.springframework.security.core.Authentication","org.springframework.security.core.context.SecurityContextHolder","org.springframework.stereotype.Component"]},"pt.iscte.hospital.services.validation.UserValidationService":{"qualifiedName":"pt.iscte.hospital.services.validation.UserValidationService","begin":1,"end":66,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.entities.User","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.validation.UserValidationService"],"methods":{"validSex":{"name":"validSex","parametersDataType":[],"returnDataType":["UserValidationService"]},"validAddress":{"name":"validAddress","parametersDataType":[],"returnDataType":["UserValidationService"]},"validPatientNumber":{"name":"validPatientNumber","parametersDataType":[],"returnDataType":["UserValidationService"]},"validAccount":{"name":"validAccount","parametersDataType":[],"returnDataType":["UserValidationService"]},"notValidImageSize":{"name":"notValidImageSize","parametersDataType":[],"returnDataType":["UserValidationService"]},"validCity":{"name":"validCity","parametersDataType":[],"returnDataType":["UserValidationService"]},"validSpeciality":{"name":"validSpeciality","parametersDataType":["String"],"returnDataType":["UserValidationService"]},"validDocumentType":{"name":"validDocumentType","parametersDataType":[],"returnDataType":["UserValidationService"]},"notValidImageType":{"name":"notValidImageType","parametersDataType":[],"returnDataType":["UserValidationService"]},"validPassword":{"name":"validPassword","parametersDataType":[],"returnDataType":["UserValidationService"]},"validEmail":{"name":"validEmail","parametersDataType":[],"returnDataType":["UserValidationService"]},"validLicenseNumber":{"name":"validLicenseNumber","parametersDataType":[],"returnDataType":["UserValidationService"]},"setUser":{"name":"setUser","parametersDataType":["User"],"returnDataType":["UserValidationService"]},"validPhone":{"name":"validPhone","parametersDataType":[],"returnDataType":["UserValidationService"]},"validEmail2":{"name":"validEmail2","parametersDataType":[],"returnDataType":["UserValidationService"]},"validNationality":{"name":"validNationality","parametersDataType":[],"returnDataType":["UserValidationService"]},"validNif":{"name":"validNif","parametersDataType":[],"returnDataType":["UserValidationService"]},"isValid":{"name":"isValid","parametersDataType":[],"returnDataType":["boolean"]},"clear":{"name":"clear","parametersDataType":[],"returnDataType":["UserValidationService"]},"validDocumentNumber":{"name":"validDocumentNumber","parametersDataType":[],"returnDataType":["UserValidationService"]},"validNifUnique":{"name":"validNifUnique","parametersDataType":[],"returnDataType":["UserValidationService"]},"notValidPhotoUpload":{"name":"notValidPhotoUpload","parametersDataType":[],"returnDataType":["UserValidationService"]},"getErrorModelMap":{"name":"getErrorModelMap","parametersDataType":[],"returnDataType":["ModelMap"]},"validPostCode":{"name":"validPostCode","parametersDataType":[],"returnDataType":["UserValidationService"]},"validPatientNumberUnique":{"name":"validPatientNumberUnique","parametersDataType":[],"returnDataType":["UserValidationService"]},"validName":{"name":"validName","parametersDataType":[],"returnDataType":["UserValidationService"]},"validDocumentNumberUnique":{"name":"validDocumentNumberUnique","parametersDataType":[],"returnDataType":["UserValidationService"]},"validBirthday":{"name":"validBirthday","parametersDataType":[],"returnDataType":["UserValidationService"]},"validUsername":{"name":"validUsername","parametersDataType":[],"returnDataType":["UserValidationService"]},"samePassword":{"name":"samePassword","parametersDataType":["String"],"returnDataType":["UserValidationService"]}},"myMethods":{"validSex":{"name":"validSex","lineBegin":19,"lineEnd":19,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validAddress":{"name":"validAddress","lineBegin":43,"lineEnd":43,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validPatientNumber":{"name":"validPatientNumber","lineBegin":29,"lineEnd":29,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validAccount":{"name":"validAccount","lineBegin":37,"lineEnd":37,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"notValidImageSize":{"name":"notValidImageSize","lineBegin":55,"lineEnd":55,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validCity":{"name":"validCity","lineBegin":35,"lineEnd":35,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validSpeciality":{"name":"validSpeciality","lineBegin":59,"lineEnd":59,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[{"type":"String","variable":"speciality","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"validDocumentType":{"name":"validDocumentType","lineBegin":25,"lineEnd":25,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"notValidImageType":{"name":"notValidImageType","lineBegin":53,"lineEnd":53,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validPassword":{"name":"validPassword","lineBegin":13,"lineEnd":13,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validEmail":{"name":"validEmail","lineBegin":21,"lineEnd":21,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validLicenseNumber":{"name":"validLicenseNumber","lineBegin":57,"lineEnd":57,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"setUser":{"name":"setUser","lineBegin":7,"lineEnd":7,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[{"type":"User","variable":"user","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"validPhone":{"name":"validPhone","lineBegin":11,"lineEnd":11,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validEmail2":{"name":"validEmail2","lineBegin":33,"lineEnd":33,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validNationality":{"name":"validNationality","lineBegin":41,"lineEnd":41,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validNif":{"name":"validNif","lineBegin":31,"lineEnd":31,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"isValid":{"name":"isValid","lineBegin":61,"lineEnd":61,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"clear":{"name":"clear","lineBegin":65,"lineEnd":65,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validDocumentNumber":{"name":"validDocumentNumber","lineBegin":27,"lineEnd":27,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validNifUnique":{"name":"validNifUnique","lineBegin":47,"lineEnd":47,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"notValidPhotoUpload":{"name":"notValidPhotoUpload","lineBegin":51,"lineEnd":51,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"getErrorModelMap":{"name":"getErrorModelMap","lineBegin":63,"lineEnd":63,"annotations":[],"returnDataType":["ModelMap"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validPostCode":{"name":"validPostCode","lineBegin":17,"lineEnd":17,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validPatientNumberUnique":{"name":"validPatientNumberUnique","lineBegin":49,"lineEnd":49,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validName":{"name":"validName","lineBegin":9,"lineEnd":9,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validDocumentNumberUnique":{"name":"validDocumentNumberUnique","lineBegin":45,"lineEnd":45,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validBirthday":{"name":"validBirthday","lineBegin":39,"lineEnd":39,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validUsername":{"name":"validUsername","lineBegin":23,"lineEnd":23,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"samePassword":{"name":"samePassword","lineBegin":15,"lineEnd":15,"annotations":[],"returnDataType":["UserValidationService"],"identifier":[],"parametersDataType":[{"type":"String","variable":"passwordRetyped","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.ui.ModelMap","pt.iscte.hospital.entities.User"]},"pt.iscte.hospital.services.waiting.DoctorWaitingPatientServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.waiting.DoctorWaitingPatientServiceImpl","begin":1,"end":19,"isInterface":false,"annotations":["@Service"],"variables":["DoctorWaitingPatientRepository doctorWaitingPatientRepository"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private","identifier":[],"type":"DoctorWaitingPatientRepository","variable":"doctorWaitingPatientRepository","lineBegin":13,"lineEnd":14}],"dependencies":["pt.iscte.hospital.repositories.waiting.DoctorWaitingPatientRepository","pt.iscte.hospital.entities.waiting.DoctorWaitingPatient"],"methods":{"findAllByDate":{"name":"findAllByDate","parametersDataType":["LocalDate"],"returnDataType":["DoctorWaitingPatient"]}},"myMethods":{"findAllByDate":{"name":"findAllByDate","lineBegin":16,"lineEnd":18,"annotations":[],"returnDataType":["List\u003cDoctorWaitingPatient\u003e"],"identifier":["List","DoctorWaitingPatient"],"parametersDataType":[{"type":"LocalDate","variable":"date","qualifedType":""}],"variables":[],"body":"{\n    return doctorWaitingPatientRepository.findAllByDate(date);\n}","methodInvocations":[{"scopeName":"doctorWaitingPatientRepository","methodName":"findAllByDate","targetClassName":"pt.iscte.hospital.repositories.waiting.DoctorWaitingPatientRepository"}]}},"methodInvocations":[{"scopeName":"doctorWaitingPatientRepository","methodName":"findAllByDate","targetClassName":"pt.iscte.hospital.repositories.waiting.DoctorWaitingPatientRepository"}],"implementedTypes":["DoctorWaitingPatientService","pt.iscte.hospital.services.waiting.DoctorWaitingPatientService"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Service","pt.iscte.hospital.entities.waiting.DoctorWaitingPatient","pt.iscte.hospital.repositories.waiting.DoctorWaitingPatientRepository","java.time.LocalDate","java.util.List"]},"pt.iscte.hospital.services.validation.SpecialityValidationServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.validation.SpecialityValidationServiceImpl","begin":1,"end":88,"isInterface":false,"annotations":["@Service"],"variables":["SpecialityRepository specialityRepository","Speciality speciality","boolean isValid","ModelMap errorModelMap","Speciality specialityDB","String price"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private","identifier":[],"type":"SpecialityRepository","variable":"specialityRepository","lineBegin":13,"lineEnd":14},{"annotations":[],"modifier":"private ","identifier":[],"type":"Speciality","variable":"speciality","lineBegin":15,"lineEnd":15},{"annotations":[],"modifier":"private ","identifier":[],"type":"boolean","variable":"isValid","lineBegin":16,"lineEnd":16},{"annotations":[],"modifier":"private ","identifier":[],"type":"ModelMap","variable":"errorModelMap","lineBegin":17,"lineEnd":17}],"dependencies":["pt.iscte.hospital.repositories.SpecialityRepository","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.services.validation.SpecialityValidationService","pt.iscte.hospital.services.validation.SpecialityValidationService","pt.iscte.hospital.services.validation.SpecialityValidationService","pt.iscte.hospital.services.validation.SpecialityValidationService","pt.iscte.hospital.services.validation.SpecialityValidationService","pt.iscte.hospital.entities.Speciality"],"methods":{"validName":{"name":"validName","parametersDataType":[],"returnDataType":["SpecialityValidationService"]},"isValid":{"name":"isValid","parametersDataType":[],"returnDataType":["boolean"]},"validLength":{"name":"validLength","parametersDataType":[],"returnDataType":["SpecialityValidationService"]},"clear":{"name":"clear","parametersDataType":[],"returnDataType":["SpecialityValidationService"]},"validPrice":{"name":"validPrice","parametersDataType":[],"returnDataType":["SpecialityValidationService"]},"setSpeciality":{"name":"setSpeciality","parametersDataType":["Speciality"],"returnDataType":["SpecialityValidationService"]},"getErrorModelMap":{"name":"getErrorModelMap","parametersDataType":[],"returnDataType":["ModelMap"]}},"myMethods":{"validName":{"name":"validName","lineBegin":34,"lineEnd":46,"annotations":["@Override"],"returnDataType":["SpecialityValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"Speciality","variable":"specialityDB","qualifedType":""}],"body":"{\n    Speciality specialityDB \u003d specialityRepository.findByName(speciality.getName());\n    if (specialityDB !\u003d null) {\n        if (speciality.getName().equalsIgnoreCase(specialityDB.getName())) {\n            isValid \u003d false;\n            errorModelMap.put(\"errorMsgSpeciality\", ErrorMessage.SPECIALITY_NAME.getErrorMsg());\n        // existe uma especialidade com o mesmo nome\n        }\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"speciality","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"specialityRepository","methodName":"findByName","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"},{"scopeName":"specialityDB","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"speciality","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"speciality.getName()","methodName":"equalsIgnoreCase","targetClassName":"pt.iscte.hospital.entities.Speciality"}]},"isValid":{"name":"isValid","lineBegin":71,"lineEnd":74,"annotations":["@Override"],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return isValid;\n}","methodInvocations":[]},"validLength":{"name":"validLength","lineBegin":62,"lineEnd":69,"annotations":["@Override"],"returnDataType":["SpecialityValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    if (speciality.getName().length() \u003c 4) {\n        // verificar se nome pequeno (evitar nomes curtos)\n        isValid \u003d false;\n        errorModelMap.put(\"errorMsgSpeciality\", ErrorMessage.SPECIALITY_LENGTH.getErrorMsg());\n    }\n    return this;\n}","methodInvocations":[{"scopeName":"speciality","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"speciality.getName()","methodName":"length","targetClassName":"pt.iscte.hospital.entities.Speciality"}]},"clear":{"name":"clear","lineBegin":81,"lineEnd":87,"annotations":["@Override"],"returnDataType":["SpecialityValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    errorModelMap \u003d new ModelMap();\n    speciality \u003d null;\n    isValid \u003d true;\n    return this;\n}","methodInvocations":[]},"validPrice":{"name":"validPrice","lineBegin":48,"lineEnd":60,"annotations":["@Override"],"returnDataType":["SpecialityValidationService"],"identifier":[],"parametersDataType":[],"variables":[{"type":"String","variable":"price","qualifedType":""}],"body":"{\n    if (speciality.getPrice() \u003e\u003d 0) {\n        String price \u003d String.valueOf(speciality.getPrice());\n        if (price.matches(\"\\\\d{1,3}(.\\\\d{0,2})\")) {\n            // validar de 0 a 999.99 maximo 2 casas decimais\n            return this;\n        }\n    }\n    isValid \u003d false;\n    errorModelMap.put(\"errorMsgPrice\", ErrorMessage.SPECIALITY_PRICE.getErrorMsg());\n    return this;\n}","methodInvocations":[{"scopeName":"speciality","methodName":"getPrice","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"speciality","methodName":"getPrice","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"price","methodName":"matches","targetClassName":""}]},"setSpeciality":{"name":"setSpeciality","lineBegin":28,"lineEnd":32,"annotations":["@Override"],"returnDataType":["SpecialityValidationService"],"identifier":[],"parametersDataType":[{"type":"Speciality","variable":"speciality","qualifedType":""}],"variables":[],"body":"{\n    this.speciality \u003d speciality;\n    return this;\n}","methodInvocations":[]},"getErrorModelMap":{"name":"getErrorModelMap","lineBegin":76,"lineEnd":79,"annotations":["@Override"],"returnDataType":["ModelMap"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return errorModelMap;\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"speciality","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"specialityRepository","methodName":"findByName","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"},{"scopeName":"specialityDB","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"speciality","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"speciality.getName()","methodName":"equalsIgnoreCase","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"speciality","methodName":"getPrice","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"speciality","methodName":"getPrice","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"speciality","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Speciality"},{"scopeName":"speciality.getName()","methodName":"length","targetClassName":"pt.iscte.hospital.entities.Speciality"}],"implementedTypes":["pt.iscte.hospital.services.validation.SpecialityValidationService","SpecialityValidationService"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Service","org.springframework.ui.ModelMap","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.repositories.SpecialityRepository","pt.iscte.hospital.services.ErrorMessage"]},"pt.iscte.hospital.controllers.RegistrationController":{"qualifiedName":"pt.iscte.hospital.controllers.RegistrationController","begin":1,"end":116,"isInterface":false,"annotations":["@Controller"],"variables":["UserService userService","ImageUploadService imageUploadService","NationalityService nationalityService","UserValidationService userValidationService","RegistrationService registrationService","List\u003cNationality\u003e nationalities","List\u003cNationality\u003e nationalities","String photoURL"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"UserService","variable":"userService","lineBegin":26,"lineEnd":27},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"ImageUploadService","variable":"imageUploadService","lineBegin":28,"lineEnd":29},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"NationalityService","variable":"nationalityService","lineBegin":30,"lineEnd":31},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"UserValidationService","variable":"userValidationService","lineBegin":32,"lineEnd":33},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"RegistrationService","variable":"registrationService","lineBegin":34,"lineEnd":35}],"dependencies":["pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.ImageUploadService","pt.iscte.hospital.services.NationalityService","pt.iscte.hospital.services.validation.UserValidationService","pt.iscte.hospital.services.RegistrationService","pt.iscte.hospital.entities.Nationality","pt.iscte.hospital.entities.Nationality","pt.iscte.hospital.entities.Patient"],"methods":{"registerUser":{"name":"registerUser","parametersDataType":["Patient","MultipartFile","ModelMap","String"],"returnDataType":["String"]},"showRegistrationPage":{"name":"showRegistrationPage","parametersDataType":["ModelMap"],"returnDataType":["String"]}},"myMethods":{"registerUser":{"name":"registerUser","lineBegin":48,"lineEnd":114,"annotations":["@PostMapping(value \u003d \"/public/register-user\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"Patient","variable":"user","qualifedType":""},{"type":"MultipartFile","variable":"file","qualifedType":""},{"type":"ModelMap","variable":"mpError","qualifedType":""},{"type":"String","variable":"confirmarPassword2","qualifedType":""}],"variables":[{"type":"List\u003cNationality\u003e","variable":"nationalities","qualifedType":"pt.iscte.hospital.entities.Nationality"},{"type":"String","variable":"photoURL","qualifedType":""}],"body":"{\n    List\u003cNationality\u003e nationalities \u003d nationalityService.findAll();\n    mpError.put(\"nationalities\", nationalities);\n    userValidationService.clear().setUser(user).validName().validPassword().samePassword(confirmarPassword2).validPhone().validPostCode().validSex().validEmail().validEmail2().validUsername().validDocumentType().validDocumentNumber().validDocumentNumberUnique().validPatientNumber().validPatientNumberUnique().validNif().validNifUnique().validCity().validBirthday().validNationality().validAddress().validAccount();\n    if (file !\u003d null \u0026\u0026 !file.isEmpty() \u0026\u0026 !file.getContentType().equals(\"application/octet-stream\")) {\n        try {\n            String photoURL \u003d imageUploadService.uploadImage(file, user.getUsername());\n            user.setPhotoURL(photoURL);\n        } catch (IOException e) {\n            userValidationService.notValidPhotoUpload();\n        } catch (ImageTypeException e) {\n            userValidationService.notValidImageType();\n        } catch (ImageSizeException e) {\n            userValidationService.notValidImageSize();\n        }\n    } else {\n        if (user.getSex().equals(\"Masculino\")) {\n            user.setPhotoURL(\"user-male.jpg\");\n        } else {\n            user.setPhotoURL(\"user-female.jpg\");\n        }\n    }\n    if (!userValidationService.isValid()) {\n        mpError.addAllAttributes(userValidationService.getErrorModelMap());\n        mpError.put(\"user\", user);\n        return \"public/registration\";\n    }\n    // Add user to database\n    registrationService.encryptPassword(user);\n    userService.addUser(user);\n    return \"redirect:/public/login\";\n}","methodInvocations":[{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"userValidationService","methodName":"clear","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear()","methodName":"setUser","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user)","methodName":"validName","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName()","methodName":"validPassword","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPassword()","methodName":"samePassword","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"user","methodName":"getSex","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"user.getSex()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"user","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"user","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"userValidationService","methodName":"notValidPhotoUpload","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"notValidImageType","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"notValidImageSize","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"user","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"imageUploadService","methodName":"uploadImage","targetClassName":"pt.iscte.hospital.services.ImageUploadService"},{"scopeName":"user","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"userValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"registrationService","methodName":"encryptPassword","targetClassName":"pt.iscte.hospital.services.RegistrationService"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"}]},"showRegistrationPage":{"name":"showRegistrationPage","lineBegin":38,"lineEnd":46,"annotations":["@GetMapping(value \u003d \"/public/registration\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"List\u003cNationality\u003e","variable":"nationalities","qualifedType":"pt.iscte.hospital.entities.Nationality"}],"body":"{\n    List\u003cNationality\u003e nationalities \u003d nationalityService.findAll();\n    modelMap.put(\"nationalities\", nationalities);\n    modelMap.put(\"user\", new Patient());\n    return \"public/registration\";\n}","methodInvocations":[{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"}]}},"methodInvocations":[{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"nationalityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.NationalityService"},{"scopeName":"userValidationService","methodName":"clear","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear()","methodName":"setUser","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user)","methodName":"validName","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName()","methodName":"validPassword","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService.clear().setUser(user).validName().validPassword()","methodName":"samePassword","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"user","methodName":"getSex","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"user.getSex()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"user","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"user","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"userValidationService","methodName":"notValidPhotoUpload","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"notValidImageType","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"notValidImageSize","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"user","methodName":"getUsername","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"imageUploadService","methodName":"uploadImage","targetClassName":"pt.iscte.hospital.services.ImageUploadService"},{"scopeName":"user","methodName":"setPhotoURL","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"userValidationService","methodName":"isValid","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"userValidationService","methodName":"getErrorModelMap","targetClassName":"pt.iscte.hospital.services.validation.UserValidationService"},{"scopeName":"registrationService","methodName":"encryptPassword","targetClassName":"pt.iscte.hospital.services.RegistrationService"},{"scopeName":"userService","methodName":"addUser","targetClassName":"pt.iscte.hospital.services.user.UserService"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Controller","org.springframework.ui.ModelMap","org.springframework.web.bind.annotation.GetMapping","org.springframework.web.bind.annotation.ModelAttribute","org.springframework.web.bind.annotation.PostMapping","org.springframework.web.bind.annotation.RequestParam","org.springframework.web.multipart.MultipartFile","pt.iscte.hospital.entities.Nationality","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.exceptions.ImageSizeException","pt.iscte.hospital.exceptions.ImageTypeException","pt.iscte.hospital.services","pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.validation.UserValidationService","java.io.IOException","java.util.List"]},"pt.iscte.hospital.services.user.PatientServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.user.PatientServiceImpl","begin":1,"end":52,"isInterface":false,"annotations":["@Service"],"variables":["PatientRepository patientRepository","List\u003cPatient\u003e patients","List\u003cPatient\u003e result","Patient patient"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"PatientRepository","variable":"patientRepository","lineBegin":14,"lineEnd":15}],"dependencies":["pt.iscte.hospital.repositories.user.PatientRepository","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient"],"methods":{"filterByFirstAndLastName":{"name":"filterByFirstAndLastName","parametersDataType":["String","Patient"],"returnDataType":["Patient"]},"findByUsername":{"name":"findByUsername","parametersDataType":["String"],"returnDataType":["Patient"]},"findAllByNameContainingIgnoreCase":{"name":"findAllByNameContainingIgnoreCase","parametersDataType":["String"],"returnDataType":["Patient"]},"findByUserId":{"name":"findByUserId","parametersDataType":["Long"],"returnDataType":["Patient"]},"findAll":{"name":"findAll","parametersDataType":["Sort"],"returnDataType":["Patient"]},"findAllByFirstAndLastName":{"name":"findAllByFirstAndLastName","parametersDataType":["String"],"returnDataType":["Patient"]}},"myMethods":{"filterByFirstAndLastName":{"name":"filterByFirstAndLastName","lineBegin":43,"lineEnd":51,"annotations":[],"returnDataType":["List\u003cPatient\u003e"],"identifier":["List","Patient"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""},{"type":"List\u003cPatient\u003e","variable":"patients","qualifedType":""}],"variables":[{"type":"List\u003cPatient\u003e","variable":"result","qualifedType":"pt.iscte.hospital.entities.Patient"},{"type":"Patient","variable":"patient","qualifedType":""}],"body":"{\n    List\u003cPatient\u003e result \u003d new ArrayList\u003c\u003e();\n    for (Patient patient : patients) {\n        if (patient.getFirstAndLastName().toLowerCase().contains(name.toLowerCase())) {\n            result.add(patient);\n        }\n    }\n    return result;\n}","methodInvocations":[{"scopeName":"patient","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patient.getFirstAndLastName()","methodName":"toLowerCase","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patient.getFirstAndLastName().toLowerCase()","methodName":"contains","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"result","methodName":"add","targetClassName":"pt.iscte.hospital.entities.Patient"}]},"findByUsername":{"name":"findByUsername","lineBegin":22,"lineEnd":25,"annotations":["@Override"],"returnDataType":["Patient"],"identifier":[],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""}],"variables":[],"body":"{\n    return patientRepository.findByUsername(username);\n}","methodInvocations":[{"scopeName":"patientRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.PatientRepository"}]},"findAllByNameContainingIgnoreCase":{"name":"findAllByNameContainingIgnoreCase","lineBegin":32,"lineEnd":35,"annotations":["@Override"],"returnDataType":["List\u003cPatient\u003e"],"identifier":["List","Patient"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"{\n    return patientRepository.findAllByNameContainingIgnoreCase(name);\n}","methodInvocations":[{"scopeName":"patientRepository","methodName":"findAllByNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.repositories.user.PatientRepository"}]},"findByUserId":{"name":"findByUserId","lineBegin":27,"lineEnd":30,"annotations":["@Override"],"returnDataType":["Patient"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"patientId","qualifedType":""}],"variables":[],"body":"{\n    return patientRepository.findByUserId(patientId);\n}","methodInvocations":[{"scopeName":"patientRepository","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.repositories.user.PatientRepository"}]},"findAll":{"name":"findAll","lineBegin":17,"lineEnd":20,"annotations":["@Override"],"returnDataType":["List\u003cPatient\u003e"],"identifier":["List","Patient"],"parametersDataType":[{"type":"Sort","variable":"sort","qualifedType":""}],"variables":[],"body":"{\n    return patientRepository.findAll(sort);\n}","methodInvocations":[{"scopeName":"patientRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.user.PatientRepository"}]},"findAllByFirstAndLastName":{"name":"findAllByFirstAndLastName","lineBegin":37,"lineEnd":41,"annotations":["@Override"],"returnDataType":["List\u003cPatient\u003e"],"identifier":["List","Patient"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[{"type":"List\u003cPatient\u003e","variable":"patients","qualifedType":"pt.iscte.hospital.entities.Patient"}],"body":"{\n    List\u003cPatient\u003e patients \u003d patientRepository.findAll();\n    return filterByFirstAndLastName(name, patients);\n}","methodInvocations":[{"scopeName":"patientRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.user.PatientRepository"}]}},"methodInvocations":[{"scopeName":"patientRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.user.PatientRepository"},{"scopeName":"patientRepository","methodName":"findByUsername","targetClassName":"pt.iscte.hospital.repositories.user.PatientRepository"},{"scopeName":"patientRepository","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.repositories.user.PatientRepository"},{"scopeName":"patientRepository","methodName":"findAllByNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.repositories.user.PatientRepository"},{"scopeName":"patientRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.user.PatientRepository"},{"scopeName":"patient","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patient.getFirstAndLastName()","methodName":"toLowerCase","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patient.getFirstAndLastName().toLowerCase()","methodName":"contains","targetClassName":"pt.iscte.hospital.entities.Patient"}],"implementedTypes":["PatientService","pt.iscte.hospital.services.user.PatientService"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.data.domain.Sort","org.springframework.stereotype.Service","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.repositories.user.PatientRepository","java.util.ArrayList","java.util.List"]},"pt.iscte.hospital.entities.Patient":{"qualifiedName":"pt.iscte.hospital.entities.Patient","begin":1,"end":59,"isInterface":false,"annotations":["@Entity","@PrimaryKeyJoinColumn(name \u003d \"patient_id\")"],"variables":["Set\u003cAppointment\u003e appointments","List\u003cGrantedAuthority\u003e roles"],"instance_variables":[{"annotations":["@OneToMany(mappedBy \u003d \"patient\")"],"modifier":"private ","identifier":["Set","Appointment"],"type":"Set\u003cAppointment\u003e","variable":"appointments","lineBegin":19,"lineEnd":20}],"dependencies":["pt.iscte.hospital.entities.Appointment"],"methods":{"getAuthorities":{"name":"getAuthorities","parametersDataType":[],"returnDataType":["GrantedAuthority"]}},"myMethods":{"getAuthorities":{"name":"getAuthorities","lineBegin":51,"lineEnd":56,"annotations":["@Override"],"returnDataType":["List\u003cGrantedAuthority\u003e"],"identifier":["List","GrantedAuthority"],"parametersDataType":[],"variables":[],"body":"{\n    List\u003cGrantedAuthority\u003e roles \u003d new ArrayList\u003c\u003e();\n    roles.add(new SimpleGrantedAuthority(Role.ROLE_PATIENT.name()));\n    return roles;\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"super","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"super","methodName":"setAccount","targetClassName":"pt.iscte.hospital.entities.User"}],"implementedTypes":[],"extendedTypes":["User","pt.iscte.hospital.entities.User"],"imports":["org.springframework.security.core.GrantedAuthority","org.springframework.security.core.authority.SimpleGrantedAuthority","pt.iscte.hospital.security.Role","javax.persistence.Entity","javax.persistence.OneToMany","javax.persistence.PrimaryKeyJoinColumn","java.time.LocalDate","java.util.ArrayList","java.util.List","java.util.Set"]},"pt.iscte.hospital.controllers.DoctorController":{"qualifiedName":"pt.iscte.hospital.controllers.DoctorController","begin":1,"end":364,"isInterface":false,"annotations":["@Controller"],"variables":["AppointmentService appointmentService","DoctorService doctorService","UserService userService","PatientService patientService","Common common","LocalDate dateToday","List\u003cAppointment\u003e todayCheckedInAppointments","HashMap\u003cLong,String\u003e isFirstAppointmentCheckedIntMap","List\u003cAppointment\u003e todayOngoingAppointments","HashMap\u003cLong,String\u003e isFirstAppointmentOngoingMap","Appointment appointment","Appointment appointment","Long appointmentDoctorId","Appointment appointment","Long appointmentDoctorId","Appointment appointment","Long appointmentDoctorId","Appointment appointment","Long appointmentDoctorId","Appointment appointment","Long appointmentDoctorId","Appointment appointment","Long appointmentDoctorId","Patient patient","LocalDate dateToday","List\u003cAppointment\u003e todayCheckedInAppointments","List\u003cAppointment\u003e todayCheckedInAppointmentsMarcada","List\u003cAppointment\u003e todayCheckedInAppointmentsNaoRealizada","HashMap\u003cLong,String\u003e isFirstAppointmentMap","long patientId","long count","Appointment appointment","long count","ModelMap modelMap","long pacientes_agendados","long pacientes_confirmadosMarcado","long pacientes_confirmadosEmCurso","long pacientes_atendidos","long pacientes_confirmados","long pacientes_faltaram","ModelMap modelMap","Appointment appointment","long patientId","long doctorId","int appointmentStateNr","String isFirstAppointmentStr","String appointmentState"],"instance_variables":[{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"AppointmentService","variable":"appointmentService","lineBegin":27,"lineEnd":28},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"DoctorService","variable":"doctorService","lineBegin":29,"lineEnd":30},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"UserService","variable":"userService","lineBegin":31,"lineEnd":32},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"PatientService","variable":"patientService","lineBegin":33,"lineEnd":34},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"Common","variable":"common","lineBegin":35,"lineEnd":36}],"dependencies":["pt.iscte.hospital.services.AppointmentService","pt.iscte.hospital.services.user.DoctorService","pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.user.PatientService","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.User"],"methods":{"cancelAppointment":{"name":"cancelAppointment","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"desmarcarFaltaAppointment":{"name":"desmarcarFaltaAppointment","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"showDoctorMain":{"name":"showDoctorMain","parametersDataType":["ModelMap"],"returnDataType":["String"]},"showWaitingList":{"name":"showWaitingList","parametersDataType":["ModelMap"],"returnDataType":["String"]},"startAppointment":{"name":"startAppointment","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"isFirstAppointmentMap":{"name":"isFirstAppointmentMap","parametersDataType":["Long","Appointment"],"returnDataType":["Long","String"]},"todayCheckInAppointments":{"name":"todayCheckInAppointments","parametersDataType":[],"returnDataType":["Appointment"]},"chamarUtente":{"name":"chamarUtente","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"infoForTopMain":{"name":"infoForTopMain","parametersDataType":["long","LocalDate"],"returnDataType":["ModelMap"]},"currentUser":{"name":"currentUser","parametersDataType":[],"returnDataType":["User"]},"endAppointment":{"name":"endAppointment","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"isFirstAppointmentStr":{"name":"isFirstAppointmentStr","parametersDataType":["long","long"],"returnDataType":["String"]},"saveAppointmentNotes":{"name":"saveAppointmentNotes","parametersDataType":["ModelMap","Long","String"],"returnDataType":["String"]},"appointmentNotesPageMap":{"name":"appointmentNotesPageMap","parametersDataType":["long"],"returnDataType":["ModelMap"]},"showAppointmentNotes":{"name":"showAppointmentNotes","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"marcarFaltaAppointment":{"name":"marcarFaltaAppointment","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"showProfile":{"name":"showProfile","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]}},"myMethods":{"cancelAppointment":{"name":"cancelAppointment","lineBegin":147,"lineEnd":166,"annotations":["@GetMapping(value \u003d \"/doctor/appointment/cancel/{appointmentId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[{"type":"Appointment","variable":"appointment","qualifedType":""},{"type":"Long","variable":"appointmentDoctorId","qualifedType":""}],"body":"{\n    modelMap.addAllAttributes(common.sideNavMap());\n    Appointment appointment \u003d appointmentService.findByAppointmentId(appointmentId);\n    Long appointmentDoctorId \u003d appointment.getSlot().getDoctor().getUserId();\n    // Verifica se o user tem acesso à consulta\n    if (currentUser().getUserId().equals(appointmentDoctorId)) {\n        doctorService.desmarcarConsultaByDoctor(appointment);\n        modelMap.put(\"message\", \"Consulta desmarcada.\");\n        modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n    } else {\n        modelMap.put(\"message\", \"Não foi possível cancelar a consulta. Pertence a outro médico\");\n        modelMap.put(\"imageURL\", AlertMessageImage.FAILURE.getImageURL());\n    }\n    return \"components/alert-message\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser().getUserId()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctorService","methodName":"desmarcarConsultaByDoctor","targetClassName":"pt.iscte.hospital.services.user.DoctorService"}]},"desmarcarFaltaAppointment":{"name":"desmarcarFaltaAppointment","lineBegin":189,"lineEnd":208,"annotations":["@GetMapping(value \u003d \"/doctor/appointment/remover-falta/{appointmentId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[{"type":"Appointment","variable":"appointment","qualifedType":""},{"type":"Long","variable":"appointmentDoctorId","qualifedType":""}],"body":"{\n    modelMap.addAllAttributes(common.sideNavMap());\n    Appointment appointment \u003d appointmentService.findByAppointmentId(appointmentId);\n    Long appointmentDoctorId \u003d appointment.getSlot().getDoctor().getUserId();\n    // Verifica se o user tem acesso à consulta\n    if (currentUser().getUserId().equals(appointmentDoctorId)) {\n        doctorService.removerFalta(appointment);\n        modelMap.put(\"message\", \"Falta removida.\");\n        modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n    } else {\n        modelMap.put(\"message\", \"Não foi possível remover falta ao utente. Consulta pertence a outro médico\");\n        modelMap.put(\"imageURL\", AlertMessageImage.FAILURE.getImageURL());\n    }\n    return \"components/alert-message\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser().getUserId()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctorService","methodName":"removerFalta","targetClassName":"pt.iscte.hospital.services.user.DoctorService"}]},"showDoctorMain":{"name":"showDoctorMain","lineBegin":38,"lineEnd":71,"annotations":["@GetMapping(value \u003d { \"/doctor/main\", \"/doctor\" })"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"LocalDate","variable":"dateToday","qualifedType":""},{"type":"List\u003cAppointment\u003e","variable":"todayCheckedInAppointments","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"List\u003cAppointment\u003e","variable":"todayOngoingAppointments","qualifedType":"pt.iscte.hospital.entities.Appointment"}],"body":"{\n    LocalDate dateToday \u003d LocalDate.now();\n    // Informação do cabeçalho\n    // Informação das consultas com check-in\n    List\u003cAppointment\u003e todayCheckedInAppointments \u003d todayCheckInAppointments();\n    HashMap\u003cLong, String\u003e isFirstAppointmentCheckedIntMap \u003d isFirstAppointmentMap(currentUser().getUserId(), todayCheckedInAppointments);\n    // Informação das consultas a decorrer\n    List\u003cAppointment\u003e todayOngoingAppointments \u003d appointmentService.findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc(currentUser().getUserId(), dateToday, AppointmentState.EM_CURSO.getStateNr());\n    HashMap\u003cLong, String\u003e isFirstAppointmentOngoingMap \u003d isFirstAppointmentMap(currentUser().getUserId(), todayOngoingAppointments);\n    modelMap.addAllAttributes(infoForTopMain(currentUser().getUserId(), dateToday));\n    modelMap.put(\"todayCheckedInAppointments\", todayCheckedInAppointments);\n    modelMap.put(\"isFirstAppointmentCheckedIntMap\", isFirstAppointmentCheckedIntMap);\n    modelMap.put(\"isFirstAppointmentOngoingMap\", isFirstAppointmentOngoingMap);\n    modelMap.put(\"todayOngoingAppointments\", todayOngoingAppointments);\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"doctor/main\";\n}","methodInvocations":[{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"showWaitingList":{"name":"showWaitingList","lineBegin":74,"lineEnd":78,"annotations":["@GetMapping(value \u003d \"/doctor/waiting-list\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[],"body":"{\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"doctor/waiting-list\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]},"startAppointment":{"name":"startAppointment","lineBegin":105,"lineEnd":124,"annotations":["@GetMapping(value \u003d \"/doctor/appointment/start/{appointmentId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[{"type":"Appointment","variable":"appointment","qualifedType":""},{"type":"Long","variable":"appointmentDoctorId","qualifedType":""}],"body":"{\n    modelMap.addAllAttributes(common.sideNavMap());\n    Appointment appointment \u003d appointmentService.findByAppointmentId(appointmentId);\n    Long appointmentDoctorId \u003d appointment.getSlot().getDoctor().getUserId();\n    // Verifica se o user tem acesso à consulta\n    if (currentUser().getUserId().equals(appointmentDoctorId)) {\n        doctorService.startAppointment(appointment);\n    } else {\n        modelMap.put(\"message\", \"Não foi possível iniciar a consulta. Pertence a outro médico\");\n        modelMap.put(\"imageURL\", AlertMessageImage.FAILURE.getImageURL());\n        return \"components/alert-message\";\n    }\n    return \"redirect:/doctor/main\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser().getUserId()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctorService","methodName":"startAppointment","targetClassName":"pt.iscte.hospital.services.user.DoctorService"}]},"isFirstAppointmentMap":{"name":"isFirstAppointmentMap","lineBegin":267,"lineEnd":284,"annotations":[],"returnDataType":["HashMap\u003cLong,String\u003e"],"identifier":["HashMap","Long","String"],"parametersDataType":[{"type":"Long","variable":"doctorId","qualifedType":""},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":""}],"variables":[{"type":"long","variable":"patientId","qualifedType":""},{"type":"long","variable":"count","qualifedType":""},{"type":"Appointment","variable":"appointment","qualifedType":""}],"body":"{\n    HashMap\u003cLong, String\u003e isFirstAppointmentMap \u003d new HashMap\u003c\u003e();\n    for (Appointment appointment : appointments) {\n        long patientId \u003d appointment.getPatient().getUserId();\n        long count \u003d appointmentService.countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus(doctorId, patientId, AppointmentState.REALIZADA.getStateNr());\n        if (count \u003e 0) {\n            isFirstAppointmentMap.put(patientId, \"Não\");\n        } else {\n            isFirstAppointmentMap.put(patientId, \"Sim\");\n        }\n    }\n    return isFirstAppointmentMap;\n}","methodInvocations":[{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getPatient()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointmentService","methodName":"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"}]},"todayCheckInAppointments":{"name":"todayCheckInAppointments","lineBegin":244,"lineEnd":264,"annotations":[],"returnDataType":["List\u003cAppointment\u003e"],"identifier":["List","Appointment"],"parametersDataType":[],"variables":[{"type":"LocalDate","variable":"dateToday","qualifedType":""},{"type":"List\u003cAppointment\u003e","variable":"todayCheckedInAppointments","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"List\u003cAppointment\u003e","variable":"todayCheckedInAppointmentsMarcada","qualifedType":"pt.iscte.hospital.entities.Appointment"},{"type":"List\u003cAppointment\u003e","variable":"todayCheckedInAppointmentsNaoRealizada","qualifedType":"pt.iscte.hospital.entities.Appointment"}],"body":"{\n    LocalDate dateToday \u003d LocalDate.now();\n    List\u003cAppointment\u003e todayCheckedInAppointments \u003d new ArrayList\u003c\u003e();\n    List\u003cAppointment\u003e todayCheckedInAppointmentsMarcada \u003d appointmentService.findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc(currentUser().getUserId(), dateToday, AppointmentState.MARCADA.getStateNr(), true);\n    List\u003cAppointment\u003e todayCheckedInAppointmentsNaoRealizada \u003d appointmentService.findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc(currentUser().getUserId(), dateToday, AppointmentState.NAO_REALIZADA.getStateNr(), true);\n    todayCheckedInAppointments.addAll(todayCheckedInAppointmentsMarcada);\n    todayCheckedInAppointments.addAll(todayCheckedInAppointmentsNaoRealizada);\n    return todayCheckedInAppointments;\n}","methodInvocations":[{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"todayCheckedInAppointments","methodName":"addAll","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"todayCheckedInAppointments","methodName":"addAll","targetClassName":"pt.iscte.hospital.entities.Appointment"}]},"chamarUtente":{"name":"chamarUtente","lineBegin":210,"lineEnd":229,"annotations":["@GetMapping(value \u003d \"/doctor/appointment/chamar-utente/{appointmentId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[{"type":"Appointment","variable":"appointment","qualifedType":""},{"type":"Long","variable":"appointmentDoctorId","qualifedType":""}],"body":"{\n    modelMap.addAllAttributes(common.sideNavMap());\n    Appointment appointment \u003d appointmentService.findByAppointmentId(appointmentId);\n    Long appointmentDoctorId \u003d appointment.getSlot().getDoctor().getUserId();\n    // Verifica se o user tem acesso à consulta\n    if (currentUser().getUserId().equals(appointmentDoctorId)) {\n        doctorService.chamarUtente(appointment);\n        modelMap.put(\"message\", \"Foi efectuada a chamada.\");\n        modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n    } else {\n        modelMap.put(\"message\", \"Não foi possível chamar o utente.\");\n        modelMap.put(\"imageURL\", AlertMessageImage.FAILURE.getImageURL());\n    }\n    return \"components/alert-message\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser().getUserId()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctorService","methodName":"chamarUtente","targetClassName":"pt.iscte.hospital.services.user.DoctorService"}]},"infoForTopMain":{"name":"infoForTopMain","lineBegin":298,"lineEnd":338,"annotations":[],"returnDataType":["ModelMap"],"identifier":[],"parametersDataType":[{"type":"long","variable":"doctorId","qualifedType":""},{"type":"LocalDate","variable":"dateToday","qualifedType":""}],"variables":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"long","variable":"pacientes_agendados","qualifedType":""},{"type":"long","variable":"pacientes_confirmadosMarcado","qualifedType":""},{"type":"long","variable":"pacientes_confirmadosEmCurso","qualifedType":""},{"type":"long","variable":"pacientes_atendidos","qualifedType":""},{"type":"long","variable":"pacientes_confirmados","qualifedType":""},{"type":"long","variable":"pacientes_faltaram","qualifedType":""}],"body":"{\n    ModelMap modelMap \u003d new ModelMap();\n    long pacientes_agendados \u003d appointmentService.countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus(doctorId, dateToday, AppointmentState.MARCADA.getStateNr());\n    long pacientes_confirmadosMarcado \u003d appointmentService.countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked(doctorId, dateToday, AppointmentState.MARCADA.getStateNr(), true);\n    long pacientes_confirmadosEmCurso \u003d appointmentService.countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked(doctorId, dateToday, AppointmentState.EM_CURSO.getStateNr(), true);\n    long pacientes_atendidos \u003d appointmentService.countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus(doctorId, dateToday, AppointmentState.REALIZADA.getStateNr());\n    long pacientes_confirmados \u003d pacientes_confirmadosMarcado + pacientes_confirmadosEmCurso;\n    long pacientes_faltaram \u003d appointmentService.countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus(doctorId, dateToday, AppointmentState.NAO_REALIZADA.getStateNr());\n    modelMap.put(\"pacientes_agendados\", pacientes_agendados);\n    modelMap.put(\"pacientes_confirmados\", pacientes_confirmados);\n    modelMap.put(\"pacientes_atendidos\", pacientes_atendidos);\n    modelMap.put(\"pacientes_faltaram\", pacientes_faltaram);\n    return modelMap;\n}","methodInvocations":[{"scopeName":"appointmentService","methodName":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""}]},"currentUser":{"name":"currentUser","lineBegin":342,"lineEnd":344,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return userService.currentUser();\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"}]},"endAppointment":{"name":"endAppointment","lineBegin":126,"lineEnd":145,"annotations":["@GetMapping(value \u003d \"/doctor/appointment/end/{appointmentId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[{"type":"Appointment","variable":"appointment","qualifedType":""},{"type":"Long","variable":"appointmentDoctorId","qualifedType":""}],"body":"{\n    modelMap.addAllAttributes(common.sideNavMap());\n    Appointment appointment \u003d appointmentService.findByAppointmentId(appointmentId);\n    Long appointmentDoctorId \u003d appointment.getSlot().getDoctor().getUserId();\n    // Verifica se o user tem acesso à consulta\n    if (currentUser().getUserId().equals(appointmentDoctorId)) {\n        doctorService.endAppointment(appointment);\n        modelMap.put(\"message\", \"Consulta terminada.\");\n        modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n    } else {\n        modelMap.put(\"message\", \"Não foi possível terminar a consulta. Pertence a outro médico\");\n        modelMap.put(\"imageURL\", AlertMessageImage.FAILURE.getImageURL());\n    }\n    return \"components/alert-message\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser().getUserId()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctorService","methodName":"endAppointment","targetClassName":"pt.iscte.hospital.services.user.DoctorService"}]},"isFirstAppointmentStr":{"name":"isFirstAppointmentStr","lineBegin":286,"lineEnd":296,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"long","variable":"patientId","qualifedType":""},{"type":"long","variable":"doctorId","qualifedType":""}],"variables":[{"type":"long","variable":"count","qualifedType":""}],"body":"{\n    long count \u003d appointmentService.countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus(doctorId, patientId, AppointmentState.REALIZADA.getStateNr());\n    if (count \u003e 0) {\n        return \"Não\";\n    } else {\n        return \"Sim\";\n    }\n}","methodInvocations":[{"scopeName":"appointmentService","methodName":"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"}]},"saveAppointmentNotes":{"name":"saveAppointmentNotes","lineBegin":90,"lineEnd":101,"annotations":["@PostMapping(value \u003d \"/doctor/appointment/notes/{appointmentId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""},{"type":"String","variable":"message","qualifedType":""}],"variables":[{"type":"Appointment","variable":"appointment","qualifedType":""}],"body":"{\n    Appointment appointment \u003d appointmentService.findByAppointmentId(appointmentId);\n    appointment.setNotes(message);\n    appointmentService.saveAppointment(appointment);\n    modelMap.addAllAttributes(appointmentNotesPageMap(appointmentId));\n    return \"doctor/appointment-notes\";\n}","methodInvocations":[{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"setNotes","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"}]},"appointmentNotesPageMap":{"name":"appointmentNotesPageMap","lineBegin":346,"lineEnd":363,"annotations":[],"returnDataType":["ModelMap"],"identifier":[],"parametersDataType":[{"type":"long","variable":"appointmentId","qualifedType":""}],"variables":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Appointment","variable":"appointment","qualifedType":""},{"type":"long","variable":"patientId","qualifedType":""},{"type":"long","variable":"doctorId","qualifedType":""},{"type":"int","variable":"appointmentStateNr","qualifedType":""},{"type":"String","variable":"isFirstAppointmentStr","qualifedType":""},{"type":"String","variable":"appointmentState","qualifedType":""}],"body":"{\n    ModelMap modelMap \u003d new ModelMap();\n    Appointment appointment \u003d appointmentService.findByAppointmentId(appointmentId);\n    long patientId \u003d appointment.getPatient().getUserId();\n    long doctorId \u003d currentUser().getUserId();\n    int appointmentStateNr \u003d appointment.getAppointmentStatus();\n    String isFirstAppointmentStr \u003d isFirstAppointmentStr(patientId, doctorId);\n    String appointmentState \u003d AppointmentState.searchState(appointmentStateNr);\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"appointment\", appointment);\n    modelMap.put(\"isFirstAppointmentStr\", isFirstAppointmentStr);\n    modelMap.put(\"appointmentState\", appointmentState);\n    return modelMap;\n}","methodInvocations":[{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getPatient()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointment","methodName":"getAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"modelMap","methodName":"addAllAttributes","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""}]},"showAppointmentNotes":{"name":"showAppointmentNotes","lineBegin":81,"lineEnd":88,"annotations":["@GetMapping(value \u003d \"/doctor/appointment/notes/{appointmentId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[],"body":"{\n    modelMap.addAllAttributes(appointmentNotesPageMap(appointmentId));\n    return \"doctor/appointment-notes\";\n}","methodInvocations":[]},"marcarFaltaAppointment":{"name":"marcarFaltaAppointment","lineBegin":168,"lineEnd":187,"annotations":["@GetMapping(value \u003d \"/doctor/appointment/marcar-falta/{appointmentId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[{"type":"Appointment","variable":"appointment","qualifedType":""},{"type":"Long","variable":"appointmentDoctorId","qualifedType":""}],"body":"{\n    modelMap.addAllAttributes(common.sideNavMap());\n    Appointment appointment \u003d appointmentService.findByAppointmentId(appointmentId);\n    Long appointmentDoctorId \u003d appointment.getSlot().getDoctor().getUserId();\n    // Verifica se o user tem acesso à consulta\n    if (currentUser().getUserId().equals(appointmentDoctorId)) {\n        doctorService.marcarFalta(appointment);\n        modelMap.put(\"message\", \"Falta marcada ao utente.\");\n        modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n    } else {\n        modelMap.put(\"message\", \"Não foi possível marcar falta ao utente. Consulta pertence a outro médico\");\n        modelMap.put(\"imageURL\", AlertMessageImage.FAILURE.getImageURL());\n    }\n    return \"components/alert-message\";\n}","methodInvocations":[{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser().getUserId()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctorService","methodName":"marcarFalta","targetClassName":"pt.iscte.hospital.services.user.DoctorService"}]},"showProfile":{"name":"showProfile","lineBegin":231,"lineEnd":240,"annotations":["@GetMapping(value \u003d \"/doctor/see-profile/{patientId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"patientId","qualifedType":""}],"variables":[{"type":"Patient","variable":"patient","qualifedType":""}],"body":"{\n    Patient patient \u003d patientService.findByUserId(patientId);\n    modelMap.put(\"patient\", patient);\n    modelMap.put(\"goToDoctorMain\", true);\n    modelMap.addAllAttributes(common.sideNavMap());\n    return \"doctor-receptionist/patient-profile\";\n}","methodInvocations":[{"scopeName":"patientService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}]}},"methodInvocations":[{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusOrderBySlotTimeBeginAsc","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"setNotes","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser().getUserId()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctorService","methodName":"startAppointment","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser().getUserId()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctorService","methodName":"endAppointment","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser().getUserId()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctorService","methodName":"desmarcarConsultaByDoctor","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser().getUserId()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctorService","methodName":"marcarFalta","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser().getUserId()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctorService","methodName":"removerFalta","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getSlot","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getSlot()","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.Slot"},{"scopeName":"appointment.getSlot().getDoctor()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"currentUser().getUserId()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"doctorService","methodName":"chamarUtente","targetClassName":"pt.iscte.hospital.services.user.DoctorService"},{"scopeName":"patientService","methodName":"findByUserId","targetClassName":"pt.iscte.hospital.services.user.PatientService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasCheckedOrderBySlotTimeBeginAsc","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getPatient()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointmentService","methodName":"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"countBySlotDoctorUserIdAndPatientUserIdAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatusAndHasChecked","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"countBySlotDoctorUserIdAndSlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointment.getPatient()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"currentUser()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointment","methodName":"getAppointmentStatus","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.stereotype.Controller","org.springframework.ui.ModelMap","org.springframework.web.bind.annotation.GetMapping","org.springframework.web.bind.annotation.PathVariable","org.springframework.web.bind.annotation.PostMapping","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.states.AppointmentState","pt.iscte.hospital.objects.utils.AlertMessageImage","pt.iscte.hospital.services.AppointmentService","pt.iscte.hospital.services.user.DoctorService","pt.iscte.hospital.services.user.PatientService","pt.iscte.hospital.services.user.UserService","java.time.LocalDate","java.util.ArrayList","java.util.HashMap","java.util.List"]},"pt.iscte.hospital.services.SpecialityServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.SpecialityServiceImpl","begin":1,"end":39,"isInterface":false,"annotations":["@Service"],"variables":["SpecialityRepository specialityRepository"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"SpecialityRepository","variable":"specialityRepository","lineBegin":13,"lineEnd":13}],"dependencies":["pt.iscte.hospital.repositories.SpecialityRepository","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Speciality"],"methods":{"addSpeciality":{"name":"addSpeciality","parametersDataType":["Speciality"],"returnDataType":["void"]},"findByName":{"name":"findByName","parametersDataType":["String"],"returnDataType":["Speciality"]},"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["Speciality"]}},"myMethods":{"addSpeciality":{"name":"addSpeciality","lineBegin":20,"lineEnd":23,"annotations":["@Override"],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Speciality","variable":"speciality","qualifedType":""}],"variables":[],"body":"{\n    specialityRepository.save(speciality);\n}","methodInvocations":[{"scopeName":"specialityRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"}]},"findByName":{"name":"findByName","lineBegin":25,"lineEnd":28,"annotations":["@Override"],"returnDataType":["Speciality"],"identifier":[],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"{\n    return specialityRepository.findByName(name);\n}","methodInvocations":[{"scopeName":"specialityRepository","methodName":"findByName","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"}]},"findAll":{"name":"findAll","lineBegin":35,"lineEnd":38,"annotations":["@Override"],"returnDataType":["List\u003cSpeciality\u003e"],"identifier":["List","Speciality"],"parametersDataType":[],"variables":[],"body":"{\n    return specialityRepository.findAll();\n}","methodInvocations":[{"scopeName":"specialityRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"}]}},"methodInvocations":[{"scopeName":"specialityRepository","methodName":"save","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"},{"scopeName":"specialityRepository","methodName":"findByName","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"},{"scopeName":"specialityRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"},{"scopeName":"specialityRepository","methodName":"findAll","targetClassName":"pt.iscte.hospital.repositories.SpecialityRepository"}],"implementedTypes":["pt.iscte.hospital.services.SpecialityService","SpecialityService"],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.data.domain.Sort","org.springframework.stereotype.Service","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.repositories.SpecialityRepository","java.util.List"]},"pt.iscte.hospital.services.validation.SpecialityValidationService":{"qualifiedName":"pt.iscte.hospital.services.validation.SpecialityValidationService","begin":1,"end":14,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.services.validation.SpecialityValidationService","pt.iscte.hospital.services.validation.SpecialityValidationService","pt.iscte.hospital.services.validation.SpecialityValidationService","pt.iscte.hospital.services.validation.SpecialityValidationService","pt.iscte.hospital.services.validation.SpecialityValidationService","pt.iscte.hospital.entities.Speciality"],"methods":{"validName":{"name":"validName","parametersDataType":[],"returnDataType":["SpecialityValidationService"]},"isValid":{"name":"isValid","parametersDataType":[],"returnDataType":["boolean"]},"validLength":{"name":"validLength","parametersDataType":[],"returnDataType":["SpecialityValidationService"]},"clear":{"name":"clear","parametersDataType":[],"returnDataType":["SpecialityValidationService"]},"validPrice":{"name":"validPrice","parametersDataType":[],"returnDataType":["SpecialityValidationService"]},"setSpeciality":{"name":"setSpeciality","parametersDataType":["Speciality"],"returnDataType":["SpecialityValidationService"]},"getErrorModelMap":{"name":"getErrorModelMap","parametersDataType":[],"returnDataType":["ModelMap"]}},"myMethods":{"validName":{"name":"validName","lineBegin":8,"lineEnd":8,"annotations":[],"returnDataType":["SpecialityValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"isValid":{"name":"isValid","lineBegin":11,"lineEnd":11,"annotations":[],"returnDataType":["boolean"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validLength":{"name":"validLength","lineBegin":9,"lineEnd":9,"annotations":[],"returnDataType":["SpecialityValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"clear":{"name":"clear","lineBegin":13,"lineEnd":13,"annotations":[],"returnDataType":["SpecialityValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"validPrice":{"name":"validPrice","lineBegin":10,"lineEnd":10,"annotations":[],"returnDataType":["SpecialityValidationService"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"setSpeciality":{"name":"setSpeciality","lineBegin":7,"lineEnd":7,"annotations":[],"returnDataType":["SpecialityValidationService"],"identifier":[],"parametersDataType":[{"type":"Speciality","variable":"speciality","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"getErrorModelMap":{"name":"getErrorModelMap","lineBegin":12,"lineEnd":12,"annotations":[],"returnDataType":["ModelMap"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.ui.ModelMap","pt.iscte.hospital.entities.Speciality"]},"pt.iscte.hospital.repositories.user.UserRepository":{"qualifiedName":"pt.iscte.hospital.repositories.user.UserRepository","begin":1,"end":23,"isInterface":true,"annotations":["@Repository"],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User"],"methods":{"findByNif":{"name":"findByNif","parametersDataType":["Long"],"returnDataType":["User"]},"findByPatientNumberAndAccount":{"name":"findByPatientNumberAndAccount","parametersDataType":["Long","String"],"returnDataType":["User"]},"findByDocumentNumberAndAccount":{"name":"findByDocumentNumberAndAccount","parametersDataType":["Long","String"],"returnDataType":["User"]},"findByUsername":{"name":"findByUsername","parametersDataType":["String"],"returnDataType":["User"]},"findByDocumentNumber":{"name":"findByDocumentNumber","parametersDataType":["Long"],"returnDataType":["User"]},"findByPatientNumber":{"name":"findByPatientNumber","parametersDataType":["Long"],"returnDataType":["User"]},"findByUserId":{"name":"findByUserId","parametersDataType":["Long"],"returnDataType":["User"]},"findByEmail":{"name":"findByEmail","parametersDataType":["String"],"returnDataType":["User"]},"findByNifAndAccount":{"name":"findByNifAndAccount","parametersDataType":["Long","String"],"returnDataType":["User"]}},"myMethods":{"findByNif":{"name":"findByNif","lineBegin":16,"lineEnd":16,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"nif","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByPatientNumberAndAccount":{"name":"findByPatientNumberAndAccount","lineBegin":22,"lineEnd":22,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"patientNumber","qualifedType":""},{"type":"String","variable":"account","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByDocumentNumberAndAccount":{"name":"findByDocumentNumberAndAccount","lineBegin":21,"lineEnd":21,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"documentNumber","qualifedType":""},{"type":"String","variable":"account","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByUsername":{"name":"findByUsername","lineBegin":11,"lineEnd":11,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByDocumentNumber":{"name":"findByDocumentNumber","lineBegin":17,"lineEnd":17,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"documentNumber","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByPatientNumber":{"name":"findByPatientNumber","lineBegin":18,"lineEnd":18,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"patientNumber","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByUserId":{"name":"findByUserId","lineBegin":14,"lineEnd":14,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByEmail":{"name":"findByEmail","lineBegin":12,"lineEnd":12,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"String","variable":"email","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByNifAndAccount":{"name":"findByNifAndAccount","lineBegin":20,"lineEnd":20,"annotations":[],"returnDataType":["User"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"nif","qualifedType":""},{"type":"String","variable":"account","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["JpaRepository\u003cUser, Long\u003e"],"imports":["org.springframework.data.jpa.repository.JpaRepository","org.springframework.stereotype.Repository","pt.iscte.hospital.entities.User","java.util.List"]},"pt.iscte.hospital.security.IAuthenticationFacade":{"qualifiedName":"pt.iscte.hospital.security.IAuthenticationFacade","begin":1,"end":7,"isInterface":true,"annotations":[],"variables":[],"instance_variables":[],"dependencies":[],"methods":{"getAuthentication":{"name":"getAuthentication","parametersDataType":[],"returnDataType":["Authentication"]}},"myMethods":{"getAuthentication":{"name":"getAuthentication","lineBegin":6,"lineEnd":6,"annotations":[],"returnDataType":["Authentication"],"identifier":[],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.security.core.Authentication"]},"pt.iscte.hospital.entities.User":{"qualifiedName":"pt.iscte.hospital.entities.User","begin":1,"end":269,"isInterface":false,"annotations":["@Entity","@Inheritance(strategy \u003d InheritanceType.JOINED)"],"variables":["Long userId","String name","String username","String sex","LocalDate birthday","String address","String postCode","String city","String account","String nationality","String documentType","Long documentNumber","Long nif","Long patientNumber","Long phone","String email","String password","String photoURL","Set\u003cMessage\u003e messages","String[] names","LocalDate todayDate"],"instance_variables":[{"annotations":["@Id","@GeneratedValue(strategy \u003d GenerationType.IDENTITY)","@Column(name \u003d \"user_id\")"],"modifier":"private ","identifier":[],"type":"Long","variable":"userId","lineBegin":18,"lineEnd":21},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"name","lineBegin":22,"lineEnd":22},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"username","lineBegin":23,"lineEnd":23},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"sex","lineBegin":24,"lineEnd":24},{"annotations":["@DateTimeFormat(pattern \u003d \"yyyy-MM-dd\")"],"modifier":"private ","identifier":[],"type":"LocalDate","variable":"birthday","lineBegin":25,"lineEnd":26},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"address","lineBegin":27,"lineEnd":27},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"postCode","lineBegin":28,"lineEnd":28},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"city","lineBegin":29,"lineEnd":29},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"account","lineBegin":30,"lineEnd":30},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"nationality","lineBegin":31,"lineEnd":31},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"documentType","lineBegin":32,"lineEnd":32},{"annotations":[],"modifier":"private ","identifier":[],"type":"Long","variable":"documentNumber","lineBegin":33,"lineEnd":33},{"annotations":[],"modifier":"private ","identifier":[],"type":"Long","variable":"nif","lineBegin":34,"lineEnd":34},{"annotations":[],"modifier":"private ","identifier":[],"type":"Long","variable":"patientNumber","lineBegin":35,"lineEnd":35},{"annotations":[],"modifier":"private ","identifier":[],"type":"Long","variable":"phone","lineBegin":36,"lineEnd":36},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"email","lineBegin":37,"lineEnd":37},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"password","lineBegin":38,"lineEnd":38},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"photoURL","lineBegin":39,"lineEnd":39},{"annotations":["@OneToMany(mappedBy \u003d \"user\")"],"modifier":"private ","identifier":["Set","Message"],"type":"Set\u003cMessage\u003e","variable":"messages","lineBegin":41,"lineEnd":42}],"dependencies":["pt.iscte.hospital.entities.Message"],"methods":{"setName":{"name":"setName","parametersDataType":["String"],"returnDataType":["void"]},"getPhone":{"name":"getPhone","parametersDataType":[],"returnDataType":["Long"]},"getAge":{"name":"getAge","parametersDataType":[],"returnDataType":["int"]},"getBirthdayStr":{"name":"getBirthdayStr","parametersDataType":[],"returnDataType":["String"]},"setPassword":{"name":"setPassword","parametersDataType":["String"],"returnDataType":["void"]},"setPhotoURL":{"name":"setPhotoURL","parametersDataType":["String"],"returnDataType":["void"]},"getName":{"name":"getName","parametersDataType":[],"returnDataType":["String"]},"setPostCode":{"name":"setPostCode","parametersDataType":["String"],"returnDataType":["void"]},"setPatientNumber":{"name":"setPatientNumber","parametersDataType":["Long"],"returnDataType":["void"]},"getDocumentType":{"name":"getDocumentType","parametersDataType":[],"returnDataType":["String"]},"setNif":{"name":"setNif","parametersDataType":["Long"],"returnDataType":["void"]},"getAuthorities":{"name":"getAuthorities","parametersDataType":[],"returnDataType":["GrantedAuthority"]},"getUsername":{"name":"getUsername","parametersDataType":[],"returnDataType":["String"]},"getPostCode":{"name":"getPostCode","parametersDataType":[],"returnDataType":["String"]},"getFirstAndLastName":{"name":"getFirstAndLastName","parametersDataType":[],"returnDataType":["String"]},"getPhoneStr":{"name":"getPhoneStr","parametersDataType":[],"returnDataType":["String"]},"setDocumentNumber":{"name":"setDocumentNumber","parametersDataType":["Long"],"returnDataType":["void"]},"getAccount":{"name":"getAccount","parametersDataType":[],"returnDataType":["String"]},"getNationality":{"name":"getNationality","parametersDataType":[],"returnDataType":["String"]},"getAddress":{"name":"getAddress","parametersDataType":[],"returnDataType":["String"]},"setDocumentType":{"name":"setDocumentType","parametersDataType":["String"],"returnDataType":["void"]},"getNif":{"name":"getNif","parametersDataType":[],"returnDataType":["Long"]},"getCity":{"name":"getCity","parametersDataType":[],"returnDataType":["String"]},"getDocumentNumber":{"name":"getDocumentNumber","parametersDataType":[],"returnDataType":["Long"]},"setUsername":{"name":"setUsername","parametersDataType":["String"],"returnDataType":["void"]},"getBirthday":{"name":"getBirthday","parametersDataType":[],"returnDataType":["LocalDate"]},"setAddress":{"name":"setAddress","parametersDataType":["String"],"returnDataType":["void"]},"setCity":{"name":"setCity","parametersDataType":["String"],"returnDataType":["void"]},"setSex":{"name":"setSex","parametersDataType":["String"],"returnDataType":["void"]},"setPhone":{"name":"setPhone","parametersDataType":["Long"],"returnDataType":["void"]},"getPatientNumber":{"name":"getPatientNumber","parametersDataType":[],"returnDataType":["Long"]},"setBirthday":{"name":"setBirthday","parametersDataType":["LocalDate"],"returnDataType":["void"]},"getPassword":{"name":"getPassword","parametersDataType":[],"returnDataType":["String"]},"setEmail":{"name":"setEmail","parametersDataType":["String"],"returnDataType":["void"]},"getPhotoURL":{"name":"getPhotoURL","parametersDataType":[],"returnDataType":["String"]},"getSex":{"name":"getSex","parametersDataType":[],"returnDataType":["String"]},"setAccount":{"name":"setAccount","parametersDataType":["String"],"returnDataType":["void"]},"getEmail":{"name":"getEmail","parametersDataType":[],"returnDataType":["String"]},"toString":{"name":"toString","parametersDataType":[],"returnDataType":["String"]},"getUserId":{"name":"getUserId","parametersDataType":[],"returnDataType":["Long"]},"setNationality":{"name":"setNationality","parametersDataType":["String"],"returnDataType":["void"]},"setUserId":{"name":"setUserId","parametersDataType":["Long"],"returnDataType":["void"]}},"myMethods":{"setName":{"name":"setName","lineBegin":86,"lineEnd":88,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"{\n    this.name \u003d name;\n}","methodInvocations":[]},"getPhone":{"name":"getPhone","lineBegin":208,"lineEnd":210,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return phone;\n}","methodInvocations":[]},"getAge":{"name":"getAge","lineBegin":119,"lineEnd":122,"annotations":[],"returnDataType":["int"],"identifier":[],"parametersDataType":[],"variables":[{"type":"LocalDate","variable":"todayDate","qualifedType":""}],"body":"{\n    LocalDate todayDate \u003d LocalDate.now();\n    return Period.between(birthday, todayDate).getYears();\n}","methodInvocations":[]},"getBirthdayStr":{"name":"getBirthdayStr","lineBegin":124,"lineEnd":130,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    if (birthday \u003d\u003d null) {\n        return \"\";\n    }\n    return birthday.format(Calendar.FORMATTER);\n}","methodInvocations":[]},"setPassword":{"name":"setPassword","lineBegin":232,"lineEnd":234,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"password","qualifedType":""}],"variables":[],"body":"{\n    this.password \u003d password;\n}","methodInvocations":[]},"setPhotoURL":{"name":"setPhotoURL","lineBegin":240,"lineEnd":242,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"photoURL","qualifedType":""}],"variables":[],"body":"{\n    this.photoURL \u003d photoURL;\n}","methodInvocations":[]},"getName":{"name":"getName","lineBegin":82,"lineEnd":84,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return name;\n}","methodInvocations":[]},"setPostCode":{"name":"setPostCode","lineBegin":148,"lineEnd":150,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"postCode","qualifedType":""}],"variables":[],"body":"{\n    this.postCode \u003d postCode;\n}","methodInvocations":[]},"setPatientNumber":{"name":"setPatientNumber","lineBegin":204,"lineEnd":206,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"patientNumber","qualifedType":""}],"variables":[],"body":"{\n    this.patientNumber \u003d patientNumber;\n}","methodInvocations":[]},"getDocumentType":{"name":"getDocumentType","lineBegin":176,"lineEnd":178,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return documentType;\n}","methodInvocations":[]},"setNif":{"name":"setNif","lineBegin":196,"lineEnd":198,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"nif","qualifedType":""}],"variables":[],"body":"{\n    this.nif \u003d nif;\n}","methodInvocations":[]},"getAuthorities":{"name":"getAuthorities","lineBegin":244,"lineEnd":244,"annotations":[],"returnDataType":["List\u003cGrantedAuthority\u003e"],"identifier":["List","GrantedAuthority"],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]},"getUsername":{"name":"getUsername","lineBegin":90,"lineEnd":92,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return username;\n}","methodInvocations":[]},"getPostCode":{"name":"getPostCode","lineBegin":144,"lineEnd":146,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return postCode;\n}","methodInvocations":[]},"getFirstAndLastName":{"name":"getFirstAndLastName","lineBegin":94,"lineEnd":101,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[{"type":"String[]","variable":"names","qualifedType":""}],"body":"{\n    String[] names \u003d name.split(\" \");\n    if (names.length \u003e 1) {\n        return names[0] + \" \" + names[names.length - 1];\n    } else {\n        return names[0];\n    }\n}","methodInvocations":[]},"getPhoneStr":{"name":"getPhoneStr","lineBegin":212,"lineEnd":214,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return HospitalFormatter.formatValue(phone, HospitalFormatter.PHONE);\n}","methodInvocations":[{"scopeName":"HospitalFormatter","methodName":"formatValue","targetClassName":"pt.iscte.hospital.objects.utils.HospitalFormatter"}]},"setDocumentNumber":{"name":"setDocumentNumber","lineBegin":188,"lineEnd":190,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"documentNumber","qualifedType":""}],"variables":[],"body":"{\n    this.documentNumber \u003d documentNumber;\n}","methodInvocations":[]},"getAccount":{"name":"getAccount","lineBegin":160,"lineEnd":162,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return account;\n}","methodInvocations":[]},"getNationality":{"name":"getNationality","lineBegin":168,"lineEnd":170,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return nationality;\n}","methodInvocations":[]},"getAddress":{"name":"getAddress","lineBegin":136,"lineEnd":138,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return address;\n}","methodInvocations":[]},"setDocumentType":{"name":"setDocumentType","lineBegin":180,"lineEnd":182,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"documentType","qualifedType":""}],"variables":[],"body":"{\n    this.documentType \u003d documentType;\n}","methodInvocations":[]},"getNif":{"name":"getNif","lineBegin":192,"lineEnd":194,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return nif;\n}","methodInvocations":[]},"getCity":{"name":"getCity","lineBegin":152,"lineEnd":154,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return city;\n}","methodInvocations":[]},"getDocumentNumber":{"name":"getDocumentNumber","lineBegin":184,"lineEnd":186,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return documentNumber;\n}","methodInvocations":[]},"setUsername":{"name":"setUsername","lineBegin":103,"lineEnd":105,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""}],"variables":[],"body":"{\n    this.username \u003d username;\n}","methodInvocations":[]},"getBirthday":{"name":"getBirthday","lineBegin":115,"lineEnd":117,"annotations":[],"returnDataType":["LocalDate"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return birthday;\n}","methodInvocations":[]},"setAddress":{"name":"setAddress","lineBegin":140,"lineEnd":142,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"address","qualifedType":""}],"variables":[],"body":"{\n    this.address \u003d address;\n}","methodInvocations":[]},"setCity":{"name":"setCity","lineBegin":156,"lineEnd":158,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"city","qualifedType":""}],"variables":[],"body":"{\n    this.city \u003d city;\n}","methodInvocations":[]},"setSex":{"name":"setSex","lineBegin":111,"lineEnd":113,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"sex","qualifedType":""}],"variables":[],"body":"{\n    this.sex \u003d sex;\n}","methodInvocations":[]},"setPhone":{"name":"setPhone","lineBegin":216,"lineEnd":218,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"phone","qualifedType":""}],"variables":[],"body":"{\n    this.phone \u003d phone;\n}","methodInvocations":[]},"getPatientNumber":{"name":"getPatientNumber","lineBegin":200,"lineEnd":202,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return patientNumber;\n}","methodInvocations":[]},"setBirthday":{"name":"setBirthday","lineBegin":132,"lineEnd":134,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"LocalDate","variable":"birthday","qualifedType":""}],"variables":[],"body":"{\n    this.birthday \u003d birthday;\n}","methodInvocations":[]},"getPassword":{"name":"getPassword","lineBegin":228,"lineEnd":230,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return password;\n}","methodInvocations":[]},"setEmail":{"name":"setEmail","lineBegin":224,"lineEnd":226,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"email","qualifedType":""}],"variables":[],"body":"{\n    this.email \u003d email;\n}","methodInvocations":[]},"getPhotoURL":{"name":"getPhotoURL","lineBegin":236,"lineEnd":238,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return photoURL;\n}","methodInvocations":[]},"getSex":{"name":"getSex","lineBegin":107,"lineEnd":109,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return sex;\n}","methodInvocations":[]},"setAccount":{"name":"setAccount","lineBegin":164,"lineEnd":166,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"account","qualifedType":""}],"variables":[],"body":"{\n    this.account \u003d account;\n}","methodInvocations":[]},"getEmail":{"name":"getEmail","lineBegin":220,"lineEnd":222,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return email;\n}","methodInvocations":[]},"toString":{"name":"toString","lineBegin":246,"lineEnd":268,"annotations":["@Override"],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return \"User{\" + \"userId\u003d\" + userId + \", name\u003d\u0027\" + name + \u0027\\\u0027\u0027 + \", username\u003d\u0027\" + username + \u0027\\\u0027\u0027 + \", sex\u003d\u0027\" + sex + \u0027\\\u0027\u0027 + \", birthday\u003d\" + birthday + \", address\u003d\u0027\" + address + \u0027\\\u0027\u0027 + \", postCode\u003d\u0027\" + postCode + \u0027\\\u0027\u0027 + \", city\u003d\u0027\" + city + \u0027\\\u0027\u0027 + \", account\u003d\u0027\" + account + \u0027\\\u0027\u0027 + \", nationality\u003d\u0027\" + nationality + \u0027\\\u0027\u0027 + \", documentType\u003d\u0027\" + documentType + \u0027\\\u0027\u0027 + \", documentNumber\u003d\" + documentNumber + \", nif\u003d\" + nif + \", patientNumber\u003d\" + patientNumber + \", phone\u003d\" + phone + \", email\u003d\u0027\" + email + \u0027\\\u0027\u0027 + \", password\u003d\u0027\" + password + \u0027\\\u0027\u0027 + \", photoURL\u003d\u0027\" + photoURL + \u0027\\\u0027\u0027 + \u0027}\u0027;\n}","methodInvocations":[]},"getUserId":{"name":"getUserId","lineBegin":74,"lineEnd":76,"annotations":[],"returnDataType":["Long"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return userId;\n}","methodInvocations":[]},"setNationality":{"name":"setNationality","lineBegin":172,"lineEnd":174,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"nationality","qualifedType":""}],"variables":[],"body":"{\n    this.nationality \u003d nationality;\n}","methodInvocations":[]},"setUserId":{"name":"setUserId","lineBegin":78,"lineEnd":80,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"userId","qualifedType":""}],"variables":[],"body":"{\n    this.userId \u003d userId;\n}","methodInvocations":[]}},"methodInvocations":[{"scopeName":"HospitalFormatter","methodName":"formatValue","targetClassName":"pt.iscte.hospital.objects.utils.HospitalFormatter"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.format.annotation.DateTimeFormat","org.springframework.security.core.GrantedAuthority","pt.iscte.hospital.objects.utils.Calendar","pt.iscte.hospital.objects.utils.HospitalFormatter","javax.persistence","java.time.LocalDate","java.time.Period","java.util.List","java.util.Set"]},"pt.iscte.hospital.services.invoice.InvoiceItem":{"qualifiedName":"pt.iscte.hospital.services.invoice.InvoiceItem","begin":1,"end":27,"isInterface":false,"annotations":["@Component","@Getter","@Setter","@ToString"],"variables":["String description","double value"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"description","lineBegin":14,"lineEnd":14},{"annotations":[],"modifier":"private ","identifier":[],"type":"double","variable":"value","lineBegin":15,"lineEnd":15}],"dependencies":[],"methods":{},"myMethods":{},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["lombok.Getter","lombok.Setter","lombok.ToString","org.springframework.stereotype.Component"]},"pt.iscte.hospital.HospitalApplication":{"qualifiedName":"pt.iscte.hospital.HospitalApplication","begin":1,"end":17,"isInterface":false,"annotations":["@SpringBootApplication","@EnableScheduling"],"variables":[],"instance_variables":[],"dependencies":[],"methods":{"main":{"name":"main","parametersDataType":["String"],"returnDataType":["void"]}},"myMethods":{"main":{"name":"main","lineBegin":11,"lineEnd":14,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String[]","variable":"args","qualifedType":""}],"variables":[],"body":"{\n    SpringApplication.run(HospitalApplication.class, args);\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.boot.SpringApplication","org.springframework.boot.autoconfigure.SpringBootApplication","org.springframework.scheduling.annotation.EnableScheduling"]},"pt.iscte.hospital.objects.utils.Day":{"qualifiedName":"pt.iscte.hospital.objects.utils.Day","begin":1,"end":43,"isInterface":false,"annotations":[],"variables":["Integer dayId","Integer dayNumber","String dateStr","LocalDate date","String color"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"Integer","variable":"dayId","lineBegin":6,"lineEnd":6},{"annotations":[],"modifier":"private ","identifier":[],"type":"Integer","variable":"dayNumber","lineBegin":7,"lineEnd":7},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"dateStr","lineBegin":8,"lineEnd":8},{"annotations":[],"modifier":"private ","identifier":[],"type":"LocalDate","variable":"date","lineBegin":9,"lineEnd":9},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"color","lineBegin":10,"lineEnd":10}],"dependencies":[],"methods":{"setColor":{"name":"setColor","parametersDataType":["String"],"returnDataType":["void"]},"getDayNumber":{"name":"getDayNumber","parametersDataType":[],"returnDataType":["Integer"]},"getDateStr":{"name":"getDateStr","parametersDataType":[],"returnDataType":["String"]},"getColor":{"name":"getColor","parametersDataType":[],"returnDataType":["String"]},"getDate":{"name":"getDate","parametersDataType":[],"returnDataType":["LocalDate"]},"getDayId":{"name":"getDayId","parametersDataType":[],"returnDataType":["Integer"]}},"myMethods":{"setColor":{"name":"setColor","lineBegin":40,"lineEnd":42,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"String","variable":"color","qualifedType":""}],"variables":[],"body":"{\n    this.color \u003d color;\n}","methodInvocations":[]},"getDayNumber":{"name":"getDayNumber","lineBegin":24,"lineEnd":26,"annotations":[],"returnDataType":["Integer"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return dayNumber;\n}","methodInvocations":[]},"getDateStr":{"name":"getDateStr","lineBegin":28,"lineEnd":30,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return dateStr;\n}","methodInvocations":[]},"getColor":{"name":"getColor","lineBegin":36,"lineEnd":38,"annotations":[],"returnDataType":["String"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return color;\n}","methodInvocations":[]},"getDate":{"name":"getDate","lineBegin":32,"lineEnd":34,"annotations":[],"returnDataType":["LocalDate"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return date;\n}","methodInvocations":[]},"getDayId":{"name":"getDayId","lineBegin":20,"lineEnd":22,"annotations":[],"returnDataType":["Integer"],"identifier":[],"parametersDataType":[],"variables":[],"body":"{\n    return dayId;\n}","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":[],"imports":["java.time.LocalDate"]},"pt.iscte.hospital.controllers.patient_receptionist.CheckInController":{"qualifiedName":"pt.iscte.hospital.controllers.patient_receptionist.CheckInController","begin":1,"end":181,"isInterface":false,"annotations":["@Controller"],"variables":["String PATIENT_TYPE_URL","String RECEPTIONIST_TYPE_URL","String USER_TYPE_URL","String PATIENT_CHECK_IN_LINK","String RECEPTIONIST_CHECK_IN_LINK","String REDIRECT_URL","UserService userService","AppointmentService appointmentService","SpecialityService specialityService","Common common","User userLogged","Long userId","LocalDate date","List\u003cAppointment\u003e appointments","User userLogged","Long userId","Appointment appointmentCheckIn","LocalDate date","List\u003cAppointment\u003e appointments","User userLogged","LocalDate date","List\u003cAppointment\u003e appointments","Appointment appointmentCheckIn","ModelMap modelMap","List\u003cSpeciality\u003e specialities"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"PATIENT_TYPE_URL","lineBegin":27,"lineEnd":27},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"RECEPTIONIST_TYPE_URL","lineBegin":28,"lineEnd":28},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"USER_TYPE_URL","lineBegin":29,"lineEnd":29},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"PATIENT_CHECK_IN_LINK","lineBegin":30,"lineEnd":30},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"RECEPTIONIST_CHECK_IN_LINK","lineBegin":31,"lineEnd":31},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"REDIRECT_URL","lineBegin":32,"lineEnd":32},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"UserService","variable":"userService","lineBegin":34,"lineEnd":35},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"AppointmentService","variable":"appointmentService","lineBegin":36,"lineEnd":37},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"SpecialityService","variable":"specialityService","lineBegin":38,"lineEnd":39},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"Common","variable":"common","lineBegin":40,"lineEnd":41}],"dependencies":["pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.AppointmentService","pt.iscte.hospital.services.SpecialityService","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Speciality"],"methods":{"pageCheckInByReceptionist":{"name":"pageCheckInByReceptionist","parametersDataType":["ModelMap"],"returnDataType":["String"]},"pageCheckInByPatient":{"name":"pageCheckInByPatient","parametersDataType":["ModelMap"],"returnDataType":["String"]},"pageCheckInDonebyPatient":{"name":"pageCheckInDonebyPatient","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"pageCheckInByAppointmentByReceptionist":{"name":"pageCheckInByAppointmentByReceptionist","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"saveCheckIn":{"name":"saveCheckIn","parametersDataType":["Long"],"returnDataType":["void"]},"pageCheckInByReceptionistSearch":{"name":"pageCheckInByReceptionistSearch","parametersDataType":["ModelMap","String","String","String"],"returnDataType":["String"]},"pageCheckInDoneByReceptionist":{"name":"pageCheckInDoneByReceptionist","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]},"checkInView":{"name":"checkInView","parametersDataType":["Appointment","String","String","String","String","String"],"returnDataType":["ModelMap"]}},"myMethods":{"pageCheckInByReceptionist":{"name":"pageCheckInByReceptionist","lineBegin":83,"lineEnd":100,"annotations":["@GetMapping(value \u003d \"/receptionist/checkin\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"}],"body":"{\n    LocalDate date \u003d LocalDate.now();\n    List\u003cAppointment\u003e appointments \u003d appointmentService.findAllBySlotDateAndAppointmentStatus(date, MARCADA.getStateNr());\n    appointments.sort(null);\n    modelMap.addAllAttributes(checkInView(appointments, RECEPTIONIST_TYPE_URL, RECEPTIONIST_CHECK_IN_LINK, null, null, null));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"appointmentService","methodName":"findAllBySlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointments","methodName":"sort","targetClassName":"pt.iscte.hospital.entities.Appointment"}]},"pageCheckInByPatient":{"name":"pageCheckInByPatient","lineBegin":43,"lineEnd":63,"annotations":["@GetMapping(value \u003d \"/patient/checkin\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""},{"type":"Long","variable":"userId","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    Long userId \u003d userLogged.getUserId();\n    LocalDate date \u003d LocalDate.now();\n    List\u003cAppointment\u003e appointments \u003d appointmentService.findAllByPatientUserIdAndSlotDateAndAppointmentStatus(userId, date, MARCADA.getStateNr());\n    appointments.sort(null);\n    modelMap.addAllAttributes(checkInView(appointments, PATIENT_TYPE_URL, PATIENT_CHECK_IN_LINK, null, null, null));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllByPatientUserIdAndSlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointments","methodName":"sort","targetClassName":"pt.iscte.hospital.entities.Appointment"}]},"pageCheckInDonebyPatient":{"name":"pageCheckInDonebyPatient","lineBegin":65,"lineEnd":80,"annotations":["@GetMapping(value \u003d \"/patient/checkin/{appointmentId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""},{"type":"Long","variable":"userId","qualifedType":""},{"type":"Appointment","variable":"appointmentCheckIn","qualifedType":""}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    Long userId \u003d userLogged.getUserId();\n    // Fazer check in e salvar\n    Appointment appointmentCheckIn \u003d appointmentService.findByAppointmentId(appointmentId);\n    if (appointmentCheckIn.getPatient().getUserId().equals(userId)) {\n        appointmentCheckIn.setHasChecked(true);\n        appointmentCheckIn.setTimeOfArrival(LocalTime.now());\n        appointmentService.saveAppointment(appointmentCheckIn);\n    }\n    return String.format(REDIRECT_URL, PATIENT_TYPE_URL);\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentCheckIn","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentCheckIn.getPatient()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointmentCheckIn.getPatient().getUserId()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointmentCheckIn","methodName":"setHasChecked","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentCheckIn","methodName":"setTimeOfArrival","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"}]},"pageCheckInByAppointmentByReceptionist":{"name":"pageCheckInByAppointmentByReceptionist","lineBegin":141,"lineEnd":150,"annotations":["@PostMapping(value \u003d \"/receptionist/checkinbyAppointmentId\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[],"body":"{\n    // Fazer check in e salvar\n    if (appointmentId !\u003d null) {\n        saveCheckIn(appointmentId);\n    }\n    return String.format(REDIRECT_URL, RECEPTIONIST_TYPE_URL);\n}","methodInvocations":[]},"saveCheckIn":{"name":"saveCheckIn","lineBegin":152,"lineEnd":158,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[{"type":"Appointment","variable":"appointmentCheckIn","qualifedType":""}],"body":"{\n    Appointment appointmentCheckIn \u003d appointmentService.findByAppointmentId(appointmentId);\n    appointmentCheckIn.setHasChecked(true);\n    appointmentCheckIn.setDate(LocalDate.now());\n    appointmentCheckIn.setTimeOfArrival(LocalTime.now());\n    appointmentService.saveAppointment(appointmentCheckIn);\n}","methodInvocations":[{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentCheckIn","methodName":"setHasChecked","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentCheckIn","methodName":"setDate","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentCheckIn","methodName":"setTimeOfArrival","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"}]},"pageCheckInByReceptionistSearch":{"name":"pageCheckInByReceptionistSearch","lineBegin":103,"lineEnd":130,"annotations":["@PostMapping(value \u003d \"/receptionist/checkin\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""},{"type":"LocalDate","variable":"date","qualifedType":""},{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":"pt.iscte.hospital.entities.Appointment"}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    LocalDate date \u003d LocalDate.now();\n    if (specialityName \u003d\u003d null) {\n        specialityName \u003d \"\";\n    }\n    List\u003cAppointment\u003e appointments \u003d appointmentService.findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase(date, MARCADA.getStateNr(), specialityName, doctorName, patientName);\n    modelMap.addAllAttributes(checkInView(appointments, RECEPTIONIST_TYPE_URL, RECEPTIONIST_CHECK_IN_LINK, specialityName, doctorName, patientName));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"appointmentService","methodName":"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.services.AppointmentService"}]},"pageCheckInDoneByReceptionist":{"name":"pageCheckInDoneByReceptionist","lineBegin":132,"lineEnd":139,"annotations":["@GetMapping(value \u003d \"/receptionist/checkin/{appointmentId}\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"appointmentId","qualifedType":""}],"variables":[],"body":"{\n    // Fazer check in e salvar\n    saveCheckIn(appointmentId);\n    return String.format(REDIRECT_URL, RECEPTIONIST_TYPE_URL);\n}","methodInvocations":[]},"checkInView":{"name":"checkInView","lineBegin":160,"lineEnd":179,"annotations":[],"returnDataType":["ModelMap"],"identifier":[],"parametersDataType":[{"type":"List\u003cAppointment\u003e","variable":"appointments","qualifedType":""},{"type":"String","variable":"userTypeURL","qualifedType":""},{"type":"String","variable":"checkInLink","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""}],"variables":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"List\u003cSpeciality\u003e","variable":"specialities","qualifedType":"pt.iscte.hospital.entities.Speciality"}],"body":"{\n    ModelMap modelMap \u003d new ModelMap();\n    List\u003cSpeciality\u003e specialities \u003d specialityService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"specialities\", specialities);\n    modelMap.put(\"appointments\", appointments);\n    modelMap.put(\"checkInLink\", checkInLink);\n    modelMap.put(\"userTypeURL\", userTypeURL);\n    modelMap.put(\"specialityName\", specialityName);\n    modelMap.put(\"doctorName\", doctorName);\n    modelMap.put(\"patientName\", patientName);\n    return modelMap;\n}","methodInvocations":[{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"modelMap","methodName":"addAllAttributes","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""}]}},"methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findAllByPatientUserIdAndSlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentCheckIn","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentCheckIn.getPatient()","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointmentCheckIn.getPatient().getUserId()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"appointmentCheckIn","methodName":"setHasChecked","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentCheckIn","methodName":"setTimeOfArrival","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"findAllBySlotDateAndAppointmentStatus","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"appointmentService","methodName":"findAllBySlotDateAndAppointmentStatusAndSlotDoctorSpecialityNameContainingIgnoreCaseAndSlotDoctorNameContainingIgnoreCaseAndPatientNameContainingIgnoreCase","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentService","methodName":"findByAppointmentId","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"appointmentCheckIn","methodName":"setHasChecked","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentCheckIn","methodName":"setDate","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentCheckIn","methodName":"setTimeOfArrival","targetClassName":"pt.iscte.hospital.entities.Appointment"},{"scopeName":"appointmentService","methodName":"saveAppointment","targetClassName":"pt.iscte.hospital.services.AppointmentService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.data.domain.Sort","org.springframework.stereotype.Controller","org.springframework.ui.ModelMap","org.springframework.web.bind.annotation.GetMapping","org.springframework.web.bind.annotation.PathVariable","org.springframework.web.bind.annotation.PostMapping","org.springframework.web.bind.annotation.RequestParam","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.Appointment","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.User","pt.iscte.hospital.services.AppointmentService","pt.iscte.hospital.services.SpecialityService","pt.iscte.hospital.services.user.UserService","java.time.LocalDate","java.time.LocalTime","java.util.List","pt.iscte.hospital.entities.states.AppointmentState.MARCADA"]},"pt.iscte.hospital.repositories.user.PatientRepository":{"qualifiedName":"pt.iscte.hospital.repositories.user.PatientRepository","begin":1,"end":16,"isInterface":true,"annotations":["@Repository"],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient","pt.iscte.hospital.entities.Patient"],"methods":{"findByUsername":{"name":"findByUsername","parametersDataType":["String"],"returnDataType":["Patient"]},"findAllByNameContainingIgnoreCase":{"name":"findAllByNameContainingIgnoreCase","parametersDataType":["String"],"returnDataType":["Patient"]},"findByUserId":{"name":"findByUserId","parametersDataType":["Long"],"returnDataType":["Patient"]},"findByName":{"name":"findByName","parametersDataType":["String"],"returnDataType":["Patient"]},"findByEmail":{"name":"findByEmail","parametersDataType":["String"],"returnDataType":["Patient"]}},"myMethods":{"findByUsername":{"name":"findByUsername","lineBegin":12,"lineEnd":12,"annotations":[],"returnDataType":["Patient"],"identifier":[],"parametersDataType":[{"type":"String","variable":"username","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAllByNameContainingIgnoreCase":{"name":"findAllByNameContainingIgnoreCase","lineBegin":14,"lineEnd":14,"annotations":[],"returnDataType":["List\u003cPatient\u003e"],"identifier":["List","Patient"],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByUserId":{"name":"findByUserId","lineBegin":13,"lineEnd":13,"annotations":[],"returnDataType":["Patient"],"identifier":[],"parametersDataType":[{"type":"Long","variable":"patientId","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByName":{"name":"findByName","lineBegin":10,"lineEnd":10,"annotations":[],"returnDataType":["Patient"],"identifier":[],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findByEmail":{"name":"findByEmail","lineBegin":11,"lineEnd":11,"annotations":[],"returnDataType":["Patient"],"identifier":[],"parametersDataType":[{"type":"String","variable":"email","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["JpaRepository\u003cPatient, Long\u003e"],"imports":["org.springframework.data.jpa.repository.JpaRepository","org.springframework.stereotype.Repository","pt.iscte.hospital.entities.Patient","java.util.List"]},"pt.iscte.hospital.services.RegistrationServiceImpl":{"qualifiedName":"pt.iscte.hospital.services.RegistrationServiceImpl","begin":1,"end":22,"isInterface":false,"annotations":["@Service"],"variables":["BCryptPasswordEncoder encoder","BCryptPasswordEncoder encoder"],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.User"],"methods":{"changeEncryptPassword":{"name":"changeEncryptPassword","parametersDataType":["User","String"],"returnDataType":["void"]},"encryptPassword":{"name":"encryptPassword","parametersDataType":["User"],"returnDataType":["void"]}},"myMethods":{"changeEncryptPassword":{"name":"changeEncryptPassword","lineBegin":15,"lineEnd":18,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"User","variable":"user","qualifedType":""},{"type":"String","variable":"password","qualifedType":""}],"variables":[{"type":"BCryptPasswordEncoder","variable":"encoder","qualifedType":""}],"body":"{\n    BCryptPasswordEncoder encoder \u003d new BCryptPasswordEncoder();\n    user.setPassword(encoder.encode(password));\n}","methodInvocations":[{"scopeName":"encoder","methodName":"encode","targetClassName":""},{"scopeName":"user","methodName":"setPassword","targetClassName":"pt.iscte.hospital.entities.User"}]},"encryptPassword":{"name":"encryptPassword","lineBegin":11,"lineEnd":14,"annotations":[],"returnDataType":["void"],"identifier":[],"parametersDataType":[{"type":"User","variable":"user","qualifedType":""}],"variables":[{"type":"BCryptPasswordEncoder","variable":"encoder","qualifedType":""}],"body":"{\n    BCryptPasswordEncoder encoder \u003d new BCryptPasswordEncoder();\n    user.setPassword(encoder.encode(user.getPassword()));\n}","methodInvocations":[{"scopeName":"user","methodName":"getPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"encoder","methodName":"encode","targetClassName":""},{"scopeName":"user","methodName":"setPassword","targetClassName":"pt.iscte.hospital.entities.User"}]}},"methodInvocations":[{"scopeName":"user","methodName":"getPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"setPassword","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"user","methodName":"setPassword","targetClassName":"pt.iscte.hospital.entities.User"}],"implementedTypes":["pt.iscte.hospital.services.RegistrationService","RegistrationService"],"extendedTypes":[],"imports":["org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder","org.springframework.stereotype.Service","pt.iscte.hospital.entities.User"]},"pt.iscte.hospital.repositories.SpecialityRepository":{"qualifiedName":"pt.iscte.hospital.repositories.SpecialityRepository","begin":1,"end":14,"isInterface":true,"annotations":["@Repository"],"variables":[],"instance_variables":[],"dependencies":["pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.Speciality"],"methods":{"findByName":{"name":"findByName","parametersDataType":["String"],"returnDataType":["Speciality"]},"findAll":{"name":"findAll","parametersDataType":[],"returnDataType":["Speciality"]}},"myMethods":{"findByName":{"name":"findByName","lineBegin":12,"lineEnd":12,"annotations":[],"returnDataType":["Speciality"],"identifier":[],"parametersDataType":[{"type":"String","variable":"name","qualifedType":""}],"variables":[],"body":"","methodInvocations":[]},"findAll":{"name":"findAll","lineBegin":13,"lineEnd":13,"annotations":[],"returnDataType":["List\u003cSpeciality\u003e"],"identifier":["List","Speciality"],"parametersDataType":[],"variables":[],"body":"","methodInvocations":[]}},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["JpaRepository\u003cSpeciality, Long\u003e"],"imports":["org.springframework.data.jpa.repository.JpaRepository","org.springframework.stereotype.Repository","pt.iscte.hospital.entities.Speciality","java.util.List"]},"pt.iscte.hospital.controllers.patient_receptionist.WaitingAppointmentController":{"qualifiedName":"pt.iscte.hospital.controllers.patient_receptionist.WaitingAppointmentController","begin":1,"end":250,"isInterface":false,"annotations":["@Controller"],"variables":["String PATIENT_TYPE_URL","String RECEPTIONIST_TYPE_URL","String USER_TYPE_URL","SpecialityService specialityService","UserService userService","PatientWaitingAppointmentService patientWaitingAppointmentService","Common common","User userLogged","Long userId","List\u003cPatientWaitingAppointment\u003e patientWaitingAppointments","List\u003cPatientWaitingAppointment\u003e patientWaitingAppointmentsPosition","Long i","PatientWaitingAppointment patientWaitingAppointment","User userLogged","Long userId","List\u003cPatientWaitingAppointment\u003e patientWaitingAppointmentListBeforeFilter","List\u003cPatientWaitingAppointment\u003e patientWaitingAppointments","User userLogged","PatientWaitingAppointment patientWaitingAppointment","List\u003cPatientWaitingAppointment\u003e patientWaitingAppointments","List\u003cPatientWaitingAppointment\u003e patientWaitingAppointmentsPosition","Long i","PatientWaitingAppointment patientWaitingAppointment","User userLogged","List\u003cPatientWaitingAppointment\u003e patientWaitingAppointmentListBeforeFilter","List\u003cPatientWaitingAppointment\u003e patientWaitingAppointments","ModelMap modelMap","List\u003cSpeciality\u003e specialities","List\u003cPatientWaitingAppointment\u003e result","Set\u003cPatientWaitingAppointment\u003e tempList","String[] patientNamesSearch","PatientWaitingAppointment patientWaitingAppointment","String nameSearch","Set\u003cPatientWaitingAppointment\u003e tempList","PatientWaitingAppointment patientWaitingAppointment","Set\u003cPatientWaitingAppointment\u003e tempList","String[] doctorNamesSearch","PatientWaitingAppointment patientWaitingAppointment","String nameSearch"],"instance_variables":[{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"PATIENT_TYPE_URL","lineBegin":27,"lineEnd":27},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"RECEPTIONIST_TYPE_URL","lineBegin":28,"lineEnd":28},{"annotations":[],"modifier":"private ","identifier":[],"type":"String","variable":"USER_TYPE_URL","lineBegin":29,"lineEnd":29},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"SpecialityService","variable":"specialityService","lineBegin":31,"lineEnd":32},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"UserService","variable":"userService","lineBegin":33,"lineEnd":34},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"PatientWaitingAppointmentService","variable":"patientWaitingAppointmentService","lineBegin":35,"lineEnd":36},{"annotations":["@Autowired"],"modifier":"private ","identifier":[],"type":"Common","variable":"common","lineBegin":37,"lineEnd":38}],"dependencies":["pt.iscte.hospital.services.SpecialityService","pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"],"methods":{"showMakeApplyForPatientWaitingAppointment":{"name":"showMakeApplyForPatientWaitingAppointment","parametersDataType":["ModelMap","String","String"],"returnDataType":["String"]},"filterWaitingAppointments":{"name":"filterWaitingAppointments","parametersDataType":["PatientWaitingAppointment","String","String","String"],"returnDataType":["PatientWaitingAppointment"]},"showPatientWaitingAppointmentList":{"name":"showPatientWaitingAppointmentList","parametersDataType":["ModelMap"],"returnDataType":["String"]},"showMakeApplyForReceptionistWaitingAppointment":{"name":"showMakeApplyForReceptionistWaitingAppointment","parametersDataType":["ModelMap","String","String","String"],"returnDataType":["String"]},"appointmentListView":{"name":"appointmentListView","parametersDataType":["PatientWaitingAppointment","String","String","String"],"returnDataType":["ModelMap"]},"showReceptionistWaitingAppointmentList":{"name":"showReceptionistWaitingAppointmentList","parametersDataType":["ModelMap"],"returnDataType":["String"]},"cancelPatientWaitingAppointmentRequest":{"name":"cancelPatientWaitingAppointmentRequest","parametersDataType":["ModelMap","Long"],"returnDataType":["String"]}},"myMethods":{"showMakeApplyForPatientWaitingAppointment":{"name":"showMakeApplyForPatientWaitingAppointment","lineBegin":71,"lineEnd":100,"annotations":["@PostMapping(value \u003d \"patient/waitingAppointment\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""},{"type":"Long","variable":"userId","qualifedType":""},{"type":"List\u003cPatientWaitingAppointment\u003e","variable":"patientWaitingAppointmentListBeforeFilter","qualifedType":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"type":"List\u003cPatientWaitingAppointment\u003e","variable":"patientWaitingAppointments","qualifedType":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    Long userId \u003d userLogged.getUserId();\n    if (specialityName \u003d\u003d null) {\n        specialityName \u003d \"\";\n    }\n    List\u003cPatientWaitingAppointment\u003e patientWaitingAppointmentListBeforeFilter \u003d patientWaitingAppointmentService.findAllByPatientUserIdAndClosed(userId, false);\n    List\u003cPatientWaitingAppointment\u003e patientWaitingAppointments \u003d filterWaitingAppointments(patientWaitingAppointmentListBeforeFilter, null, specialityName, doctorName);\n    patientWaitingAppointments.sort(null);\n    modelMap.addAllAttributes(appointmentListView(patientWaitingAppointments, PATIENT_TYPE_URL, doctorName, specialityName));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByPatientUserIdAndClosed","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointments","methodName":"sort","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"}]},"filterWaitingAppointments":{"name":"filterWaitingAppointments","lineBegin":199,"lineEnd":249,"annotations":[],"returnDataType":["List\u003cPatientWaitingAppointment\u003e"],"identifier":["List","PatientWaitingAppointment"],"parametersDataType":[{"type":"List\u003cPatientWaitingAppointment\u003e","variable":"waitingAppointments","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""}],"variables":[{"type":"List\u003cPatientWaitingAppointment\u003e","variable":"result","qualifedType":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"type":"Set\u003cPatientWaitingAppointment\u003e","variable":"tempList","qualifedType":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"type":"String[]","variable":"patientNamesSearch","qualifedType":""},{"type":"PatientWaitingAppointment","variable":"patientWaitingAppointment","qualifedType":""},{"type":"String","variable":"nameSearch","qualifedType":""},{"type":"Set\u003cPatientWaitingAppointment\u003e","variable":"tempList","qualifedType":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"type":"PatientWaitingAppointment","variable":"patientWaitingAppointment","qualifedType":""},{"type":"Set\u003cPatientWaitingAppointment\u003e","variable":"tempList","qualifedType":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"type":"String[]","variable":"doctorNamesSearch","qualifedType":""},{"type":"PatientWaitingAppointment","variable":"patientWaitingAppointment","qualifedType":""},{"type":"String","variable":"nameSearch","qualifedType":""}],"body":"{\n    List\u003cPatientWaitingAppointment\u003e result \u003d waitingAppointments;\n    // Filter by Patient Name\n    if (patientName !\u003d null \u0026\u0026 !patientName.isEmpty()) {\n        Set\u003cPatientWaitingAppointment\u003e tempList \u003d new HashSet\u003c\u003e();\n        String[] patientNamesSearch \u003d patientName.split(\" \");\n        for (String nameSearch : patientNamesSearch) {\n            for (PatientWaitingAppointment patientWaitingAppointment : result) {\n                if (patientWaitingAppointment.getPatient().getFirstAndLastName().toLowerCase().contains(nameSearch.toLowerCase())) {\n                    tempList.add(patientWaitingAppointment);\n                }\n            }\n        }\n        result.clear();\n        result.addAll(tempList);\n    }\n    // Filter by Speciality\n    if (specialityName !\u003d null \u0026\u0026 !specialityName.isEmpty()) {\n        Set\u003cPatientWaitingAppointment\u003e tempList \u003d new HashSet\u003c\u003e();\n        for (PatientWaitingAppointment patientWaitingAppointment : result) {\n            if (patientWaitingAppointment.getDoctor().getSpeciality().getName().equals(specialityName)) {\n                tempList.add(patientWaitingAppointment);\n            }\n        }\n        result.clear();\n        result.addAll(tempList);\n    }\n    // Doctor Name\n    if (doctorName !\u003d null \u0026\u0026 !doctorName.isEmpty()) {\n        Set\u003cPatientWaitingAppointment\u003e tempList \u003d new HashSet\u003c\u003e();\n        String[] doctorNamesSearch \u003d doctorName.split(\" \");\n        for (String nameSearch : doctorNamesSearch) {\n            for (PatientWaitingAppointment patientWaitingAppointment : result) {\n                if (patientWaitingAppointment.getDoctor().getFirstAndLastName().toLowerCase().contains(nameSearch.toLowerCase())) {\n                    tempList.add(patientWaitingAppointment);\n                }\n            }\n        }\n        result.clear();\n        result.addAll(tempList);\n    }\n    return result;\n}","methodInvocations":[{"scopeName":"nameSearch","methodName":"toLowerCase","targetClassName":""},{"scopeName":"patientWaitingAppointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment.getPatient()","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patientWaitingAppointment.getPatient().getFirstAndLastName()","methodName":"toLowerCase","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patientWaitingAppointment.getPatient().getFirstAndLastName().toLowerCase()","methodName":"contains","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"tempList","methodName":"add","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"result","methodName":"clear","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"result","methodName":"addAll","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment.getDoctor()","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"patientWaitingAppointment.getDoctor().getSpeciality()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"patientWaitingAppointment.getDoctor().getSpeciality().getName()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"tempList","methodName":"add","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"result","methodName":"clear","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"result","methodName":"addAll","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"nameSearch","methodName":"toLowerCase","targetClassName":""},{"scopeName":"patientWaitingAppointment","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment.getDoctor()","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"patientWaitingAppointment.getDoctor().getFirstAndLastName()","methodName":"toLowerCase","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"patientWaitingAppointment.getDoctor().getFirstAndLastName().toLowerCase()","methodName":"contains","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"tempList","methodName":"add","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"result","methodName":"clear","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"result","methodName":"addAll","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"}]},"showPatientWaitingAppointmentList":{"name":"showPatientWaitingAppointmentList","lineBegin":44,"lineEnd":68,"annotations":["@GetMapping(value \u003d \"patient/waitingAppointment\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""},{"type":"Long","variable":"userId","qualifedType":""},{"type":"List\u003cPatientWaitingAppointment\u003e","variable":"patientWaitingAppointments","qualifedType":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"type":"List\u003cPatientWaitingAppointment\u003e","variable":"patientWaitingAppointmentsPosition","qualifedType":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"type":"Long","variable":"i","qualifedType":""},{"type":"PatientWaitingAppointment","variable":"patientWaitingAppointment","qualifedType":""}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    Long userId \u003d userLogged.getUserId();\n    List\u003cPatientWaitingAppointment\u003e patientWaitingAppointments \u003d patientWaitingAppointmentService.findAllByPatientUserIdAndClosed(userId, false);\n    List\u003cPatientWaitingAppointment\u003e patientWaitingAppointmentsPosition \u003d patientWaitingAppointmentService.findAllByClosedOrderByDate(false);\n    Long i \u003d 1L;\n    for (PatientWaitingAppointment patientWaitingAppointment : patientWaitingAppointmentsPosition) {\n        patientWaitingAppointment.setPosition(i);\n        i++;\n        patientWaitingAppointmentService.save(patientWaitingAppointment);\n    }\n    modelMap.addAllAttributes(appointmentListView(patientWaitingAppointments, PATIENT_TYPE_URL, null, null));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByPatientUserIdAndClosed","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByClosedOrderByDate","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointment","methodName":"setPosition","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"}]},"showMakeApplyForReceptionistWaitingAppointment":{"name":"showMakeApplyForReceptionistWaitingAppointment","lineBegin":148,"lineEnd":176,"annotations":["@PostMapping(value \u003d \"receptionist/waitingAppointment\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""},{"type":"String","variable":"patientName","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""},{"type":"List\u003cPatientWaitingAppointment\u003e","variable":"patientWaitingAppointmentListBeforeFilter","qualifedType":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"type":"List\u003cPatientWaitingAppointment\u003e","variable":"patientWaitingAppointments","qualifedType":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    List\u003cPatientWaitingAppointment\u003e patientWaitingAppointmentListBeforeFilter \u003d patientWaitingAppointmentService.findAllByClosed(false);\n    List\u003cPatientWaitingAppointment\u003e patientWaitingAppointments \u003d filterWaitingAppointments(patientWaitingAppointmentListBeforeFilter, patientName, specialityName, doctorName);\n    patientWaitingAppointments.sort(null);\n    modelMap.addAllAttributes(appointmentListView(patientWaitingAppointments, RECEPTIONIST_TYPE_URL, doctorName, specialityName));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByClosed","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointments","methodName":"sort","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"}]},"appointmentListView":{"name":"appointmentListView","lineBegin":182,"lineEnd":197,"annotations":[],"returnDataType":["ModelMap"],"identifier":[],"parametersDataType":[{"type":"List\u003cPatientWaitingAppointment\u003e","variable":"patientWaitingAppointments","qualifedType":""},{"type":"String","variable":"userTypeURL","qualifedType":""},{"type":"String","variable":"doctorName","qualifedType":""},{"type":"String","variable":"specialityName","qualifedType":""}],"variables":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"List\u003cSpeciality\u003e","variable":"specialities","qualifedType":"pt.iscte.hospital.entities.Speciality"}],"body":"{\n    ModelMap modelMap \u003d new ModelMap();\n    List\u003cSpeciality\u003e specialities \u003d specialityService.findAll(Sort.by(Sort.Direction.ASC, \"name\"));\n    modelMap.put(\"specialities\", specialities);\n    modelMap.put(\"patientWaitingAppointments\", patientWaitingAppointments);\n    modelMap.addAllAttributes(common.sideNavMap());\n    modelMap.put(\"userTypeURL\", userTypeURL);\n    modelMap.put(\"doctorName\", doctorName);\n    modelMap.put(\"specialityName\", specialityName);\n    return modelMap;\n}","methodInvocations":[{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"modelMap","methodName":"addAllAttributes","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""},{"scopeName":"modelMap","methodName":"put","targetClassName":""}]},"showReceptionistWaitingAppointmentList":{"name":"showReceptionistWaitingAppointmentList","lineBegin":124,"lineEnd":145,"annotations":["@GetMapping(value \u003d \"receptionist/waitingAppointment\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""}],"variables":[{"type":"List\u003cPatientWaitingAppointment\u003e","variable":"patientWaitingAppointments","qualifedType":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"type":"List\u003cPatientWaitingAppointment\u003e","variable":"patientWaitingAppointmentsPosition","qualifedType":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"type":"Long","variable":"i","qualifedType":""},{"type":"PatientWaitingAppointment","variable":"patientWaitingAppointment","qualifedType":""}],"body":"{\n    List\u003cPatientWaitingAppointment\u003e patientWaitingAppointments \u003d patientWaitingAppointmentService.findAllByClosed(false);\n    List\u003cPatientWaitingAppointment\u003e patientWaitingAppointmentsPosition \u003d patientWaitingAppointmentService.findAllByClosedOrderByDate(false);\n    Long i \u003d 1L;\n    for (PatientWaitingAppointment patientWaitingAppointment : patientWaitingAppointmentsPosition) {\n        patientWaitingAppointment.setPosition(i);\n        i++;\n        patientWaitingAppointmentService.save(patientWaitingAppointment);\n    }\n    modelMap.addAllAttributes(appointmentListView(patientWaitingAppointments, RECEPTIONIST_TYPE_URL, null, null));\n    return USER_TYPE_URL;\n}","methodInvocations":[{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByClosed","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByClosedOrderByDate","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointment","methodName":"setPosition","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"}]},"cancelPatientWaitingAppointmentRequest":{"name":"cancelPatientWaitingAppointmentRequest","lineBegin":103,"lineEnd":120,"annotations":["@GetMapping(value \u003d \"patient/waitingAppointment/{patientWaitingAppointmentId}/cancel\")"],"returnDataType":["String"],"identifier":[],"parametersDataType":[{"type":"ModelMap","variable":"modelMap","qualifedType":""},{"type":"Long","variable":"patientWaitingAppointmentId","qualifedType":""}],"variables":[{"type":"User","variable":"userLogged","qualifedType":""},{"type":"PatientWaitingAppointment","variable":"patientWaitingAppointment","qualifedType":""}],"body":"{\n    User userLogged \u003d userService.currentUser();\n    PatientWaitingAppointment patientWaitingAppointment \u003d patientWaitingAppointmentService.findByPatientWaitingAppointmentId(patientWaitingAppointmentId);\n    patientWaitingAppointment.setClosed(true);\n    patientWaitingAppointment.setPosition(0L);\n    patientWaitingAppointmentService.save(patientWaitingAppointment);\n    modelMap.put(\"user_logged\", userLogged);\n    modelMap.put(\"message\", \"O seu pedido de marcação de consulta em lista de espera foi cancelado com sucesso.\");\n    modelMap.put(\"imageURL\", AlertMessageImage.SUCCESS.getImageURL());\n    return \"components/alert-message\";\n}","methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"patientWaitingAppointmentService","methodName":"findByPatientWaitingAppointmentId","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointment","methodName":"setClosed","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment","methodName":"setPosition","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"}]}},"methodInvocations":[{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByPatientUserIdAndClosed","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByClosedOrderByDate","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointment","methodName":"setPosition","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"userLogged","methodName":"getUserId","targetClassName":"pt.iscte.hospital.entities.User"},{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByPatientUserIdAndClosed","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"patientWaitingAppointmentService","methodName":"findByPatientWaitingAppointmentId","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointment","methodName":"setClosed","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment","methodName":"setPosition","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByClosed","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByClosedOrderByDate","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"patientWaitingAppointment","methodName":"setPosition","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointmentService","methodName":"save","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"userService","methodName":"currentUser","targetClassName":"pt.iscte.hospital.services.user.UserService"},{"scopeName":"patientWaitingAppointmentService","methodName":"findAllByClosed","targetClassName":"pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService"},{"scopeName":"specialityService","methodName":"findAll","targetClassName":"pt.iscte.hospital.services.SpecialityService"},{"scopeName":"common","methodName":"sideNavMap","targetClassName":"pt.iscte.hospital.controllers.utils.Common"},{"scopeName":"patientWaitingAppointment","methodName":"getPatient","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment.getPatient()","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patientWaitingAppointment.getPatient().getFirstAndLastName()","methodName":"toLowerCase","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patientWaitingAppointment.getPatient().getFirstAndLastName().toLowerCase()","methodName":"contains","targetClassName":"pt.iscte.hospital.entities.Patient"},{"scopeName":"patientWaitingAppointment","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment.getDoctor()","methodName":"getSpeciality","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"patientWaitingAppointment.getDoctor().getSpeciality()","methodName":"getName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"patientWaitingAppointment.getDoctor().getSpeciality().getName()","methodName":"equals","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"patientWaitingAppointment","methodName":"getDoctor","targetClassName":"pt.iscte.hospital.entities.waiting.PatientWaitingAppointment"},{"scopeName":"patientWaitingAppointment.getDoctor()","methodName":"getFirstAndLastName","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"patientWaitingAppointment.getDoctor().getFirstAndLastName()","methodName":"toLowerCase","targetClassName":"pt.iscte.hospital.entities.Doctor"},{"scopeName":"patientWaitingAppointment.getDoctor().getFirstAndLastName().toLowerCase()","methodName":"contains","targetClassName":"pt.iscte.hospital.entities.Doctor"}],"implementedTypes":[],"extendedTypes":[],"imports":["org.springframework.beans.factory.annotation.Autowired","org.springframework.data.domain.Sort","org.springframework.stereotype.Controller","org.springframework.ui.ModelMap","org.springframework.web.bind.annotation.GetMapping","org.springframework.web.bind.annotation.PathVariable","org.springframework.web.bind.annotation.PostMapping","org.springframework.web.bind.annotation.RequestParam","pt.iscte.hospital.controllers.utils.Common","pt.iscte.hospital.entities.Speciality","pt.iscte.hospital.entities.User","pt.iscte.hospital.entities.waiting.PatientWaitingAppointment","pt.iscte.hospital.objects.utils.AlertMessageImage","pt.iscte.hospital.services.SpecialityService","pt.iscte.hospital.services.user.UserService","pt.iscte.hospital.services.waiting.PatientWaitingAppointmentService","java.util.HashSet","java.util.List","java.util.Set"]},"pt.iscte.hospital.exceptions.ImageSizeException":{"qualifiedName":"pt.iscte.hospital.exceptions.ImageSizeException","begin":1,"end":4,"isInterface":false,"annotations":[],"variables":[],"instance_variables":[],"dependencies":[],"methods":{},"myMethods":{},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["Throwable"],"imports":[]},"pt.iscte.hospital.exceptions.PaymentException":{"qualifiedName":"pt.iscte.hospital.exceptions.PaymentException","begin":1,"end":3,"isInterface":false,"annotations":[],"variables":[],"instance_variables":[],"dependencies":[],"methods":{},"myMethods":{},"methodInvocations":[],"implementedTypes":[],"extendedTypes":["Throwable"],"imports":[]}}