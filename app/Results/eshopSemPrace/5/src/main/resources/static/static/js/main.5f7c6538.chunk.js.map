{"version":3,"sources":["services/BackendService.js","components/Home.js","services/AuthenticationService.js","components/Profile.js","components/SignUp.js","components/Login.js","components/AddProduct.js","components/Products.js","components/AdminManageProd.js","components/AdminManageDop.js","components/AddDoprava.js","components/AdminManageVyrob.js","components/AdminManagePlat.js","components/AddVyrobce.js","components/AddPlatba.js","components/AdminNakup.js","components/DetailNakup.js","components/Cart.js","components/AppNavbar.js","App.js","reportWebVitals.js","index.js"],"names":["axios","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","accessToken","token","headers","Authorization","a","get","SERVER_ADDRESS","id","produkt","post","delete","doprava","vyrobce","platba","orderDetail","Home","useState","item","setItems","cart","setCart","useEffect","BackendService","getTOPProduktList","then","resp","console","log","data","error","toString","Container","fluid","style","marginTop","Alert","variant","length","map","nazev","cena","slevaProcenta","Button","type","onClick","event","prod","kos","setItem","stringify","onAddToCart","userKey","AuthenticationService","signIn","username","password","process","response","value","catch","err","signOut","removeItem","register","isSignedIn","isAdmin","this","admin","getCurrentUser","authorities","forEach","authority","Profile","userInfo","undefined","setUser","roles","SingUp","email","message","setMessage","changeValueHandler","name","Row","Col","Form","onSubmit","e","preventDefault","Authentication","FormGroup","controlId","Label","for","Input","placeholder","autoComplete","onChange","target","required","address","setUsername","setPassword","history","useHistory","changeHandler","nam","val","doLogin","push","window","location","reload","autoFocus","size","block","AddProduct","popis","vNabidce","newItem","setNewItem","newItemN","setNewItemN","getVyrobceList","changeValue","postNewProdukt","onNewItem","changeValues","Products","Cart","getProduktList","OnAddToCart","blel","paginationOption","custom","totalSize","columns","dataField","text","sort","filter","numberFilter","isDummyField","csvExport","formatter","cell","row","pagination","paginationFactory","paginationProps","paginationTableProps","keyField","filterFactory","AdminManageProd","itemToDelete","deleteProdukt","filtered","AdminManageDop","getDopravaList","deleteDoprava","AddDoprava","postNewDoprava","AdminManageVyrob","deleteVyrobce","AdminManagePlat","getPlatbaList","deletePlatba","AddVyrobce","adresa","postNewVyrobce","AddPlatba","prevod","postNewPlatba","AdminNakup","getNakupy","getPotvrdObj","itemToView","DetailNakup","itemN","setItemsN","useParams","getDetailNakupu","getDetailNakupuPolozky","resps","objednavka","datumVytvoreni","String","stav","nakup","itemDoprava","setItemDoprava","itemPlatba","setItemPlatba","polozky","orderSpec","onDeleteItem","index","findIndex","splice","removeFromCart","changeValuesDoprava","changeValuesPlatba","postCartOrderItem","clear","withRouter","Navbar","bg","Brand","href","Toggle","aria-controls","Nav","Link","className","App","path","exact","component","Login","SignUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f7c6538.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.interceptors.request.use(config => {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.accessToken) {\n        const token = 'Bearer ' + user.accessToken;\n        config.headers.Authorization = token;\n    }\n\n    return config;\n});\n\nconst SERVER_ADDRESS = process.env.REACT_APP_BASE_URI\n\nclass BackendService {\n\n    async getTOPProduktList() {\n        return await axios.get(SERVER_ADDRESS + \"/produkt\");\n    }\n\n    async getProduktList() {\n        return await axios.get(SERVER_ADDRESS + \"/produkt/all-products\");\n    }\n    async getProdukt(id) {\n        return await axios.get(SERVER_ADDRESS + \"/produkt/\"+id);\n    }\n\n    async postNewProdukt(produkt) {\n        return await axios.post(SERVER_ADDRESS + \"/produkt\", produkt);\n    }\n\n    async deleteProdukt(id) {\n        return await axios.delete(SERVER_ADDRESS + \"/produkt/\" + id);\n    }\n\n    async getDopravaList() {\n        return await axios.get(SERVER_ADDRESS + \"/doprava\");\n    }\n\n    async deleteDoprava(id) {\n        return await axios.delete(SERVER_ADDRESS + \"/doprava/\" + id);\n    }\n\n    async postNewDoprava(doprava) {\n        debugger\n        return await axios.post(SERVER_ADDRESS + \"/doprava\", doprava);\n    }\n\n    async getVyrobceList() {\n        return await axios.get(SERVER_ADDRESS + \"/vyrobce\");\n    }\n\n    async deleteVyrobce(id) {\n        return await axios.delete(SERVER_ADDRESS + \"/vyrobce/\" + id);\n    }\n\n    async postNewVyrobce(vyrobce) {\n        return await axios.post(SERVER_ADDRESS + \"/vyrobce/\", vyrobce);\n    }\n\n    async getPlatbaList() {\n        return await axios.get(SERVER_ADDRESS + \"/platba\");\n    }\n\n    async deletePlatba(id) {\n        return await axios.delete(SERVER_ADDRESS + \"/platba/\" + id);\n    }\n\n    async postNewPlatba(platba) {\n        return await axios.post(SERVER_ADDRESS + \"/platba/\", platba);\n    }\n\n    async getCartAddItem(id) {\n        return await axios.get(SERVER_ADDRESS + \"/cart/add/\" + id);\n    }\n\n    async getCartItems() {\n        return await axios.get(SERVER_ADDRESS + \"/cart/show/\");\n    }\n\n    async getCartDeleteItem(id) {\n        return await axios.get(SERVER_ADDRESS + \"/cart/delete/\" + id);\n    }\n\n    async postCartOrderItem(orderDetail) {\n        return await axios.post(SERVER_ADDRESS + \"/cart/\", orderDetail);\n    }\n\n    async getNakupy() {\n        return await axios.get(SERVER_ADDRESS + \"/nakup/\");\n    }\n\n    async getDetailNakupu(id) {\n        return await axios.get(SERVER_ADDRESS + \"/nakup/nakup-detail/\" + id);\n    }\n\n    async getDetailNakupuPolozky(id) {\n        return await axios.get(SERVER_ADDRESS + \"/nakup/nakup-detail-polozky/\" + id);\n    }\n\n    async getPotvrdObj(id) {\n        return await axios.get(SERVER_ADDRESS + \"/nakup/nakup-zmen-stav/\" + id);\n    }\n}\n\nexport default new BackendService();","import {Alert, Button, Container} from \"react-bootstrap\";\nimport '../App.css';\nimport BackendService from \"../services/BackendService\";\nimport React, {useState, useEffect} from 'react';\n\nconst Home = () => {\n    const [item, setItems] = useState([]);\n    const [cart,setCart] = useState([]);\n\n    useEffect(() => {\n        BackendService.getTOPProduktList()\n            .then((resp) => {\n                console.log(resp)\n                setItems(resp.data)\n            }, (error) => {\n                console.log(error.toString())\n            })\n        if (JSON.parse(localStorage.getItem('kosik'))!=null) {\n            setCart(JSON.parse(localStorage.getItem('kosik')))\n        }\n    }, []);\n\n    const onAddToCart = (prod) => {\n        const kos = [...cart,prod]\n        setCart(kos)\n        localStorage.setItem('kosik', JSON.stringify(kos));\n    }\n\n    return (\n        <div>\n            <Container fluid>\n                <div style={{\n                    marginTop: \"20px\"\n                }\n                }>\n                    <Alert variant=\"primary\">\n                        <h2>Vitame vas v nasem eshopu</h2>\n                    </Alert>\n                    <h2>Zde jsou vybrane produkty s nejvetsu slevou</h2>\n                    {item && item.length > 0 && item.map(produkt =>\n                        <div key={produkt.id}>\n                            Nazev produktu: {produkt.nazev}, cena: {produkt.cena}, sleva: {produkt.slevaProcenta}\n                            <Button type=\"submit\" onClick={(event) => {\n                                onAddToCart(produkt)\n                            }}>Pridej do kosiku</Button>\n                        </div>\n                    )}\n                </div>\n            </Container>\n        </div>\n    )\n        ;\n}\n\nexport default Home;","import axios from \"axios\";\n\nconst userKey = \"user\";\nconst SERVER_PREFIX = process.env.REACT_APP_BASE_URI\n\nconst AuthenticationService = {\n    signIn: function (username, password) {\n        return axios.post(`${SERVER_PREFIX}/api/auth/signin`, {username, password})\n            .then(response => {\n                if (response.data.accessToken) {\n                    let value = JSON.stringify(response.data)\n                    localStorage.setItem(userKey, value)\n                }\n                return response.data;\n            })\n            .catch(err => {\n                throw err;\n            })\n    },\n\n    signOut: function () {\n        localStorage.removeItem(userKey)\n    },\n\n    register: function async(user) {\n        return axios.post(`${SERVER_PREFIX}/api/auth/signup`, user);\n    },\n\n    isSignedIn: function async() {\n        return localStorage.getItem(userKey) !== null\n    },\n\n    isAdmin: function async() {\n        if (!this.isSignedIn) return false\n\n        let admin = false\n        if (this.getCurrentUser()!=null) {\n            this.getCurrentUser().authorities.forEach(authority => {\n                if (authority.authority === \"ROLE_ADMIN\") admin = true\n            })\n        }\n        return admin\n    },\n\n    getCurrentUser: function async() {\n        return JSON.parse(localStorage.getItem(userKey))\n    }\n}\n\nexport default AuthenticationService;\n","import React, {useEffect, useState} from 'react'\nimport {Alert, Container} from 'reactstrap'\n\nimport AuthenticationService from '../services/AuthenticationService'\n\nfunction Profile() {\n    const [user, setUser] = useState(undefined)\n\n    useEffect(() => {\n        const user = AuthenticationService.getCurrentUser();\n        setUser(user);\n    }, [])\n\n    let userInfo;\n\n    if (user && user.accessToken) {\n        let roles = \"\";\n        user.authorities.forEach(authority => {\n            roles = roles + \" \" + authority.authority\n        });\n\n        userInfo = (\n            <div style={{marginTop: \"20px\"}}>\n                <Alert variant=\"info\">\n                    <h2>Dobry den</h2>\n                    <ul>\n                        <li>Vitejte pane/pani: {user.username}</li>\n                    </ul>\n                </Alert>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Container fluid>\n                {userInfo}\n            </Container>\n        </div>\n    )\n}\n\nexport default Profile;\n","import React, {useState} from 'react'\nimport {Button, Col, Container, Form, FormGroup, Row} from 'react-bootstrap'\nimport {Input, Label} from \"reactstrap\"\nimport {Alert} from \"react-bootstrap\"\nimport Authentication from '../services/AuthenticationService'\n\nfunction SingUp() {\n    const [user, setUser] = useState({username: undefined, password: undefined, email: undefined})\n    const [message, setMessage] = useState(undefined)\n\n\n    const changeValueHandler = (name, value) => {\n        setUser({...user, [name]: value})\n    }\n\n    const signUp = function (e) {\n        e.preventDefault()\n        Authentication.register(user)\n            .then(\n                response => {\n                    setMessage(\"Registrace se povedla\")\n                }\n            )\n    }\n\n    return (\n        <div>\n            <Container fluid>\n                <Row><Col><h1>Registrace uzivatele</h1></Col></Row>\n                <Row><Col>{message && <Alert variant={'success'}>{message}</Alert>}</Col></Row>\n                <Row><Col>\n                    <Form onSubmit={signUp}>\n                        <FormGroup style={{marginTop: \"1em\"}} controlId=\"forUsername\">\n                            <Label for=\"username\">Username</Label>\n                            <Input type=\"text\" placeholder=\"Enter your username\" name=\"username\"\n                                   id=\"username\" value={user?.username} autoComplete=\"username\"\n                                   onChange={(e) => {\n                                       changeValueHandler(e.target.name, e.target.value)\n                                   }}/>\n                        </FormGroup>\n\n                        <FormGroup style={{\"margin-top\": \"1em\"}} controlId=\"formEmail\">\n                            <Label for=\"email\">Email</Label>\n                            <Input required type=\"text\" placeholder=\"enter your email\" name=\"email\" id=\"email\"\n                                   value={user?.email} autoComplete=\"email\"\n                                   onChange={(e) => {\n                                       changeValueHandler(e.target.name, e.target.value)\n                                   }}/>\n                        </FormGroup>\n\n                        <FormGroup style={{\"margin-top\": \"1em\"}} controlId=\"formPassword\">\n                            <Label for=\"password\">Password</Label>\n                            <Input required type=\"password\" placeholder=\"Enter Password\" name=\"password\"\n                                   id=\"password\" value={user?.password} autoComplete=\"password\"\n                                   onChange={(e) => {\n                                       changeValueHandler(e.target.name, e.target.value)\n                                   }}/>\n                        </FormGroup>\n\n                        <FormGroup style={{\"margin-top\": \"1em\"}} controlId=\"formAddress\">\n                            <Label for=\"ad\">Address</Label>\n                            <Input required type=\"ad\" placeholder=\"Enter Address\" name=\"address\"\n                                   id=\"address\" value={user?.address} autoComplete=\"address\"\n                                   onChange={(e) => {\n                                       changeValueHandler(e.target.name, e.target.value)\n                                   }}/>\n                        </FormGroup>\n                        <Button style={{\"margin-top\": \"1em\"}} variant=\"primary\" type=\"submit\" name=\"submitButton\" id=\"submitButton\">Registruj</Button>\n                    </Form>\n                </Col></Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default SingUp\n","import React, {useState} from 'react'\nimport {useHistory} from \"react-router-dom\";\nimport {Button} from 'react-bootstrap'\nimport {Form, FormGroup} from \"react-bootstrap\"\nimport AuthenticationService from '../services/AuthenticationService'\nimport '../App.css';\nimport {Input, Label} from \"reactstrap\";\n\nfunction SingUp() {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const history = useHistory();\n\n    const changeHandler = function (event) {\n        let nam = event.target.name;\n        let val = event.target.value;\n\n        if (nam === \"username\") setUsername(val)\n        if (nam === \"password\") setPassword(val)\n    }\n\n    const doLogin = async (event) => {\n        event.preventDefault();\n\n        AuthenticationService.signIn(username, password)\n            .then(\n                () => {\n                    history.push('/home')\n                    window.location.reload()\n                });\n    }\n\n    return (\n        <div>\n            <Form onSubmit={doLogin}>\n                <FormGroup>\n                    <Label for=\"username\">uzivatelske jmeno</Label>\n                    <Input autoFocus type=\"text\" name=\"username\" id=\"username\" value={username}\n                           placeholder=\"uzivatelske jmeno\" autoComplete=\"username\" onChange={changeHandler}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"password\">heslo</Label>\n                    <Input type=\"password\" name=\"password\" id=\"password\" value={password}\n                           placeholder=\"heslo\" autoComplete=\"password\" onChange={changeHandler}/>\n                </FormGroup>\n\n                <Button type=\"submit\" name=\"submitButton\" id=\"submitButton\" variant=\"primary\" size=\"lg\" block>Prihlas</Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default SingUp;\n","import React, {useEffect, useState} from \"react\";\nimport {Button, Form, Input} from \"reactstrap\";\nimport BackendService from \"../services/BackendService\";\nimport {useHistory} from \"react-router-dom\";\n\nconst AddProduct = () => {\n\n    const [newItem, setNewItem] = useState({\n        nazev: undefined,\n        popis: undefined,\n        cena: 0,\n        slevaProcenta: 0,\n        vNabidce: false,\n        vyrobce: 0\n    });\n\n    const [newItemN, setNewItemN] = useState([])\n\n    const history = useHistory()\n\n    useEffect(() => {\n        BackendService.getVyrobceList()\n            .then((resp) => {\n                console.log(resp)\n                setNewItemN(resp.data)\n            }, (error) => {\n                console.log(error.toString())\n            })\n    }, []);\n\n    const onNewItem = (event) => {\n        event.preventDefault()\n        newItem.vNabidce = true\n        BackendService.postNewProdukt(newItem).then((resp) => {\n            history.push(\"/produkt/AdminManageProd\")\n        })\n    }\n\n    const changeValue = (event) => {\n        setNewItem({...newItem, [event.target.name]: event.target.value})\n    }\n\n    const changeValues = (event) => {\n        newItem.vyrobce = event.target.value\n    }\n\n    return (\n        <div>\n            <div style={{\n                marginTop: \"20px\"\n            }\n            }>\n                <Form onSubmit={(event) => {\n                    onNewItem(event)\n                }}>\n                    <Input placeholder=\"nazev\" name='nazev' onChange={(event) => {\n                        changeValue(event)\n                    }}/>\n                    <Input placeholder=\"popis\" name='popis' onChange={(event) => {\n                        changeValue(event)\n                    }}/>\n                    <Input placeholder=\"cena\" name='cena' onChange={(event) => {\n                        changeValue(event)\n                    }}/>\n                    <Input placeholder=\"slevaProcenta\" name='slevaProcenta' onChange={(event) => {\n                        changeValue(event)\n                    }}/>\n                    <select onChange={(event) => {\n                        changeValues(event)\n                    }}>\n                        {newItemN.map(item => (\n                            <option key={item.id}\n                                    value={item.id}\n                            >\n                                {item.nazev}\n                            </option>\n                        ))}\n                    </select>\n                    <Button type=\"submit\">Přidat</Button>\n                </Form>\n            </div>\n        </div>\n    );\n}\n\nexport default AddProduct","import React, {useEffect, useState} from 'react';\nimport {Alert, Button, Container} from \"react-bootstrap\";\nimport '../App.css';\nimport BackendService from \"../services/BackendService\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory, {\n    PaginationProvider, PaginationListStandalone, PaginationTotalStandalone, SizePerPageDropdownStandalone\n} from 'react-bootstrap-table2-paginator';\n\nimport filterFactory, {numberFilter} from 'react-bootstrap-table2-filter';\n\nconst Products = () => {\n    const [item, setItems] = useState([]);\n    const [Cart, setCart] = useState([]);\n\n    useEffect(() => {\n        BackendService.getProduktList()\n            .then((resp) => {\n                console.log(resp)\n                setItems(resp.data)\n            }, (error) => {\n                console.log(error.toString())\n            })\n        if (JSON.parse(localStorage.getItem('kosik')) != null) {\n            setCart(JSON.parse(localStorage.getItem('kosik')))\n        }\n    }, []);\n\n    const OnAddToCart = async (id) => {\n        const blel = [...Cart, id]\n        /*        useEffect(() => {\n                    setCart(Blel)\n                    localStorage.setItem('kosik', JSON.stringify(Blel));\n                }, [Cart]);*/\n        await setCart(blel)\n        await localStorage.setItem('kosik', JSON.stringify(blel));\n    }\n\n    const actionsFormatter = (cell, row) =>\n        <Button type=\"submit\" onClick={(event) => {\n            OnAddToCart(row)\n        }}>Pridej do kosiku</Button>\n\n    const paginationOption = {\n        custom: true,\n        totalSize: item.length\n    };\n\n    const columns = [{\n        dataField: 'nazev',\n        text: 'Nazev',\n        sort: true\n    }, {\n        dataField: 'cena',\n        text: 'Cena',\n        sort: true,\n        filter: numberFilter()\n    }, {\n        dataField: 'slevaProcenta',\n        text: 'Sleva produktu',\n        sort: true\n    }, {\n        dataField: 'popis',\n        text: 'Popis produktu',\n    }, {\n        dataField: 'akce',\n        text: 'Pridej si me do kosiku',\n        isDummyField: true,\n        csvExport: false,\n        formatter: actionsFormatter\n    }];\n\n\n    return (\n        <div>\n            <Container fluid>\n                <div style={{\n                    marginTop: \"20px\"\n                }\n                }>\n                    <Alert variant=\"primary\">\n                        <h2>Zde je seznam vsech produktu</h2>\n                    </Alert>\n                    {item && <PaginationProvider\n                        pagination={paginationFactory(paginationOption)}\n                    >\n                        {\n                            ({\n                                 paginationProps,\n                                 paginationTableProps\n                             }) => (\n                                <div>\n                                    <SizePerPageDropdownStandalone\n                                        {...paginationProps}\n                                    />\n                                    <PaginationTotalStandalone\n                                        {...paginationProps}\n                                    />\n                                    <BootstrapTable\n                                        keyField=\"id\"\n                                        data={item}\n                                        columns={columns}\n                                        filter={filterFactory()}\n                                        {...paginationTableProps}\n                                    />\n                                    <PaginationListStandalone\n                                        {...paginationProps}\n                                    />\n                                </div>\n                            )\n                        }\n                    </PaginationProvider>}\n                </div>\n            </Container>\n        </div>\n    )\n        ;\n}\n\nexport default Products;","import React, {useEffect, useState} from 'react';\nimport {useHistory} from \"react-router-dom\"\nimport {Alert, Button, Container} from \"react-bootstrap\";\nimport '../App.css';\nimport BackendService from \"../services/BackendService\";\nimport paginationFactory, {\n    PaginationListStandalone,\n    PaginationProvider,\n    PaginationTotalStandalone,\n    SizePerPageDropdownStandalone\n} from \"react-bootstrap-table2-paginator\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nconst AdminManageProd = () => {\n    const [item, setItems] = useState([]);\n    const history = useHistory()\n\n    useEffect(() => {\n        BackendService.getProduktList()\n            .then((resp) => {\n                console.log(resp)\n                setItems(resp.data)\n            }, (error) => {\n                console.log(error.toString())\n            })\n    }, []);\n\n    const onDeleteItem = (itemToDelete) => {\n        BackendService.deleteProdukt(itemToDelete.id).then((resp) => {\n            const filtered = item.filter(item => item.id !== itemToDelete.id)\n            setItems(filtered)\n        })\n    }\n\n    const onAddItem = () => {\n        history.push(\"/produkt/AddProduct\")\n    }\n\n    const actionsFormatter = (cell, row) =>\n        <Button type=\"submit\" onClick={(event) => {\n            onDeleteItem(row)\n        }}>smaz produkt</Button>\n\n    const paginationOption = {\n        custom: true,\n        totalSize: item.length\n    };\n\n    const columns = [{\n        dataField: 'nazev',\n        text: 'Nazev',\n        sort: true\n    }, {\n        dataField: 'cena',\n        text: 'Cena',\n        sort: true,\n    }, {\n        dataField: 'slevaProcenta',\n        text: 'Sleva produktu',\n        sort: true\n    }, {\n        dataField: 'popis',\n        text: 'Popis produktu',\n    }, {\n        dataField: 'vyrobce.nazev',\n        text: 'Vyrobce',\n    }, {\n        dataField: 'akce',\n        text: 'Pridej si me do kosiku',\n        isDummyField: true,\n        csvExport: false,\n        formatter: actionsFormatter\n    }];\n\n    return (\n        <div>\n            <Container fluid>\n                <div style={{\n                    marginTop: \"20px\"\n                }\n                }>\n                    <Alert variant=\"primary\">\n                        <h2>Zde je seznam vsech produktu</h2>\n                    </Alert>\n                    {item && <PaginationProvider\n                        pagination={paginationFactory(paginationOption)}\n                    >\n                        {\n                            ({\n                                 paginationProps,\n                                 paginationTableProps\n                             }) => (\n                                <div>\n                                    <SizePerPageDropdownStandalone\n                                        {...paginationProps}\n                                    />\n                                    <PaginationTotalStandalone\n                                        {...paginationProps}\n                                    />\n                                    <BootstrapTable\n                                        keyField=\"id\"\n                                        data={item}\n                                        columns={columns}\n                                        {...paginationTableProps}\n                                    />\n                                    <PaginationListStandalone\n                                        {...paginationProps}\n                                    />\n                                </div>\n                            )\n                        }\n                    </PaginationProvider>}\n                    <Button type=\"submit\" onClick={(event) => {\n                        onAddItem()\n                    }}>pridej novy produkt</Button>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default AdminManageProd;","import React, {useEffect, useState} from 'react';\nimport {Alert, Button, Container} from \"react-bootstrap\";\nimport '../App.css';\nimport BackendService from \"../services/BackendService\";\nimport {useHistory} from \"react-router-dom\";\nimport paginationFactory, {\n    PaginationListStandalone,\n    PaginationProvider,\n    PaginationTotalStandalone,\n    SizePerPageDropdownStandalone\n} from \"react-bootstrap-table2-paginator\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\n\nconst AdminManageDop =()=> {\n    const [item, setItems] = useState([]);\n    const history = useHistory()\n\n    useEffect(() => {\n        BackendService.getDopravaList()\n            .then((resp) => {\n                console.log(resp)\n                setItems(resp.data)\n            }, (error) => {\n                console.log(error.toString())\n            })\n    }, []);\n\n    const onDeleteItem = (itemToDelete) => {\n        BackendService.deleteDoprava(itemToDelete.id).then((resp) => {\n            const filtered = item.filter(item => item.id !== itemToDelete.id)\n            setItems(filtered)\n        })\n    }\n\n    const onAddItem = () => {\n        history.push(\"/doprava/AddDoprava\")\n    }\n\n    const actionsFormatter = (cell, row) =>\n        <Button type=\"submit\" onClick={(event) => {\n            onDeleteItem(row)\n        }}>Odeber dopravu</Button>\n\n    const paginationOption = {\n        custom: true,\n        totalSize: item.length\n    };\n\n    const columns = [{\n        dataField: 'popis',\n        text: 'jmeno platby',\n        sort: true\n    }, {\n        dataField: 'cena',\n        text: 'cena za dopravu',\n        sort: true\n    }, {\n        dataField: 'akce',\n        text: 'prace s dopravou',\n        isDummyField: true,\n        csvExport: false,\n        formatter: actionsFormatter\n    }];\n\n        return (\n            <div>\n                <Container fluid>\n                    <div style={{\n                        marginTop: \"20px\"\n                    }\n                    }>\n                        <Alert variant=\"primary\">\n                            <h2>Zde je seznam vsech doprav</h2>\n                        </Alert>\n                        {item && <PaginationProvider\n                            pagination={paginationFactory(paginationOption)}\n                        >\n                            {\n                                ({\n                                     paginationProps,\n                                     paginationTableProps\n                                 }) => (\n                                    <div>\n                                        <SizePerPageDropdownStandalone\n                                            {...paginationProps}\n                                        />\n                                        <PaginationTotalStandalone\n                                            {...paginationProps}\n                                        />\n                                        <BootstrapTable\n                                            keyField=\"id\"\n                                            data={item}\n                                            columns={columns}\n                                            {...paginationTableProps}\n                                        />\n                                        <PaginationListStandalone\n                                            {...paginationProps}\n                                        />\n                                    </div>\n                                )\n                            }\n                        </PaginationProvider>}\n                        <Button name=\"submitButton\" id=\"submitButton\" type=\"submit\" onClick={(event) => {\n                            onAddItem()\n                        }}>pridej novou dopravy</Button>\n                    </div>\n                </Container>\n            </div>\n        )\n            ;\n}\n\nexport default AdminManageDop;","import React, {useState} from \"react\";\nimport {Button, Form, Input} from \"reactstrap\";\nimport BackendService from \"../services/BackendService\";\nimport {useHistory} from \"react-router-dom\";\n\nconst AddDoprava = () => {\n    const [newItem, setNewItem] = useState({\n        cena: 0,\n        popis: undefined\n    });\n\n    const history = useHistory()\n\n    const onNewItem = (event) => {\n        event.preventDefault()\n        BackendService.postNewDoprava(newItem).then((resp) => {\n            history.push(\"/doprava/AdminManageDop\")\n        })\n    }\n\n    const changeValue = (event) => {\n        setNewItem({...newItem, [event.target.name]: event.target.value})\n    }\n\n    return (\n        <div>\n            <div style={{\n                marginTop: \"20px\"\n            }\n            }>\n                <Form onSubmit={(event) => {\n                    onNewItem(event)\n                }}>\n                    <Input placeholder=\"popis\" name='popis' onChange={(event) => {\n                        changeValue(event)\n                    }}/>\n                    <Input placeholder=\"cena\" name='cena' onChange={(event) => {\n                        changeValue(event)\n                    }}/>\n                    <Button name=\"submitButton\" id=\"submitButton\" type=\"submit\">Přidat</Button>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddDoprava","import React, {useEffect, useState} from 'react';\nimport {Alert, Button, Container} from \"react-bootstrap\";\nimport '../App.css';\nimport BackendService from \"../services/BackendService\";\nimport {useHistory} from \"react-router-dom\";\nimport paginationFactory, {\n    PaginationListStandalone,\n    PaginationProvider,\n    PaginationTotalStandalone,\n    SizePerPageDropdownStandalone\n} from \"react-bootstrap-table2-paginator\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nconst AdminManageVyrob =()=> {\n\n    const [item, setItems] = useState([]);\n    const history = useHistory()\n\n    useEffect(() => {\n        BackendService.getVyrobceList()\n            .then((resp) => {\n                console.log(resp)\n                setItems(resp.data)\n            }, (error) => {\n                console.log(error.toString())\n            })\n    }, []);\n\n    const onDeleteItem = (itemToDelete) => {\n        BackendService.deleteVyrobce(itemToDelete.id).then((resp) => {\n            const filtered = item.filter(item => item.id !== itemToDelete.id)\n            setItems(filtered)\n        })\n    }\n\n    const onAddItem = () => {\n        history.push(\"/vyrobce/AddVyrobce\")\n    }\n    const actionsFormatter = (cell, row) =>\n        <Button type=\"submit\" onClick={(event) => {\n            onDeleteItem(row)\n        }}>Odeber vyrobce</Button>\n\n    const paginationOption = {\n        custom: true,\n        totalSize: item.length\n    };\n\n    const columns = [{\n        dataField: 'nazev',\n        text: 'jmeno vyrobce',\n        sort: true\n    }, {\n        dataField: 'adresa',\n        text: 'adresa vyrobce',\n    }, {\n        dataField: 'akce',\n        text: 'prace s vyrobci',\n        isDummyField: true,\n        csvExport: false,\n        formatter: actionsFormatter\n    }];\n\n        return (\n            <div>\n                <Container fluid>\n                    <div style={{\n                        marginTop: \"20px\"\n                    }\n                    }>\n                        <Alert variant=\"primary\">\n                            <h2>Zde je seznam vsech vyrobcu</h2>\n                        </Alert>\n                        {item && <PaginationProvider\n                            pagination={paginationFactory(paginationOption)}\n                        >\n                            {\n                                ({\n                                     paginationProps,\n                                     paginationTableProps\n                                 }) => (\n                                    <div>\n                                        <SizePerPageDropdownStandalone\n                                            {...paginationProps}\n                                        />\n                                        <PaginationTotalStandalone\n                                            {...paginationProps}\n                                        />\n                                        <BootstrapTable\n                                            keyField=\"id\"\n                                            data={item}\n                                            columns={columns}\n                                            {...paginationTableProps}\n                                        />\n                                        <PaginationListStandalone\n                                            {...paginationProps}\n                                        />\n                                    </div>\n                                )\n                            }\n                        </PaginationProvider>}\n                        <Button type=\"submit\" onClick={(event) => {\n                            onAddItem()\n                        }}>pridej novy vyrobce</Button>\n                    </div>\n                </Container>\n            </div>\n        )\n            ;\n}\n\nexport default AdminManageVyrob;","import React, {useEffect, useState} from 'react';\nimport {Alert, Button, Container} from \"react-bootstrap\";\nimport '../App.css';\nimport BackendService from \"../services/BackendService\";\nimport {useHistory} from \"react-router-dom\";\nimport paginationFactory, {\n    PaginationListStandalone,\n    PaginationProvider,\n    PaginationTotalStandalone,\n    SizePerPageDropdownStandalone\n} from \"react-bootstrap-table2-paginator\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nconst AdminManagePlat =()=> {\n    const [item, setItems] = useState([]);\n    const history = useHistory()\n\n    useEffect(() => {\n        BackendService.getPlatbaList()\n            .then((resp) => {\n                console.log(resp)\n                setItems(resp.data)\n            }, (error) => {\n                console.log(error.toString())\n            })\n    }, []);\n\n    const onDeleteItem = (itemToDelete) => {\n        BackendService.deletePlatba(itemToDelete.id).then((resp) => {\n            const filtered = item.filter(item => item.id !== itemToDelete.id)\n            setItems(filtered)\n        })\n    }\n\n    const onAddItem = () => {\n        history.push(\"/platba/AddPlatba\")\n    }\n\n    const actionsFormatter = (cell, row) =>\n        <Button type=\"submit\" onClick={(event) => {\n            onDeleteItem(row)\n        }}>Odeber platbu</Button>\n\n    const paginationOption = {\n        custom: true,\n        totalSize: item.length\n    };\n\n    const columns = [{\n        dataField: 'popis',\n        text: 'jmeno platby',\n        sort: true\n    }, {\n        dataField: 'prevod',\n        text: 'prevod vuci CZK',\n        sort: true\n    }, {\n        dataField: 'akce',\n        text: 'prace s platbou',\n        isDummyField: true,\n        csvExport: false,\n        formatter: actionsFormatter\n    }];\n\n        return (\n            <div>\n                <Container fluid>\n                    <div style={{\n                        marginTop: \"20px\"\n                    }\n                    }>\n                        <Alert variant=\"primary\">\n                            <h2>Zde je seznam vsech plateb</h2>\n                        </Alert>\n                        {item && <PaginationProvider\n                            pagination={paginationFactory(paginationOption)}\n                        >\n                            {\n                                ({\n                                     paginationProps,\n                                     paginationTableProps\n                                 }) => (\n                                    <div>\n                                        <SizePerPageDropdownStandalone\n                                            {...paginationProps}\n                                        />\n                                        <PaginationTotalStandalone\n                                            {...paginationProps}\n                                        />\n                                        <BootstrapTable\n                                            keyField=\"id\"\n                                            data={item}\n                                            columns={columns}\n                                            {...paginationTableProps}\n                                        />\n                                        <PaginationListStandalone\n                                            {...paginationProps}\n                                        />\n                                    </div>\n                                )\n                            }\n                        </PaginationProvider>}\n                        <Button type=\"submit\" onClick={(event) => {\n                            onAddItem()\n                        }}>pridej novy platba</Button>\n                    </div>\n                </Container>\n            </div>\n        )\n            ;\n}\n\nexport default AdminManagePlat;","import React, {useState} from \"react\";\nimport {Button, Form, Input} from \"reactstrap\";\nimport BackendService from \"../services/BackendService\";\nimport {useHistory} from \"react-router-dom\";\n\nconst AddVyrobce = () => {\n    const [newItem, setNewItem] = useState({\n        adresa: undefined,\n        nazev: undefined\n    });\n\n    const history = useHistory()\n\n    const onNewItem = (event) => {\n        event.preventDefault()\n        BackendService.postNewVyrobce(newItem).then((resp) => {\n            history.push(\"/vyrobce/AdminManageVyrob\")\n        })\n    }\n\n    const changeValue = (event) => {\n        setNewItem({...newItem, [event.target.name]: event.target.value})\n    }\n\n    return (\n        <div>\n            <div style={{\n                marginTop: \"20px\"\n            }\n            }>\n                <Form onSubmit={(event) => {\n                    onNewItem(event)\n                }}>\n                    <Input placeholder=\"adresa\" name='adresa' onChange={(event) => {\n                        changeValue(event)\n                    }}/>\n                    <Input placeholder=\"nazev\" name='nazev' onChange={(event) => {\n                        changeValue(event)\n                    }}/>\n                    <Button type=\"submit\">Přidat</Button>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddVyrobce","import React, {useState} from \"react\";\nimport {Button, Form, Input} from \"reactstrap\";\nimport BackendService from \"../services/BackendService\";\nimport {useHistory} from \"react-router-dom\";\n\nconst AddPlatba = () => {\n    const [newItem, setNewItem] = useState({\n        popis: undefined,\n        prevod: 0\n    });\n\n    const history = useHistory()\n\n    const onNewItem = (event) => {\n        event.preventDefault()\n        BackendService.postNewPlatba(newItem).then((resp) => {\n            history.push(\"/platba/AdminManagePlat\")\n        })\n    }\n\n    const changeValue = (event) => {\n        setNewItem({...newItem, [event.target.name]: event.target.value})\n    }\n\n\n    return (\n        <div>\n            <div style={{\n                marginTop: \"20px\"\n            }\n            }>\n                <Form onSubmit={(event) => {\n                    onNewItem(event)\n                }}>\n                    <Input placeholder=\"popis\" name='popis' onChange={(event) => {\n                        changeValue(event)\n                    }}/>\n                    <Input placeholder=\"prevod\" name='prevod' onChange={(event) => {\n                        changeValue(event)\n                    }}/>\n                    <Button type=\"submit\">Přidat</Button>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddPlatba\n\n","import React, {useEffect, useState} from 'react';\nimport {Alert, Button, Container} from \"react-bootstrap\";\nimport '../App.css';\nimport BackendService from \"../services/BackendService\";\nimport {useHistory} from \"react-router-dom\";\nimport paginationFactory, {\n    PaginationListStandalone,\n    PaginationProvider,\n    PaginationTotalStandalone,\n    SizePerPageDropdownStandalone\n} from \"react-bootstrap-table2-paginator\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nconst AdminNakup = () => {\n    const [item, setItems] = useState([]);\n    const history = useHistory()\n\n    useEffect(() => {\n        BackendService.getNakupy()\n            .then((resp) => {\n                console.log(resp)\n                setItems(resp.data)\n            }, (error) => {\n                console.log(error.toString())\n            })\n    }, []);\n\n    const onViewDetail= (itemToView) => {\n        history.push(\"/obj/DetailNakup/\" + itemToView)\n    }\n\n    const onAccept= (id) => {\n        BackendService.getPotvrdObj(id)\n            .then((resp) => {\n                console.log(resp)\n            }, (error) => {\n                console.log(error.toString())\n            })\n        window.location.reload();\n    }\n\n    const actionsFormatter = (cell, row) =>\n        <Button type=\"submit\" onClick={(event) => {\n            onAccept(row.id)\n        }}>Potvrd objednavku</Button>\n\n    const actionsFormatters = (cell, row) =>\n        <Button type=\"submit\" onClick={(event) => {\n            onViewDetail(row.id)\n        }}>Zobraz detail</Button>\n\n\n    const paginationOption = {\n        custom: true,\n        totalSize: item.length\n    };\n\n    const columns = [{\n        dataField: 'objednavka',\n        text: 'cislo objednavky',\n        sort: true\n    }, {\n        dataField: 'datumVytvoreni',\n        text: 'datum vytvoreni objednavky',\n        sort: true,\n    }, {\n        dataField: 'stav',\n        text: 'stav objednavky',\n        sort: true\n    }, {\n        dataField: 'detail',\n        text: 'Zobraz deatily',\n        isDummyField: true,\n        csvExport: false,\n        formatter: actionsFormatter\n    }, {\n        dataField: 'potvrzeni',\n        text: 'Potvrzeni objednavky',\n        isDummyField: true,\n        csvExport: false,\n        formatter: actionsFormatters\n    }];\n\n\n    return (\n        <div>\n            <Container fluid>\n                <div style={{\n                    marginTop: \"20px\"\n                }\n                }>\n                    <Alert variant=\"primary\">\n                        <h2>Zde je seznam vsech objednavek</h2>\n                    </Alert>\n                    {item && <PaginationProvider\n                        pagination={paginationFactory(paginationOption)}\n                    >\n                        {\n                            ({\n                                 paginationProps,\n                                 paginationTableProps\n                             }) => (\n                                <div>\n                                    <SizePerPageDropdownStandalone\n                                        {...paginationProps}\n                                    />\n                                    <PaginationTotalStandalone\n                                        {...paginationProps}\n                                    />\n                                    <BootstrapTable\n                                        keyField=\"id\"\n                                        data={item}\n                                        columns={columns}\n                                        {...paginationTableProps}\n                                    />\n                                    <PaginationListStandalone\n                                        {...paginationProps}\n                                    />\n                                </div>\n                            )\n                        }\n                    </PaginationProvider>}\n                </div>\n            </Container>\n        </div>\n    )\n        ;\n}\n\nexport default AdminNakup;","import React, {useEffect, useState} from 'react';\nimport {Alert, Container} from \"react-bootstrap\";\nimport '../App.css';\nimport BackendService from \"../services/BackendService\";\nimport {useParams} from \"react-router-dom\";\n\nconst DetailNakup = () => {\n    const [item, setItems] = useState([]);\n    const [itemN, setItemsN] = useState([]);\n    const {id} = useParams()\n\n    useEffect(() => {\n            BackendService.getDetailNakupu(id)\n                .then((resp) => {\n                    console.log(resp)\n                    setItems(resp.data)\n                }, (error) => {\n                    console.log(error.toString())\n                })\n            BackendService.getDetailNakupuPolozky(id).then((resps) => {\n                setItemsN(resps.data)\n            }, (error) => {\n                console.log(error.toString())\n            })\n        }, [id]);\n\n\n    return (\n        <div>\n            <Container fluid>\n                <div style={{\n                    marginTop: \"20px\"\n                }\n                }>\n                    <Alert variant=\"primary\">\n                        <h2>Zde je detail objednavky</h2>\n                    </Alert>\n                    objednavka cislo:\n                    {item.objednavka}{\"\\n\"}\n                    vytvorena:\n                    {item.datumVytvoreni}{\"\\n\"}\n                    stav schvaleni:\n                    {String(item.stav)}{\"\\n\"}\n                    {itemN && itemN.length > 0 && itemN.map(nakup =>\n                        <div key={nakup.id}>\n                            nazev produktu:\n                            {nakup.produkt.nazev}{\"\\n\"}\n                            cena produktu:\n                            {nakup.produkt.cena}{\"\\n\"}\n                        </div>\n                    )}\n                </div>\n            </Container>\n        </div>\n    )\n        ;\n}\n\nexport default DetailNakup;","import React, {useEffect, useState} from 'react';\nimport {Alert, Button, Container} from \"react-bootstrap\";\nimport '../App.css';\nimport BackendService from \"../services/BackendService\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Products = () => {\n    const [item, setItems] = useState([]);\n    const [itemDoprava, setItemDoprava] = useState([])\n    const [itemPlatba, setItemPlatba] = useState([])\n    const history = useHistory()\n\n    const [orderSpec] = useState({\n        doprava: 0,\n        platba: 0,\n        polozky: null\n    });\n\n    useEffect(() => {\n        BackendService.getDopravaList()\n            .then((resp) => {\n                setItemDoprava(resp.data)\n                orderSpec.doprava = resp.data[0].id\n            }, (error) => {\n                console.log(error.toString())\n            })\n        BackendService.getPlatbaList()\n            .then((resp) => {\n                setItemPlatba(resp.data)\n                orderSpec.platba = resp.data[0].id\n            }, (error) => {\n                console.log(error.toString())\n            })\n        if (JSON.parse(localStorage.getItem('kosik')) != null) {\n            setItems(JSON.parse(localStorage.getItem('kosik')))\n        }\n    }, [orderSpec]);\n\n    const onAccept = () => {\n        orderSpec.polozky = item\n        BackendService.postCartOrderItem(orderSpec)\n            .then((resp) => {\n                localStorage.removeItem('kosik');\n                localStorage.clear();\n                history.push(\"/\")\n            }, (error) => {\n                console.log(error.toString())\n            })\n    }\n\n    const removeFromCart = (itemToDelete) => {\n        let newItem = [...item];\n        const index = newItem.findIndex((item) => item === itemToDelete);\n        newItem.splice(index, 1);\n        setItems(newItem)\n    };\n\n    const onDeleteItem = (itemToDelete) => {\n        removeFromCart(itemToDelete)\n        orderSpec.polozky = item\n        localStorage.setItem('kosik', JSON.stringify(item));\n    }\n    const changeValuesDoprava = (event) => {\n        orderSpec.doprava = event.target.value\n    }\n    const changeValuesPlatba = (event) => {\n        orderSpec.platba = event.target.value\n    }\n\n    return (\n        <div>\n            <Container fluid>\n                <div style={{\n                    marginTop: \"20px\"\n                }\n                }>\n                    <Alert variant=\"primary\">\n                        <h2>Zde je vas nakoupeny kosik</h2>\n                    </Alert>\n                    {item && item.length > 0 && item.map(polozky =>\n                        <div key={polozky.id}>\n                            nazev produktu: {polozky.nazev},{\"\\n\"}\n                            <Button type=\"submit\" onClick={(event) => {\n                                onDeleteItem(polozky.id)\n                            }}>Odeber</Button>\n                        </div>\n                    )}\n                    <div>\n                        Vyber dopravu\n                    </div>\n                    <select onChange={(event) => {\n                        changeValuesDoprava(event)\n                    }}>\n                        {itemDoprava && itemDoprava.length > 0 && itemDoprava.map(item => (\n                            <option key={item.id}\n                                    value={item.id}\n                            >\n                                {item.popis}\n                            </option>\n                        ))}\n                    </select>\n                    <div>\n                        Vyber platbu\n                    </div>\n                    <select onChange={(event) => {\n                        changeValuesPlatba(event)\n                    }}>\n                        {itemPlatba && itemPlatba.length > 0 && itemPlatba.map(item => (\n                            <option key={item.id}\n                                    value={item.id}\n                            >\n                                {item.popis}\n                            </option>\n                        ))}\n                    </select>\n                    <Button type=\"submit\" onClick={(event) => {\n                        onAccept()\n                    }}>Potvrd objednavku</Button>\n                </div>\n            </Container>\n        </div>\n    )\n        ;\n}\n\nexport default Products;","import React, {useEffect, useState} from 'react'\nimport {Nav, Navbar,} from 'react-bootstrap'\nimport {useHistory, withRouter} from 'react-router-dom'\nimport AuthenticationService from '../services/AuthenticationService'\n\nfunction AppNavbar() {\n    const [user, setUser] = useState(false)\n    const history = useHistory()\n\n    useEffect(() => {\n        const user = AuthenticationService.getCurrentUser();\n        if (user) {setUser(true)}\n    }, [])\n\n    const signOut = () => {\n        AuthenticationService.signOut();\n        history.push(\"/home\")\n        window.location.reload();\n    }\n\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">Super duper eshop</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Nav.Link href=\"/#/signin\">Login</Nav.Link>\n            <Nav.Link href=\"/#/signup\">SignUp</Nav.Link>\n            <Nav.Link href=\"/#/produkt/products\">Produkty</Nav.Link>\n            <Nav.Link href=\"/#/obj/kosik\">Kosik</Nav.Link>\n            <Nav className=\"mr-auto\">\n                {user && <Nav.Link onClick={signOut} href=\"#\" >Odhlasit</Nav.Link>}\n                {user && AuthenticationService.isAdmin() && <Nav.Link href=\"/#/produkt/AdminManageProd\">Admin produkty</Nav.Link>}\n                {user && AuthenticationService.isAdmin() && <Nav.Link href=\"/#/doprava/AdminManageDop\">Admin doprava</Nav.Link>}\n                {user && AuthenticationService.isAdmin() && <Nav.Link href=\"/#/vyrobce/AdminManageVyrob\">Admin vyrobcu</Nav.Link>}\n                {user && AuthenticationService.isAdmin() && <Nav.Link href=\"/#/platba/AdminManagePlat\">Admin plateb</Nav.Link>}\n                {user && AuthenticationService.isAdmin() && <Nav.Link href=\"/#/obj/AdminNakup\">Admin nakup</Nav.Link>}\n                {user && <Nav.Link href=\"/#/profile\">Moje udaje</Nav.Link>}\n            </Nav>\n        </Navbar>\n    )\n}\n\nexport default withRouter(AppNavbar);\n\n","import React from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Home from './components/Home';\nimport Profile from './components/Profile';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport AddProduct from \"./components/AddProduct\";\nimport Products from \"./components/Products\";\nimport AdminManageProd from \"./components/AdminManageProd\";\nimport AdminManageDop from \"./components/AdminManageDop\";\nimport AddDoprava from \"./components/AddDoprava\";\nimport AdminManageVyrob from \"./components/AdminManageVyrob\";\nimport AdminManagePlat from \"./components/AdminManagePlat\";\nimport AddVyrobce from \"./components/AddVyrobce\";\nimport AddPlatba from \"./components/AddPlatba\";\nimport AdminNakup from \"./components/AdminNakup\";\nimport DetailNakup from \"./components/DetailNakup\";\nimport Cart from \"./components/Cart\";\nimport AppNavbar from \"./components/AppNavbar\";\n\nfunction App() {\n    return (\n        <HashRouter>\n            <AppNavbar/>\n            <Switch>\n                <Route path='/' exact={true} component={Home}/>\n                <Route path='/home' exact={true} component={Home}/>\n                <Route path='/profile' exact={true} component={Profile}/>\n                <Route path='/signin' exact={true} component={Login}/>\n                <Route path='/signup' exact={true} component={SignUp}/>\n                <Route path='/produkt/AddProduct' exact={true} component={AddProduct}/>\n                <Route path='/doprava/AddDoprava' exact={true} component={AddDoprava}/>\n                <Route path='/platba/AddPlatba' exact={true} component={AddPlatba}/>\n                <Route path='/produkt/products' exact={true} component={Products}/>\n                <Route path='/produkt/AdminManageProd' exact={true} component={AdminManageProd}/>\n                <Route path='/doprava/AdminManageDop' exact={true} component={AdminManageDop}/>\n                <Route path='/vyrobce/AdminManageVyrob' exact={true} component={AdminManageVyrob}/>\n                <Route path='/vyrobce/AddVyrobce' exact={true} component={AddVyrobce}/>\n                <Route path='/platba/AdminManagePlat' exact={true} component={AdminManagePlat}/>\n                <Route path='/obj/AdminNakup' exact={true} component={AdminNakup}/>\n                <Route path='/obj/kosik' exact={true} component={Cart}/>\n                <Route path='/obj/DetailNakup/:id' exact={true} component={DetailNakup}/>\n            </Switch>\n        </HashRouter>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}