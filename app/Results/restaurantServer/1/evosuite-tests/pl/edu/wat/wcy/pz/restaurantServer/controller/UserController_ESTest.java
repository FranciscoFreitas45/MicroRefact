/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 24 14:24:26 GMT 2021
 */

package pl.edu.wat.wcy.pz.restaurantServer.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pl.edu.wat.wcy.pz.restaurantServer.DTO.User;
import pl.edu.wat.wcy.pz.restaurantServer.Interface.MailServiceImpl;
import pl.edu.wat.wcy.pz.restaurantServer.controller.UserController;
import pl.edu.wat.wcy.pz.restaurantServer.service.UserService;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UserController_ESTest extends UserController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MailServiceImpl mailServiceImpl0 = new MailServiceImpl();
      UserController userController0 = new UserController((UserService) null, mailServiceImpl0);
      // Undeclared exception!
      try { 
        userController0.getUserById((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pl.edu.wat.wcy.pz.restaurantServer.controller.UserController", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MailServiceImpl mailServiceImpl0 = new MailServiceImpl();
      UserController userController0 = new UserController((UserService) null, mailServiceImpl0);
      // Undeclared exception!
      try { 
        userController0.getUserReservations((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pl.edu.wat.wcy.pz.restaurantServer.controller.UserController", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MailServiceImpl mailServiceImpl0 = new MailServiceImpl();
      UserController userController0 = new UserController((UserService) null, mailServiceImpl0);
      // Undeclared exception!
      try { 
        userController0.getUsers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pl.edu.wat.wcy.pz.restaurantServer.controller.UserController", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MailServiceImpl mailServiceImpl0 = new MailServiceImpl();
      UserController userController0 = new UserController((UserService) null, mailServiceImpl0);
      // Undeclared exception!
      try { 
        userController0.updateUser((Long) null, (User) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pl.edu.wat.wcy.pz.restaurantServer.controller.UserController", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MailServiceImpl mailServiceImpl0 = new MailServiceImpl();
      UserController userController0 = new UserController((UserService) null, mailServiceImpl0);
      // Undeclared exception!
      try { 
        userController0.deleteUser((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pl.edu.wat.wcy.pz.restaurantServer.controller.UserController", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MailServiceImpl mailServiceImpl0 = new MailServiceImpl();
      UserController userController0 = new UserController((UserService) null, mailServiceImpl0);
      // Undeclared exception!
      try { 
        userController0.addUser((User) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pl.edu.wat.wcy.pz.restaurantServer.controller.UserController", e);
      }
  }
}
