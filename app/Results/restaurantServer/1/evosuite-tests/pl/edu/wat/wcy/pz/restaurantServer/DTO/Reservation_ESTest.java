/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 24 14:29:10 GMT 2021
 */

package pl.edu.wat.wcy.pz.restaurantServer.DTO;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import pl.edu.wat.wcy.pz.restaurantServer.DTO.Reservation;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Reservation_ESTest extends Reservation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      reservation0.setrTableNumber(14);
      int int0 = reservation0.getrTableNumber();
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      Long long0 = new Long(0L);
      reservation0.setUserId(long0);
      Long long1 = reservation0.getUserId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      Long long0 = new Long(2407L);
      reservation0.setUserId(long0);
      Long long1 = reservation0.getUserId();
      assertEquals(2407L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      Long long0 = new Long((-1001L));
      reservation0.setUserId(long0);
      Long long1 = reservation0.getUserId();
      assertEquals((-1001L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      reservation0.setStatus("6mm|[#$P]");
      String string0 = reservation0.getStatus();
      assertEquals("6mm|[#$P]", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      reservation0.setStatus("");
      String string0 = reservation0.getStatus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      Long long0 = new Long(1L);
      reservation0.setReservationId(long0);
      Long long1 = reservation0.getReservationId();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      Long long0 = new Long((-2805L));
      reservation0.setReservationId(long0);
      Long long1 = reservation0.getReservationId();
      assertEquals((-2805L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      Long long0 = new Long(1L);
      reservation0.setRTableId(long0);
      Long long1 = reservation0.getRTableId();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      Long long0 = new Long((-1001L));
      reservation0.setRTableId(long0);
      Long long1 = reservation0.getRTableId();
      assertEquals((-1001L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      reservation0.setDateTime("");
      String string0 = reservation0.getDateTime();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      reservation0.setDateDays("U>Ib");
      String string0 = reservation0.getDateDays();
      assertEquals("U>Ib", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      reservation0.setDateDays("");
      String string0 = reservation0.getDateDays();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      MockDate mockDate0 = new MockDate(95, 95, 95);
      reservation0.setDate(mockDate0);
      Date date0 = reservation0.getDate();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      reservation0.setAttendees(6661);
      int int0 = reservation0.getAttendees();
      assertEquals(6661, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      Date date0 = reservation0.getDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      String string0 = reservation0.getDateDays();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      reservation0.setDateTime("/mN|;gz1$R-");
      String string0 = reservation0.getDateTime();
      assertEquals("/mN|;gz1$R-", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      Long long0 = reservation0.getRTableId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      String string0 = reservation0.getStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      Long long0 = reservation0.getReservationId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      String string0 = reservation0.getDateTime();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      Long long0 = reservation0.getUserId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      Long long0 = new Long(0);
      reservation0.setReservationId(long0);
      Long long1 = reservation0.getReservationId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      Long long0 = new Long(0);
      reservation0.setRTableId(long0);
      Long long1 = reservation0.getRTableId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      int int0 = reservation0.getrTableNumber();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      reservation0.setAttendees((-1));
      int int0 = reservation0.getAttendees();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      reservation0.setrTableNumber((-1));
      int int0 = reservation0.getrTableNumber();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Reservation reservation0 = new Reservation();
      int int0 = reservation0.getAttendees();
      assertEquals(0, int0);
  }
}
