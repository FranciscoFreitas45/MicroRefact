import com.ats.hrmgt.model.DashboardCount;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
public interface DashboardRepo extends JpaRepository<DashboardCount, Integer> {


@Query(value = " SELECT\n" + "        COALESCE(         (         SELECT\n" + "            COUNT(DISTINCT(le.leave_id))         \n" + "        FROM\n" + "            leave_authority la,\n" + "            leave_apply le         \n" + "        WHERE\n" + "             ((la.ini_auth_emp_id = :empId AND le.ex_int1 = 1) OR(la.fin_auth_emp_id = :empId  AND le.ex_int1 = 2 )) AND le.cal_yr_id = :curYrId \n" + "            AND le.emp_id = la.emp_id     ),\n" + "        0     ) AS pending_request,\n" + "        COALESCE(         (             (             SELECT\n" + "            COUNT(DISTINCT(le.leave_id))             \n" + "        FROM\n" + "            leave_authority la,\n" + "            leave_apply le             \n" + "        WHERE\n" + "             la.ini_auth_emp_id = :empId \n" + "            AND le.cal_yr_id = :curYrId \n" + "            AND le.emp_id = la.emp_id \n" + "            AND le.ex_int1 IN(2) \n" + "            AND la.fin_auth_emp_id != la.ini_auth_emp_id         ) +(SELECT\n" + "            COUNT(DISTINCT(le.leave_id))         \n" + "        FROM\n" + "            leave_authority la,\n" + "            leave_apply le         \n" + "        WHERE\n" + "            (la.fin_auth_emp_id =:empId) \n" + "            AND le.cal_yr_id = :curYrId \n" + "            AND le.emp_id = la.emp_id \n" + "            AND le.ex_int1 IN(1) \n" + "            AND la.fin_auth_emp_id != la.ini_auth_emp_id     ) ),\n" + "        0     ) AS info,\n" + "        COALESCE(         (         SELECT\n" + "            COUNT(DISTINCT(le.leave_id))         \n" + "        FROM\n" + "            leave_authority la,\n" + "            leave_apply le         \n" + "        WHERE\n" + "            la.emp_id = :empId  \n" + "            AND le.cal_yr_id = :curYrId  \n" + "            AND le.emp_id = la.emp_id \n" + "            AND le.ex_int1 IN(1, 2)     ),\n" + "        0     ) AS my_leave,\n" + "        (         CASE \n" + "            WHEN(             COALESCE(                 (                 SELECT\n" + "                COUNT(DISTINCT(la.emp_id))                 \n" + "            FROM\n" + "                leave_authority la                 \n" + "            WHERE\n" + "                (                         la.ini_auth_emp_id = :empId\n" + "                OR la.fin_auth_emp_id = :empId                    )             ),\n" + "            0             ) > 0         ) THEN 1 \n" + "            ELSE 0     \n" + "        END ) AS is_authorized," + "COALESCE(         (         SELECT\n" + "            COUNT(DISTINCT(le.ca_head_id))                  \n" + "        FROM\n" + "            claim_authority la,\n" + "            claim_apply_header le                  \n" + "        WHERE\n" + "            ((la.ca_ini_auth_emp_id =:empId \n" + "            AND le.claim_status = 1) \n" + "            OR(la.ca_fin_auth_emp_id =:empId \n" + "            AND le.claim_status = 2 ))              \n" + "            AND le.emp_id = la.emp_id     ),\n" + "        0     ) AS pending_claim,\n" + "        COALESCE(         (             (             SELECT\n" + "            COUNT(DISTINCT(le.ca_head_id))                      \n" + "        FROM\n" + "            claim_authority la,\n" + "            claim_apply_header le                      \n" + "        WHERE\n" + "            la.ca_ini_auth_emp_id = :empId               \n" + "            AND le.emp_id = la.emp_id              \n" + "            AND le.claim_status IN(2)              \n" + "            AND la.ca_fin_auth_emp_id != la.ca_ini_auth_emp_id         ) +(SELECT\n" + "            COUNT(DISTINCT(le.ca_head_id))                  \n" + "        FROM\n" + "            claim_authority la,\n" + "            claim_apply_header le                  \n" + "        WHERE\n" + "            (la.ca_fin_auth_emp_id =:empId)           \n" + "            AND le.emp_id = la.emp_id              \n" + "            AND le.claim_status IN(1)              \n" + "            AND la.ca_fin_auth_emp_id != la.ca_ini_auth_emp_id     ) ),\n" + "        0     ) AS info_claim,\n" + "         COALESCE(         (         SELECT\n" + "            COUNT(DISTINCT(le.ca_head_id))                  \n" + "        FROM\n" + "            claim_authority la,\n" + "            claim_apply_header le                  \n" + "        WHERE\n" + "            la.emp_id =:empId             \n" + "            AND le.emp_id = la.emp_id              \n" + "            AND le.claim_status IN(1, 2)     ),\n" + "        0     ) AS my_claim,\n" + "        (         CASE              \n" + "            WHEN(             COALESCE(                 (                 SELECT\n" + "                COUNT(DISTINCT(la.emp_id))                              \n" + "            FROM\n" + "                claim_authority la                              \n" + "            WHERE\n" + "                (                         la.ca_ini_auth_emp_id =:empId                \n" + "                OR la.ca_fin_auth_emp_id =:empId                   )             ),\n" + "            0             ) > 0         ) THEN 1              \n" + "            ELSE 0              \n" + "        END ) AS   is_authorized_claim", nativeQuery = true)
public DashboardCount getDashboardCount(int empId,int curYrId)


}