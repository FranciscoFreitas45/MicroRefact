import com.ats.hrmgt.model.claim.GetClaimApplyAuthwise;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import java.util.List;
public interface GetClaimApplyAuthwiseRepo extends JpaRepository<GetClaimApplyAuthwise, Integer> {


@Query(value = "SELECT\n" + "        la.ca_head_id,\n" + "        la.proj_id,\n" + "        la.emp_id,\n" + "        la.claim_title,\n" + "        la.claim_amount,\n" + "        la.ca_from_dt,\n" + "        la.ca_to_dt,\n" + "        la.claim_status,\n" + "        la.circulated_to,\n" + "        e.emp_code,\n" + "        e.emp_photo,\n" + "        CONCAT(e.emp_sname,\n" + "        \" \",\n" + "        e.emp_fname) AS emp_name,\n" + "        0 as ca_ini_auth_emp_id,\n" + "        0 as ca_fin_auth_emp_id,\n" + "        la.ex_var1 ,\n" + "        h.project_title      \n" + "    FROM\n" + "        claim_apply_header la,\n" + "        emp_info e,\n" + "        project_header h      \n" + "    WHERE\n" + "        e.emp_id = la.emp_id          \n" + "        AND h.project_manager_emp_id in(\n" + "           select project_manager_emp_id from project_header where del_status=1\n" + "        )         \n" + "        AND la.proj_id = h.project_id         \n" + "        and claim_status=1\n" + "        and h.project_manager_emp_id=la.emp_id", nativeQuery = true)
public List<GetClaimApplyAuthwise> getClaimApplyListForPendingForAdmin()


@Query(value = "  SELECT\n" + "        la.ca_head_id,\n" + "        '0' as proj_id,\n" + "        la.emp_id,\n" + "        la.claim_title,\n" + "        la.claim_amount,\n" + "        la.ca_from_dt,\n" + "        la.ca_to_dt,\n" + "        la.claim_status,\n" + "        la.circulated_to,\n" + "        e.emp_code,\n" + "        '-' as emp_photo,\n" + "        CONCAT(e.surname,\n" + "        \" \",\n" + "        e.first_name) AS emp_name,\n" + "        le.ca_ini_auth_emp_id,\n" + "        le.ca_fin_auth_emp_id,\n" + "        la.ex_var1 ,\n" + "        '-' as project_title \n" + "    FROM\n" + "        claim_apply_header la,\n" + "        claim_authority le,\n" + "        m_employees  e\n" + "     WHERE\n" + "        le.emp_id = la.emp_id \n" + "        AND e.emp_id = le.emp_id \n" + "        AND la.claim_status in (1,2) and la.emp_id =:empId\n" + "      ", nativeQuery = true)
public List<GetClaimApplyAuthwise> getClaimStatusList(int empId)


@Query(value = "SELECT\n" + "        la.claim_id,\n" + "        la.project_id,\n" + "        la.emp_id,\n" + "        la.claim_type_id,\n" + "        la.claim_amount,\n" + "        la.claim_remarks,\n" + "        la.claim_date,\n" + "        la.circulated_to,\n" + "        e.emp_code,\n" + "        e.emp_photo,\n" + "        CONCAT(e.emp_sname,\n" + "        \\\" \\\",\n" + "        e.emp_fname) AS emp_name,\n" + "        0 as ca_ini_auth_emp_id,\n" + "        0 as ca_fin_auth_emp_id,\n" + "        la.ex_int1 ,\n" + "        lt.claim_type_title as claim_type_name,\n" + "        h.project_title     \n" + "    FROM\n" + "        claim_type lt,\n" + "        claim_apply la,\n" + "     \n" + "        emp_info e,\n" + "        project_header h  \n" + "    WHERE\n" + "        la.claim_type_id = lt.claim_type_id \n" + "     \n" + "        AND la.project_id=h.project_id and la.emp_id=e.emp_id and la.claim_id=:claimId ", nativeQuery = true)
public GetClaimApplyAuthwise getClaimApplyDetails(int claimId)


@Query(value = " SELECT\n" + "        la.ca_head_id,\n" + "        '0' as proj_id,\n" + "        la.emp_id,\n" + "        la.claim_title,\n" + "        la.claim_amount,\n" + "        la.ca_from_dt,\n" + "        la.ca_to_dt,\n" + "        la.claim_status,\n" + "        la.circulated_to,\n" + "        e.emp_code,\n" + "        '-' as emp_photo,\n" + "        CONCAT(e.surname,\n" + "        \" \",\n" + "        e.first_name) AS emp_name,\n" + "        le.ca_ini_auth_emp_id,\n" + "        le.ca_fin_auth_emp_id,\n" + "        la.ex_var1 ,\n" + "        '-' as project_title \n" + "    FROM\n" + "        claim_apply_header la,\n" + "        claim_authority le,\n" + "        m_employees  e\n" + "     WHERE\n" + "         le.emp_id = la.emp_id          \n" + "        AND e.emp_id = le.emp_id          \n" + "        AND(\n" + "            (\n" + "                le.ca_ini_auth_emp_id=:empId                  \n" + "                AND la.claim_status = 2                   \n" + "                AND le.ca_fin_auth_emp_id != le.ca_ini_auth_emp_id                       \n" + "            )              \n" + "            OR(\n" + "                le.ca_fin_auth_emp_id=:empId                  \n" + "                AND la.claim_status = 1                   \n" + "                AND le.ca_fin_auth_emp_id != le.ca_ini_auth_emp_id                       \n" + "            ) ) ", nativeQuery = true)
public List<GetClaimApplyAuthwise> getClaimApplyList2(int empId)


@Query(value = "  SELECT\n" + "        la.ca_head_id,\n" + "        '0' as proj_id,\n" + "        la.emp_id,\n" + "        la.claim_title,\n" + "        la.claim_amount,\n" + "        la.ca_from_dt,\n" + "        la.ca_to_dt,\n" + "        la.claim_status,\n" + "        la.circulated_to,\n" + "        e.emp_code,\n" + "        '-' as emp_photo,\n" + "        CONCAT(e.surname,\n" + "        \" \",\n" + "        e.first_name) AS emp_name,\n" + "        le.ca_ini_auth_emp_id,\n" + "        le.ca_fin_auth_emp_id,\n" + "        la.ex_var1 ,\n" + "        '-' as project_title \n" + "    FROM\n" + "        claim_apply_header la,\n" + "        claim_authority le,\n" + "        m_employees  e\n" + "     WHERE\n" + "        le.emp_id = la.emp_id \n" + "        AND e.emp_id = le.emp_id \n" + "        AND(\n" + "            (\n" + "                le.ca_ini_auth_emp_id =:empId \n" + "                AND la.claim_status = 1         \n" + "            ) \n" + "            OR(\n" + "                le.ca_fin_auth_emp_id =:empId \n" + "                AND la.claim_status = 2         \n" + "            )     \n" + "        ) \n" + "      ", nativeQuery = true)
public List<GetClaimApplyAuthwise> getClaimApplyList(int empId)


@Query(value = "SELECT\n" + "        la.ca_head_id,\n" + "        la.proj_id,\n" + "        la.emp_id,\n" + "        la.claim_title,\n" + "        la.claim_amount,\n" + "        la.ca_from_dt,\n" + "        la.ca_to_dt,\n" + "        la.claim_status,\n" + "        la.circulated_to,\n" + "        e.emp_code,\n" + "        e.emp_photo,\n" + "        CONCAT(e.emp_sname,\n" + "        \" \",\n" + "        e.emp_fname) AS emp_name,\n" + "        0 as ca_ini_auth_emp_id,\n" + "        0 as ca_fin_auth_emp_id,\n" + "        la.ex_var1 ,\n" + "        h.project_title \n" + "    FROM\n" + "        claim_apply_header la,\n" + "        emp_info e,\n" + "        project_header h \n" + "    WHERE\n" + "         e.emp_id = la.emp_id \n" + "        AND h.project_manager_emp_id in(:empId)\n" + "        AND la.proj_id = h.project_id\n" + "        and claim_status=1 and h.project_manager_emp_id!=la.emp_id", nativeQuery = true)
public List<GetClaimApplyAuthwise> getClaimApplyListForPendingForManager(int empId)


}